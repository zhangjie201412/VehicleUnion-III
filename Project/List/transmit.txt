; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\transmit.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\transmit.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\transmit.crf ..\PAL\transmit.c]
                          THUMB

                          AREA ||i.heartbeat_task||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  heartbeat_task PROC
;;;229    
;;;230    void heartbeat_task(void *unused)
000000  b50e              PUSH     {r1-r3,lr}
;;;231    {
;;;232        OS_ERR err;
;;;233        static bool logined = FALSE;
;;;234        uint8_t login_retry_count = 0;
000002  2600              MOVS     r6,#0
;;;235    
;;;236        while(1) {
;;;237            //set the wdg feed flag
;;;238            OSFlagPost(
;;;239                    (OS_FLAG_GRP *)&FLAG_TaskRunStatus,
;;;240                    (OS_FLAGS)FLAG_HEARTBEAT,
;;;241                    (OS_OPT)OS_OPT_POST_FLAG_SET,
;;;242                    (OS_ERR *)&err
;;;243                    );
;;;244    #ifdef SERVER_IS_K
;;;245            if(!is_connected()) {
;;;246                xdelay(2);
;;;247                continue;
;;;248            }
;;;249            if(!logined) {
000004  4c7a              LDR      r4,|L1.496|
;;;250                login();
;;;251                //wait for login rsp
;;;252                OSTaskSemPend(
;;;253                        OS_CFG_TICK_RATE_HZ * LOGIN_RSP_TIMEOUT,
;;;254                        OS_OPT_PEND_BLOCKING,
;;;255                        0,
;;;256                        &err
;;;257                        );
;;;258                if(err == OS_ERR_TIMEOUT) {
;;;259                    loge("##wait for login timeout");
000006  4f7b              LDR      r7,|L1.500|
000008  f2472ad9          MOV      r10,#0x72d9           ;258
00000c  46b1              MOV      r9,r6                 ;258
00000e  f2413588          MOV      r5,#0x1388
000012  f04f0805          MOV      r8,#5
                  |L1.22|
000016  ab02              ADD      r3,sp,#8              ;238
000018  2200              MOVS     r2,#0                 ;238
00001a  2101              MOVS     r1,#1                 ;238
00001c  4876              LDR      r0,|L1.504|
00001e  f7fffffe          BL       OSFlagPost
000022  f7fffffe          BL       is_connected
000026  b110              CBZ      r0,|L1.46|
000028  78a0              LDRB     r0,[r4,#2]            ;249  ; logined
00002a  b120              CBZ      r0,|L1.54|
00002c  e057              B        |L1.222|
                  |L1.46|
00002e  2002              MOVS     r0,#2                 ;246
000030  f7fffffe          BL       xdelay
000034  e7ef              B        |L1.22|
                  |L1.54|
000036  f7fffffe          BL       login
00003a  2200              MOVS     r2,#0                 ;252
00003c  ab02              ADD      r3,sp,#8              ;252
00003e  4611              MOV      r1,r2                 ;252
000040  f24c3050          MOV      r0,#0xc350            ;252
000044  f7fffffe          BL       OSTaskSemPend
000048  f8bd1008          LDRH     r1,[sp,#8]            ;258
;;;260                    loge("##retry##");
;;;261                    if(login_retry_count ++ > 10) {
;;;262                        loge("login retry %d times, reboot system", login_retry_count);
;;;263                        SystemReset();
;;;264                    }
;;;265                    continue;
;;;266                } else {
;;;267                    logi("get login rsp!");
00004c  4668              MOV      r0,sp
00004e  4551              CMP      r1,r10                ;258
000050  d134              BNE      |L1.188|
000052  f7fffffe          BL       OSTimeGet
000056  7839              LDRB     r1,[r7,#0]            ;259  ; DEBUG_MODE
000058  07c9              LSLS     r1,r1,#31             ;259
00005a  d008              BEQ      |L1.110|
00005c  fbb0f1f5          UDIV     r1,r0,r5              ;259
000060  fb050211          MLS      r2,r5,r1,r0           ;259
000064  fbb2f2f8          UDIV     r2,r2,r8              ;259
000068  a064              ADR      r0,|L1.508|
00006a  f7fffffe          BL       __2printf
                  |L1.110|
00006e  4668              MOV      r0,sp                 ;260
000070  f7fffffe          BL       OSTimeGet
000074  7839              LDRB     r1,[r7,#0]            ;260  ; DEBUG_MODE
000076  07c9              LSLS     r1,r1,#31             ;260
000078  d008              BEQ      |L1.140|
00007a  fbb0f1f5          UDIV     r1,r0,r5              ;260
00007e  fb050211          MLS      r2,r5,r1,r0           ;260
000082  fbb2f2f8          UDIV     r2,r2,r8              ;260
000086  a068              ADR      r0,|L1.552|
000088  f7fffffe          BL       __2printf
                  |L1.140|
00008c  4630              MOV      r0,r6                 ;261
00008e  1c76              ADDS     r6,r6,#1              ;261
000090  b2f6              UXTB     r6,r6                 ;261
000092  280a              CMP      r0,#0xa               ;261
000094  d9bf              BLS      |L1.22|
000096  4668              MOV      r0,sp                 ;262
000098  f7fffffe          BL       OSTimeGet
00009c  7839              LDRB     r1,[r7,#0]            ;262  ; DEBUG_MODE
00009e  07c9              LSLS     r1,r1,#31             ;262
0000a0  d009              BEQ      |L1.182|
0000a2  fbb0f1f5          UDIV     r1,r0,r5              ;262
0000a6  fb050211          MLS      r2,r5,r1,r0           ;262
0000aa  fbb2f2f8          UDIV     r2,r2,r8              ;262
0000ae  4633              MOV      r3,r6                 ;262
0000b0  a064              ADR      r0,|L1.580|
0000b2  f7fffffe          BL       __2printf
                  |L1.182|
0000b6  f7fffffe          BL       SystemReset
0000ba  e7ac              B        |L1.22|
                  |L1.188|
0000bc  f7fffffe          BL       OSTimeGet
0000c0  7839              LDRB     r1,[r7,#0]  ; DEBUG_MODE
0000c2  0789              LSLS     r1,r1,#30
0000c4  d508              BPL      |L1.216|
0000c6  fbb0f1f5          UDIV     r1,r0,r5
0000ca  fb050211          MLS      r2,r5,r1,r0
0000ce  fbb2f2f8          UDIV     r2,r2,r8
0000d2  a06a              ADR      r0,|L1.636|
0000d4  f7fffffe          BL       __2printf
                  |L1.216|
;;;268                    logined = TRUE;
0000d8  2001              MOVS     r0,#1
0000da  70a0              STRB     r0,[r4,#2]
;;;269                    login_retry_count = 0;
0000dc  2600              MOVS     r6,#0
                  |L1.222|
;;;270                }
;;;271            }
;;;272    #elif defined SERVER_IS_VEHICLE_UNION
;;;273            logined = TRUE;
;;;274    #endif
;;;275            OSTimeDlyHMSM(0, 0, HEARTBEAT_INTERVAL,
0000de  a902              ADD      r1,sp,#8
0000e0  e9cd9100          STRD     r9,r1,[sp,#0]
0000e4  2300              MOVS     r3,#0
0000e6  220a              MOVS     r2,#0xa
0000e8  4619              MOV      r1,r3
0000ea  4618              MOV      r0,r3
0000ec  f7fffffe          BL       OSTimeDlyHMSM
;;;276                    0, OS_OPT_TIME_HMSM_STRICT, &err);
;;;277            if(is_connected() && logined){
0000f0  f7fffffe          BL       is_connected
0000f4  2800              CMP      r0,#0
0000f6  d06b              BEQ      |L1.464|
0000f8  78a0              LDRB     r0,[r4,#2]  ; logined
0000fa  2800              CMP      r0,#0
0000fc  d068              BEQ      |L1.464|
;;;278                heartbeat_count = (heartbeat_count == 100) ? 0 : heartbeat_count;
0000fe  7820              LDRB     r0,[r4,#0]  ; heartbeat_count
000100  2864              CMP      r0,#0x64
000102  d100              BNE      |L1.262|
000104  2000              MOVS     r0,#0
                  |L1.262|
000106  7020              STRB     r0,[r4,#0]
;;;279                transmit_lock();
000108  f7fffffe          BL       transmit_lock
;;;280                //get signal
;;;281                logi("signal = %d", l206_get_signal());
00010c  4668              MOV      r0,sp
00010e  f7fffffe          BL       OSTimeGet
000112  4683              MOV      r11,r0
000114  7838              LDRB     r0,[r7,#0]  ; DEBUG_MODE
000116  0780              LSLS     r0,r0,#30
000118  d50b              BPL      |L1.306|
00011a  f7fffffe          BL       l206_get_signal
00011e  fbbbf1f5          UDIV     r1,r11,r5
000122  4603              MOV      r3,r0
000124  fb05b011          MLS      r0,r5,r1,r11
000128  fbb0f2f8          UDIV     r2,r0,r8
00012c  a05b              ADR      r0,|L1.668|
00012e  f7fffffe          BL       __2printf
                  |L1.306|
;;;282                heartbeat(heartbeat_count++);
000132  7820              LDRB     r0,[r4,#0]  ; heartbeat_count
000134  1c41              ADDS     r1,r0,#1
000136  7021              STRB     r1,[r4,#0]
000138  f7fffffe          BL       heartbeat
;;;283                //wait for heartbeat rsp
;;;284                OSTaskSemPend(
00013c  2200              MOVS     r2,#0
00013e  ab02              ADD      r3,sp,#8
000140  4611              MOV      r1,r2
000142  f6494040          MOV      r0,#0x9c40
000146  f7fffffe          BL       OSTaskSemPend
;;;285                        OS_CFG_TICK_RATE_HZ * HEARTBEAT_RSP_TIMEOUT,
;;;286                        OS_OPT_PEND_BLOCKING,
;;;287                        0,
;;;288                        &err
;;;289                        );
;;;290                if(err == OS_ERR_TIMEOUT) {
00014a  f8bd1008          LDRH     r1,[sp,#8]
00014e  4551              CMP      r1,r10
000150  d139              BNE      |L1.454|
;;;291                    loge("##wait for heartbeat timeout");
000152  4668              MOV      r0,sp
000154  f7fffffe          BL       OSTimeGet
000158  7839              LDRB     r1,[r7,#0]  ; DEBUG_MODE
00015a  07c9              LSLS     r1,r1,#31
00015c  d008              BEQ      |L1.368|
00015e  fbb0f1f5          UDIV     r1,r0,r5
000162  fb050211          MLS      r2,r5,r1,r0
000166  fbb2f2f8          UDIV     r2,r2,r8
00016a  a054              ADR      r0,|L1.700|
00016c  f7fffffe          BL       __2printf
                  |L1.368|
;;;292                    loge("##need to re-connect to server");
000170  4668              MOV      r0,sp
000172  f7fffffe          BL       OSTimeGet
000176  7839              LDRB     r1,[r7,#0]  ; DEBUG_MODE
000178  07c9              LSLS     r1,r1,#31
00017a  d008              BEQ      |L1.398|
00017c  fbb0f1f5          UDIV     r1,r0,r5
000180  fb050211          MLS      r2,r5,r1,r0
000184  fbb2f2f8          UDIV     r2,r2,r8
000188  a058              ADR      r0,|L1.748|
00018a  f7fffffe          BL       __2printf
                  |L1.398|
;;;293                    if(++heartbeat_fail_times > HEARTBEAT_FAIL_TOLERENT) {
00018e  7860              LDRB     r0,[r4,#1]  ; heartbeat_fail_times
000190  1c40              ADDS     r0,r0,#1
000192  b2c0              UXTB     r0,r0
000194  7060              STRB     r0,[r4,#1]
000196  2803              CMP      r0,#3
000198  d917              BLS      |L1.458|
;;;294                        heartbeat_fail_times = 0;
00019a  f8849001          STRB     r9,[r4,#1]
;;;295                        //transmit_reconnect();
;;;296                        //temp solution
;;;297                        loge("##SYSTEM REBOOT##");
00019e  4668              MOV      r0,sp
0001a0  f7fffffe          BL       OSTimeGet
0001a4  7839              LDRB     r1,[r7,#0]  ; DEBUG_MODE
0001a6  07c9              LSLS     r1,r1,#31
0001a8  d008              BEQ      |L1.444|
0001aa  fbb0f1f5          UDIV     r1,r0,r5
0001ae  fb050211          MLS      r2,r5,r1,r0
0001b2  fbb2f2f8          UDIV     r2,r2,r8
0001b6  a059              ADR      r0,|L1.796|
0001b8  f7fffffe          BL       __2printf
                  |L1.444|
;;;298                        l206_powerdown();
0001bc  f7fffffe          BL       l206_powerdown
;;;299                        SystemReset();
0001c0  f7fffffe          BL       SystemReset
0001c4  e001              B        |L1.458|
                  |L1.454|
;;;300                    }
;;;301                } else {
;;;302                    //logi("get heart beat rsp!");
;;;303                    heartbeat_fail_times = 0;
0001c6  f8849001          STRB     r9,[r4,#1]
                  |L1.458|
;;;304                }
;;;305                transmit_unlock();
0001ca  f7fffffe          BL       transmit_unlock
                  |L1.462|
0001ce  e722              B        |L1.22|
                  |L1.464|
;;;306            } else {
;;;307                loge("gprs is not connect to server");
0001d0  4668              MOV      r0,sp
0001d2  f7fffffe          BL       OSTimeGet
0001d6  7839              LDRB     r1,[r7,#0]  ; DEBUG_MODE
0001d8  07c9              LSLS     r1,r1,#31
0001da  d0f8              BEQ      |L1.462|
0001dc  fbb0f1f5          UDIV     r1,r0,r5
0001e0  fb050211          MLS      r2,r5,r1,r0
0001e4  fbb2f2f8          UDIV     r2,r2,r8
0001e8  a055              ADR      r0,|L1.832|
0001ea  f7fffffe          BL       __2printf
0001ee  e712              B        |L1.22|
;;;308            }
;;;309        }
;;;310    }
;;;311    
                          ENDP

                  |L1.496|
                          DCD      ||.data||
                  |L1.500|
                          DCD      DEBUG_MODE
                  |L1.504|
                          DCD      FLAG_TaskRunStatus
                  |L1.508|
0001fc  5b253035          DCB      "[%05d.%03d/E]: ##wait for login timeout\r\n",0
000200  642e2530
000204  33642f45
000208  5d3a2023
00020c  23776169
000210  7420666f
000214  72206c6f
000218  67696e20
00021c  74696d65
000220  6f75740d
000224  0a00    
000226  00                DCB      0
000227  00                DCB      0
                  |L1.552|
000228  5b253035          DCB      "[%05d.%03d/E]: ##retry##\r\n",0
00022c  642e2530
000230  33642f45
000234  5d3a2023
000238  23726574
00023c  72792323
000240  0d0a00  
000243  00                DCB      0
                  |L1.580|
000244  5b253035          DCB      "[%05d.%03d/E]: login retry %d times, reboot system\r\n",0
000248  642e2530
00024c  33642f45
000250  5d3a206c
000254  6f67696e
000258  20726574
00025c  72792025
000260  64207469
000264  6d65732c
000268  20726562
00026c  6f6f7420
000270  73797374
000274  656d0d0a
000278  00      
000279  00                DCB      0
00027a  00                DCB      0
00027b  00                DCB      0
                  |L1.636|
00027c  5b253035          DCB      "[%05d.%03d/I]: get login rsp!\r\n",0
000280  642e2530
000284  33642f49
000288  5d3a2067
00028c  6574206c
000290  6f67696e
000294  20727370
000298  210d0a00
                  |L1.668|
00029c  5b253035          DCB      "[%05d.%03d/I]: signal = %d\r\n",0
0002a0  642e2530
0002a4  33642f49
0002a8  5d3a2073
0002ac  69676e61
0002b0  6c203d20
0002b4  25640d0a
0002b8  00      
0002b9  00                DCB      0
0002ba  00                DCB      0
0002bb  00                DCB      0
                  |L1.700|
0002bc  5b253035          DCB      "[%05d.%03d/E]: ##wait for heartbeat timeout\r\n",0
0002c0  642e2530
0002c4  33642f45
0002c8  5d3a2023
0002cc  23776169
0002d0  7420666f
0002d4  72206865
0002d8  61727462
0002dc  65617420
0002e0  74696d65
0002e4  6f75740d
0002e8  0a00    
0002ea  00                DCB      0
0002eb  00                DCB      0
                  |L1.748|
0002ec  5b253035          DCB      "[%05d.%03d/E]: ##need to re-connect to server\r\n",0
0002f0  642e2530
0002f4  33642f45
0002f8  5d3a2023
0002fc  236e6565
000300  6420746f
000304  2072652d
000308  636f6e6e
00030c  65637420
000310  746f2073
000314  65727665
000318  720d0a00
                  |L1.796|
00031c  5b253035          DCB      "[%05d.%03d/E]: ##SYSTEM REBOOT##\r\n",0
000320  642e2530
000324  33642f45
000328  5d3a2023
00032c  23535953
000330  54454d20
000334  5245424f
000338  4f542323
00033c  0d0a00  
00033f  00                DCB      0
                  |L1.832|
000340  5b253035          DCB      "[%05d.%03d/E]: gprs is not connect to server\r\n",0
000344  642e2530
000348  33642f45
00034c  5d3a2067
000350  70727320
000354  6973206e
000358  6f742063
00035c  6f6e6e65
000360  63742074
000364  6f207365
000368  72766572
00036c  0d0a00  
00036f  00                DCB      0

                          AREA ||i.transmit_callback_task||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  transmit_callback_task PROC
;;;108    
;;;109    void transmit_callback_task(void *unused)
000000  b0c6              SUB      sp,sp,#0x118
;;;110    {
;;;111        uint8_t i;
;;;112        cJSON *json, *item;
;;;113        OS_ERR err;
;;;114        uint8_t buf[256];
;;;115        uint16_t index = 0;
;;;116        uint8_t recv;
;;;117        uint8_t msg_type;
;;;118        uint8_t heartbeat_rsp;
;;;119        CtrlMsg ctrlMsg;
;;;120        int cmd_id, ctrl_val;
;;;121        char *tmp;
;;;122    
;;;123        memset(&ctrlMsg, 0x00, sizeof(ctrlMsg));
000002  2000              MOVS     r0,#0
;;;124    
;;;125        while(1) {
;;;126            OSTaskSemPend(0, OS_OPT_PEND_BLOCKING, 0, &err);
;;;127            memset(buf, 0x00, 256);
;;;128            index = 0;
;;;129            while(!rb_is_empty(&mRb)) {
;;;130                rb_get(&mRb, &recv, 1);
;;;131                buf[index ++] = recv;
;;;132            }
;;;133            //logi("%s: %s", __func__, buf);
;;;134            json = cJSON_Parse((const char *)buf);
;;;135            if(!json) {
;;;136                loge("[%s]", cJSON_GetErrorPtr());
;;;137            } else {
;;;138                msg_type = json_get_msg_type(json);
;;;139                //logi("msg_type = %d", msg_type);
;;;140    
;;;141                switch(msg_type) {
;;;142                    case MSG_TYPE_HEARTBEAT_RSP:
;;;143                        heartbeat_rsp = json_get_heartbeat(json);
;;;144                        if(((heartbeat_count - 1) * 2 + 1) == heartbeat_rsp) {
;;;145                            //post heart pend
;;;146                            OSTaskSemPost(&HeartbeatTaskTCB,
;;;147                                    OS_OPT_POST_NONE, &err);
;;;148                        } else {
;;;149                            loge("failed to get heartbeat response");
;;;150                        }
;;;151                        break;
;;;152                    case MSG_TYPE_CTRL:
;;;153    #ifdef SERVER_IS_K
;;;154                        item = cJSON_GetObjectItem(json, KEY_CMD_ID);
;;;155                        cmd_id = item->valueint;
;;;156    #endif
;;;157    
;;;158                        for(i = 0; i < CONTROL_END; i++) {
;;;159                            tmp = strstr((char *)buf, ctrlTable[i].key);
000004  f8dfb278          LDR      r11,|L2.640|
000008  4d9e              LDR      r5,|L2.644|
00000a  9041              STR      r0,[sp,#0x104]        ;123
00000c  9042              STR      r0,[sp,#0x108]        ;123
00000e  f2413988          MOV      r9,#0x1388            ;136
000012  f04f0a05          MOV      r10,#5                ;136
000016  9043              STR      r0,[sp,#0x10c]        ;136
                  |L2.24|
000018  2200              MOVS     r2,#0                 ;126
00001a  ab45              ADD      r3,sp,#0x114          ;126
00001c  4611              MOV      r1,r2                 ;126
00001e  4610              MOV      r0,r2                 ;126
000020  f7fffffe          BL       OSTaskSemPend
000024  f44f7180          MOV      r1,#0x100             ;127
000028  a801              ADD      r0,sp,#4              ;127
00002a  f7fffffe          BL       __aeabi_memclr4
00002e  2400              MOVS     r4,#0                 ;128
000030  ae01              ADD      r6,sp,#4              ;114
000032  e009              B        |L2.72|
                  |L2.52|
000034  2201              MOVS     r2,#1                 ;130
000036  a944              ADD      r1,sp,#0x110          ;130
000038  4893              LDR      r0,|L2.648|
00003a  f7fffffe          BL       rb_get
00003e  f89d0110          LDRB     r0,[sp,#0x110]        ;131
000042  5530              STRB     r0,[r6,r4]            ;131
000044  1c64              ADDS     r4,r4,#1              ;131
000046  b2a4              UXTH     r4,r4                 ;131
                  |L2.72|
000048  488f              LDR      r0,|L2.648|
00004a  f7fffffe          BL       rb_is_empty
00004e  2800              CMP      r0,#0                 ;129
000050  d0f0              BEQ      |L2.52|
000052  a801              ADD      r0,sp,#4              ;134
000054  f7fffffe          BL       cJSON_Parse
000058  0007              MOVS     r7,r0                 ;134
00005a  d00a              BEQ      |L2.114|
00005c  f7fffffe          BL       json_get_msg_type
000060  2801              CMP      r0,#1                 ;141
000062  d01a              BEQ      |L2.154|
000064  2802              CMP      r0,#2                 ;141
000066  d03a              BEQ      |L2.222|
000068  2806              CMP      r0,#6                 ;141
00006a  d072              BEQ      |L2.338|
00006c  280a              CMP      r0,#0xa               ;141
00006e  d172              BNE      |L2.342|
000070  e075              B        |L2.350|
                  |L2.114|
000072  4668              MOV      r0,sp                 ;136
000074  f7fffffe          BL       OSTimeGet
000078  4604              MOV      r4,r0                 ;136
00007a  7828              LDRB     r0,[r5,#0]            ;136  ; DEBUG_MODE
00007c  07c0              LSLS     r0,r0,#31             ;136
00007e  d0cb              BEQ      |L2.24|
000080  f7fffffe          BL       cJSON_GetErrorPtr
000084  fbb4f1f9          UDIV     r1,r4,r9              ;136
000088  fb094211          MLS      r2,r9,r1,r4           ;136
00008c  fbb2f2fa          UDIV     r2,r2,r10             ;136
000090  4603              MOV      r3,r0                 ;136
000092  a07e              ADR      r0,|L2.652|
000094  f7fffffe          BL       __2printf
000098  e7be              B        |L2.24|
                  |L2.154|
00009a  4638              MOV      r0,r7                 ;143
00009c  f7fffffe          BL       json_get_heartbeat
0000a0  4977              LDR      r1,|L2.640|
0000a2  f04f32ff          MOV      r2,#0xffffffff        ;144
0000a6  1f89              SUBS     r1,r1,#6              ;144
0000a8  7809              LDRB     r1,[r1,#0]            ;144  ; heartbeat_count
0000aa  eb020141          ADD      r1,r2,r1,LSL #1       ;144
0000ae  4281              CMP      r1,r0                 ;144
0000b0  d105              BNE      |L2.190|
                  |L2.178|
0000b2  aa45              ADD      r2,sp,#0x114          ;146
0000b4  2100              MOVS     r1,#0                 ;146
0000b6  487b              LDR      r0,|L2.676|
0000b8  f7fffffe          BL       OSTaskSemPost
0000bc  e04b              B        |L2.342|
                  |L2.190|
0000be  4668              MOV      r0,sp                 ;149
0000c0  f7fffffe          BL       OSTimeGet
0000c4  7829              LDRB     r1,[r5,#0]            ;149  ; DEBUG_MODE
0000c6  07c9              LSLS     r1,r1,#31             ;149
0000c8  d045              BEQ      |L2.342|
0000ca  fbb0f1f9          UDIV     r1,r0,r9              ;149
0000ce  fb090011          MLS      r0,r9,r1,r0           ;149
0000d2  fbb0f2fa          UDIV     r2,r0,r10             ;149
0000d6  a074              ADR      r0,|L2.680|
0000d8  f7fffffe          BL       __2printf
0000dc  e03b              B        |L2.342|
                  |L2.222|
0000de  a17f              ADR      r1,|L2.732|
0000e0  4638              MOV      r0,r7                 ;154
0000e2  f7fffffe          BL       cJSON_GetObjectItem
0000e6  f8d08014          LDR      r8,[r0,#0x14]         ;158
0000ea  2400              MOVS     r4,#0                 ;158
                  |L2.236|
0000ec  eb041144          ADD      r1,r4,r4,LSL #5
0000f0  eb01060b          ADD      r6,r1,r11
0000f4  1c71              ADDS     r1,r6,#1
0000f6  a801              ADD      r0,sp,#4
0000f8  f7fffffe          BL       strstr
;;;160                            if(tmp) {
0000fc  b318              CBZ      r0,|L2.326|
;;;161                                item = cJSON_GetObjectItem(json,
0000fe  1c71              ADDS     r1,r6,#1
000100  4638              MOV      r0,r7
000102  f7fffffe          BL       cJSON_GetObjectItem
;;;162                                        ctrlTable[i].key);
;;;163    #ifdef SERVER_IS_K
;;;164                                ctrl_val = item->valueint;
000106  7d00              LDRB     r0,[r0,#0x14]
;;;165                                ctrlMsg.id = i;
;;;166                                ctrlMsg.cmd_id = cmd_id;
;;;167                                ctrlMsg.value = ctrl_val;
000108  f88d010c          STRB     r0,[sp,#0x10c]
00010c  f88d4104          STRB     r4,[sp,#0x104]        ;165
000110  f8cd8108          STR      r8,[sp,#0x108]
;;;168    #elif defined SERVER_IS_VEHICLE_UNION
;;;169                                ctrlMsg.id = i;
;;;170                                ctrlMsg.cmd_id = 0;
;;;171                                if(!strcmp(item->valuestring, "ON")) {
;;;172                                    ctrlMsg.value = 1;
;;;173                                } else if(!strcmp(item->valuestring, "OFF")) {
;;;174                                    ctrlMsg.value = 0;
;;;175                                }
;;;176    #endif
;;;177                                logi("ctrl value = %d", ctrlMsg.value);
000114  4668              MOV      r0,sp
000116  f7fffffe          BL       OSTimeGet
00011a  7829              LDRB     r1,[r5,#0]  ; DEBUG_MODE
00011c  0789              LSLS     r1,r1,#30
00011e  d50a              BPL      |L2.310|
000120  fbb0f1f9          UDIV     r1,r0,r9
000124  fb090211          MLS      r2,r9,r1,r0
000128  fbb2f2fa          UDIV     r2,r2,r10
00012c  f89d310c          LDRB     r3,[sp,#0x10c]
000130  a06c              ADR      r0,|L2.740|
000132  f7fffffe          BL       __2printf
                  |L2.310|
;;;178                                //post msg to vehicle control thread
;;;179                                OSTaskQPost(
000136  a845              ADD      r0,sp,#0x114
000138  9000              STR      r0,[sp,#0]
00013a  2300              MOVS     r3,#0
00013c  220c              MOVS     r2,#0xc
00013e  a941              ADD      r1,sp,#0x104
000140  4871              LDR      r0,|L2.776|
000142  f7fffffe          BL       OSTaskQPost
                  |L2.326|
000146  1c64              ADDS     r4,r4,#1              ;158
000148  b2e4              UXTB     r4,r4                 ;158
00014a  2c07              CMP      r4,#7                 ;158
00014c  d3ce              BCC      |L2.236|
00014e  e002              B        |L2.342|
000150  e7ff              B        |L2.338|
                  |L2.338|
;;;180                                        (OS_TCB *)&ControlTaskTCB,
;;;181                                        (void *)&ctrlMsg,
;;;182                                        (OS_MSG_SIZE)sizeof(CtrlMsg),
;;;183                                        (OS_OPT)OS_OPT_POST_FIFO,
;;;184                                        (OS_ERR *)&err
;;;185                                        );
;;;186                            }
;;;187                        }
;;;188                        break;
;;;189                    case MSG_TYPE_CLEAR_FAULT:
;;;190                        vehicle_clear_code();
000152  f7fffffe          BL       vehicle_clear_code
                  |L2.342|
;;;191                        break;
;;;192                    case MSG_TYPE_VEHICLE_TYPE:
;;;193                        item = cJSON_GetObjectItem(json, KEY_VEHICLE_TYPE);
;;;194                        if(!strcmp(item->valuestring, "toyota")) {
;;;195                            logi("##TOYOTA##");
;;;196                            vehicle_setup(VEHICLE_TOYOTA);
;;;197                            flexcan_set_engine_id(0x7e8);
;;;198                        } else if(!strcmp(item->valuestring, "gm")) {
;;;199                            logi("##GM##");
;;;200                            vehicle_setup(VEHICLE_GM);
;;;201                            flexcan_set_engine_id(0x7e8);
;;;202                        } else if(!strcmp(item->valuestring, "vag1")) {
;;;203                            logi("##VAG1##");
;;;204                            vehicle_setup(VEHICLE_VAG);
;;;205                        } else if(!strcmp(item->valuestring, "vag")) {
;;;206                            logi("##PASSAT##");
;;;207                            vehicle_setup(VEHICLE_PASSAT);
;;;208                        } else if(!strcmp(item->valuestring, "greatwall")) {
;;;209                            logi("##HAVAL##");
;;;210                            vehicle_setup(VEHICLE_HAVAL);
;;;211                        }
;;;212                        else {
;;;213                            logi("##EOBD##");
;;;214                            vehicle_setup(VEHICLE_EOBD);
;;;215                            flexcan_set_engine_id(0x7e8);
;;;216                        }
;;;217                        //post heart pend
;;;218                        OSTaskSemPost(&HeartbeatTaskTCB,
;;;219                                OS_OPT_POST_NONE, &err);
;;;220                        break;
;;;221                    default:
;;;222                        break;
;;;223                }
;;;224    
;;;225                cJSON_Delete(json);
000156  4638              MOV      r0,r7
000158  f7fffffe          BL       cJSON_Delete
00015c  e75c              B        |L2.24|
                  |L2.350|
00015e  a16b              ADR      r1,|L2.780|
000160  4638              MOV      r0,r7                 ;193
000162  f7fffffe          BL       cJSON_GetObjectItem
000166  4604              MOV      r4,r0                 ;193
000168  6900              LDR      r0,[r0,#0x10]         ;194
00016a  a16a              ADR      r1,|L2.788|
00016c  f7fffffe          BL       strcmp
000170  b378              CBZ      r0,|L2.466|
000172  a16a              ADR      r1,|L2.796|
000174  6920              LDR      r0,[r4,#0x10]         ;198
000176  f7fffffe          BL       strcmp
00017a  2800              CMP      r0,#0                 ;198
00017c  d03b              BEQ      |L2.502|
00017e  a168              ADR      r1,|L2.800|
000180  6920              LDR      r0,[r4,#0x10]         ;202
000182  f7fffffe          BL       strcmp
000186  2800              CMP      r0,#0                 ;202
000188  d046              BEQ      |L2.536|
00018a  a167              ADR      r1,|L2.808|
00018c  6920              LDR      r0,[r4,#0x10]         ;205
00018e  f7fffffe          BL       strcmp
000192  2800              CMP      r0,#0                 ;205
000194  d051              BEQ      |L2.570|
000196  a165              ADR      r1,|L2.812|
000198  6920              LDR      r0,[r4,#0x10]         ;208
00019a  f7fffffe          BL       strcmp
00019e  2800              CMP      r0,#0                 ;208
0001a0  4668              MOV      r0,sp                 ;213
0001a2  d05b              BEQ      |L2.604|
0001a4  f7fffffe          BL       OSTimeGet
0001a8  7829              LDRB     r1,[r5,#0]            ;213  ; DEBUG_MODE
0001aa  0789              LSLS     r1,r1,#30             ;213
0001ac  d508              BPL      |L2.448|
0001ae  fbb0f1f9          UDIV     r1,r0,r9              ;213
0001b2  fb090211          MLS      r2,r9,r1,r0           ;213
0001b6  fbb2f2fa          UDIV     r2,r2,r10             ;213
0001ba  a05f              ADR      r0,|L2.824|
0001bc  f7fffffe          BL       __2printf
                  |L2.448|
0001c0  f05f0005          MOVS.W   r0,#5                 ;214
                  |L2.452|
0001c4  f7fffffe          BL       vehicle_setup
0001c8  f44f60fd          MOV      r0,#0x7e8             ;215
0001cc  f7fffffe          BL       flexcan_set_engine_id
0001d0  e76f              B        |L2.178|
                  |L2.466|
0001d2  e7ff              B        |L2.468|
                  |L2.468|
0001d4  4668              MOV      r0,sp                 ;195
0001d6  f7fffffe          BL       OSTimeGet
0001da  7829              LDRB     r1,[r5,#0]            ;195  ; DEBUG_MODE
0001dc  0789              LSLS     r1,r1,#30             ;195
0001de  d508              BPL      |L2.498|
0001e0  fbb0f1f9          UDIV     r1,r0,r9              ;195
0001e4  fb090211          MLS      r2,r9,r1,r0           ;195
0001e8  fbb2f2fa          UDIV     r2,r2,r10             ;195
0001ec  a059              ADR      r0,|L2.852|
0001ee  f7fffffe          BL       __2printf
                  |L2.498|
0001f2  2000              MOVS     r0,#0                 ;196
0001f4  e7e6              B        |L2.452|
                  |L2.502|
0001f6  4668              MOV      r0,sp                 ;199
0001f8  f7fffffe          BL       OSTimeGet
0001fc  7829              LDRB     r1,[r5,#0]            ;199  ; DEBUG_MODE
0001fe  0789              LSLS     r1,r1,#30             ;199
000200  d508              BPL      |L2.532|
000202  fbb0f1f9          UDIV     r1,r0,r9              ;199
000206  fb090211          MLS      r2,r9,r1,r0           ;199
00020a  fbb2f2fa          UDIV     r2,r2,r10             ;199
00020e  a058              ADR      r0,|L2.880|
000210  f7fffffe          BL       __2printf
                  |L2.532|
000214  2001              MOVS     r0,#1                 ;200
000216  e7d5              B        |L2.452|
                  |L2.536|
000218  4668              MOV      r0,sp                 ;203
00021a  f7fffffe          BL       OSTimeGet
00021e  7829              LDRB     r1,[r5,#0]            ;203  ; DEBUG_MODE
000220  0789              LSLS     r1,r1,#30             ;203
000222  d508              BPL      |L2.566|
000224  fbb0f1f9          UDIV     r1,r0,r9              ;203
000228  fb090211          MLS      r2,r9,r1,r0           ;203
00022c  fbb2f2fa          UDIV     r2,r2,r10             ;203
000230  a055              ADR      r0,|L2.904|
000232  f7fffffe          BL       __2printf
                  |L2.566|
000236  2002              MOVS     r0,#2                 ;204
000238  e01f              B        |L2.634|
                  |L2.570|
00023a  4668              MOV      r0,sp                 ;206
00023c  f7fffffe          BL       OSTimeGet
000240  7829              LDRB     r1,[r5,#0]            ;206  ; DEBUG_MODE
000242  0789              LSLS     r1,r1,#30             ;206
000244  d508              BPL      |L2.600|
000246  fbb0f1f9          UDIV     r1,r0,r9              ;206
00024a  fb090211          MLS      r2,r9,r1,r0           ;206
00024e  fbb2f2fa          UDIV     r2,r2,r10             ;206
000252  a054              ADR      r0,|L2.932|
000254  f7fffffe          BL       __2printf
                  |L2.600|
000258  2003              MOVS     r0,#3                 ;207
00025a  e00e              B        |L2.634|
                  |L2.604|
00025c  f7fffffe          BL       OSTimeGet
000260  7829              LDRB     r1,[r5,#0]            ;209  ; DEBUG_MODE
000262  0789              LSLS     r1,r1,#30             ;209
000264  d508              BPL      |L2.632|
000266  fbb0f1f9          UDIV     r1,r0,r9              ;209
00026a  fb090211          MLS      r2,r9,r1,r0           ;209
00026e  fbb2f2fa          UDIV     r2,r2,r10             ;209
000272  a053              ADR      r0,|L2.960|
000274  f7fffffe          BL       __2printf
                  |L2.632|
000278  2004              MOVS     r0,#4                 ;210
                  |L2.634|
00027a  f7fffffe          BL       vehicle_setup
00027e  e718              B        |L2.178|
;;;226            }
;;;227        }
;;;228    }
;;;229    
                          ENDP

                  |L2.640|
                          DCD      ||.data||+0x6
                  |L2.644|
                          DCD      DEBUG_MODE
                  |L2.648|
                          DCD      mRb
                  |L2.652|
00028c  5b253035          DCB      "[%05d.%03d/E]: [%s]\r\n",0
000290  642e2530
000294  33642f45
000298  5d3a205b
00029c  25735d0d
0002a0  0a00    
0002a2  00                DCB      0
0002a3  00                DCB      0
                  |L2.676|
                          DCD      ||.bss||+0x10c4
                  |L2.680|
0002a8  5b253035          DCB      "[%05d.%03d/E]: failed to get heartbeat response\r\n",0
0002ac  642e2530
0002b0  33642f45
0002b4  5d3a2066
0002b8  61696c65
0002bc  6420746f
0002c0  20676574
0002c4  20686561
0002c8  72746265
0002cc  61742072
0002d0  6573706f
0002d4  6e73650d
0002d8  0a00    
0002da  00                DCB      0
0002db  00                DCB      0
                  |L2.732|
0002dc  636d645f          DCB      "cmd_id",0
0002e0  696400  
0002e3  00                DCB      0
                  |L2.740|
0002e4  5b253035          DCB      "[%05d.%03d/I]: ctrl value = %d\r\n",0
0002e8  642e2530
0002ec  33642f49
0002f0  5d3a2063
0002f4  74726c20
0002f8  76616c75
0002fc  65203d20
000300  25640d0a
000304  00      
000305  00                DCB      0
000306  00                DCB      0
000307  00                DCB      0
                  |L2.776|
                          DCD      ControlTaskTCB
                  |L2.780|
00030c  6d6f6465          DCB      "model",0
000310  6c00    
000312  00                DCB      0
000313  00                DCB      0
                  |L2.788|
000314  746f796f          DCB      "toyota",0
000318  746100  
00031b  00                DCB      0
                  |L2.796|
00031c  676d00            DCB      "gm",0
00031f  00                DCB      0
                  |L2.800|
000320  76616731          DCB      "vag1",0
000324  00      
000325  00                DCB      0
000326  00                DCB      0
000327  00                DCB      0
                  |L2.808|
000328  76616700          DCB      "vag",0
                  |L2.812|
00032c  67726561          DCB      "greatwall",0
000330  7477616c
000334  6c00    
000336  00                DCB      0
000337  00                DCB      0
                  |L2.824|
000338  5b253035          DCB      "[%05d.%03d/I]: ##EOBD##\r\n",0
00033c  642e2530
000340  33642f49
000344  5d3a2023
000348  23454f42
00034c  4423230d
000350  0a00    
000352  00                DCB      0
000353  00                DCB      0
                  |L2.852|
000354  5b253035          DCB      "[%05d.%03d/I]: ##TOYOTA##\r\n",0
000358  642e2530
00035c  33642f49
000360  5d3a2023
000364  23544f59
000368  4f544123
00036c  230d0a00
                  |L2.880|
000370  5b253035          DCB      "[%05d.%03d/I]: ##GM##\r\n",0
000374  642e2530
000378  33642f49
00037c  5d3a2023
000380  23474d23
000384  230d0a00
                  |L2.904|
000388  5b253035          DCB      "[%05d.%03d/I]: ##VAG1##\r\n",0
00038c  642e2530
000390  33642f49
000394  5d3a2023
000398  23564147
00039c  3123230d
0003a0  0a00    
0003a2  00                DCB      0
0003a3  00                DCB      0
                  |L2.932|
0003a4  5b253035          DCB      "[%05d.%03d/I]: ##PASSAT##\r\n",0
0003a8  642e2530
0003ac  33642f49
0003b0  5d3a2023
0003b4  23504153
0003b8  53415423
0003bc  230d0a00
                  |L2.960|
0003c0  5b253035          DCB      "[%05d.%03d/I]: ##HAVAL##\r\n",0
0003c4  642e2530
0003c8  33642f49
0003cc  5d3a2023
0003d0  23484156
0003d4  414c2323
0003d8  0d0a00  
0003db  00                DCB      0

                          AREA ||i.transmit_control_rsp||, CODE, READONLY, ALIGN=2

                  transmit_control_rsp PROC
;;;426    
;;;427    void transmit_control_rsp(uint32_t cmd_id, uint8_t id)
000000  b570              PUSH     {r4-r6,lr}
;;;428    {
000002  460c              MOV      r4,r1
000004  4605              MOV      r5,r0
;;;429        transmit_lock();
000006  f7fffffe          BL       transmit_lock
;;;430        control_rsp(cmd_id, id, ctrlTable[id].key);
00000a  4906              LDR      r1,|L3.36|
00000c  eb041044          ADD      r0,r4,r4,LSL #5
000010  1842              ADDS     r2,r0,r1
000012  1c52              ADDS     r2,r2,#1
000014  4621              MOV      r1,r4
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       control_rsp
;;;431        transmit_unlock();
00001c  e8bd4070          POP      {r4-r6,lr}
000020  f7ffbffe          B.W      transmit_unlock
;;;432    }
;;;433    
                          ENDP

                  |L3.36|
                          DCD      ||.data||+0x6

                          AREA ||i.transmit_init||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  transmit_init PROC
;;;362    
;;;363    void transmit_init(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;364    {
000004  b08a              SUB      sp,sp,#0x28
;;;365        bool ret;
;;;366        OS_ERR err;
;;;367    
;;;368        OSMutexCreate(
000006  aa09              ADD      r2,sp,#0x24
000008  a134              ADR      r1,|L4.220|
00000a  4838              LDR      r0,|L4.236|
00000c  f7fffffe          BL       OSMutexCreate
;;;369                (OS_MUTEX *)&mTransmitMutex,
;;;370                (CPU_CHAR *)"TRANSMIT_MUTEX",
;;;371                &err
;;;372                );
;;;373        OSTaskCreate((OS_TCB 	* )&TransmitCallbackTaskTCB,
000010  2400              MOVS     r4,#0
000012  2603              MOVS     r6,#3
000014  e9cd4606          STRD     r4,r6,[sp,#0x18]
000018  ad09              ADD      r5,sp,#0x24
00001a  f04f0866          MOV      r8,#0x66
00001e  4934              LDR      r1,|L4.240|
000020  9508              STR      r5,[sp,#0x20]
000022  9405              STR      r4,[sp,#0x14]
000024  2008              MOVS     r0,#8
000026  e88d0103          STM      sp,{r0,r1,r8}
00002a  f44f6780          MOV      r7,#0x400
00002e  4830              LDR      r0,|L4.240|
000030  e9cd7403          STRD     r7,r4,[sp,#0xc]
000034  4623              MOV      r3,r4
000036  4a2f              LDR      r2,|L4.244|
000038  a12f              ADR      r1,|L4.248|
00003a  38c4              SUBS     r0,r0,#0xc4
00003c  f7fffffe          BL       OSTaskCreate
;;;374                (CPU_CHAR	* )"transmit callback task",
;;;375                (OS_TASK_PTR )transmit_callback_task,
;;;376                (void		* )0,
;;;377                (OS_PRIO	  )TRANSMIT_CALLBACK_TASK_PRIO,
;;;378                (CPU_STK   * )&TRANSMIT_CALLBACK_TASK_STK[0],
;;;379                (CPU_STK_SIZE)TRANSMIT_CALLBACK_STK_SIZE/10,
;;;380                (CPU_STK_SIZE)TRANSMIT_CALLBACK_STK_SIZE,
;;;381                (OS_MSG_QTY  )0,
;;;382                (OS_TICK	  )0,
;;;383                (void   	* )0,
;;;384                (OS_OPT      )OS_OPT_TASK_STK_CHK|OS_OPT_TASK_STK_CLR,
;;;385                (OS_ERR 	* )&err);
;;;386    
;;;387        //heartbeat thread
;;;388        OSTaskCreate((OS_TCB 	* )&HeartbeatTaskTCB,
000040  e9cd4606          STRD     r4,r6,[sp,#0x18]
000044  4932              LDR      r1,|L4.272|
000046  9508              STR      r5,[sp,#0x20]
000048  9405              STR      r4,[sp,#0x14]
00004a  2010              MOVS     r0,#0x10
00004c  e88d0103          STM      sp,{r0,r1,r8}
000050  482f              LDR      r0,|L4.272|
000052  e9cd7403          STRD     r7,r4,[sp,#0xc]
000056  2300              MOVS     r3,#0
000058  4a2e              LDR      r2,|L4.276|
00005a  a12f              ADR      r1,|L4.280|
00005c  38c4              SUBS     r0,r0,#0xc4
00005e  f7fffffe          BL       OSTaskCreate
;;;389                (CPU_CHAR	* )"Heartbeat task",
;;;390                (OS_TASK_PTR )heartbeat_task,
;;;391                (void		* )0,
;;;392                (OS_PRIO	  )HEARTBEAT_TASK_PRIO,
;;;393                (CPU_STK   * )&HEARTBEAT_TASK_STK[0],
;;;394                (CPU_STK_SIZE)HEARTBEAT_STK_SIZE/10,
;;;395                (CPU_STK_SIZE)HEARTBEAT_STK_SIZE,
;;;396                (OS_MSG_QTY  )0,
;;;397                (OS_TICK	  )0,
;;;398                (void   	* )0,
;;;399                (OS_OPT      )OS_OPT_TASK_STK_CHK|OS_OPT_TASK_STK_CLR,
;;;400                (OS_ERR 	* )&err);
;;;401        //upload thread
;;;402        OSTaskCreate((OS_TCB 	* )&UploadTaskTCB,
000062  e9cd4606          STRD     r4,r6,[sp,#0x18]
000066  1078              ASRS     r0,r7,#1
000068  2133              MOVS     r1,#0x33
00006a  9508              STR      r5,[sp,#0x20]
00006c  e9cd1002          STRD     r1,r0,[sp,#8]
000070  4a2d              LDR      r2,|L4.296|
000072  9405              STR      r4,[sp,#0x14]
000074  200a              MOVS     r0,#0xa
000076  e9cd0200          STRD     r0,r2,[sp,#0]
00007a  482b              LDR      r0,|L4.296|
00007c  9404              STR      r4,[sp,#0x10]
00007e  2300              MOVS     r3,#0
000080  4a2a              LDR      r2,|L4.300|
000082  a12b              ADR      r1,|L4.304|
000084  38c4              SUBS     r0,r0,#0xc4
000086  f7fffffe          BL       OSTaskCreate
;;;403                (CPU_CHAR	* )"Upload task",
;;;404                (OS_TASK_PTR )upload_task,
;;;405                (void		* )0,
;;;406                (OS_PRIO	  )UPLOAD_TASK_PRIO,
;;;407                (CPU_STK   * )&UPLOAD_TASK_STK[0],
;;;408                (CPU_STK_SIZE)UPLOAD_STK_SIZE/10,
;;;409                (CPU_STK_SIZE)UPLOAD_STK_SIZE,
;;;410                (OS_MSG_QTY  )0,
;;;411                (OS_TICK	  )0,
;;;412                (void   	* )0,
;;;413                (OS_OPT      )OS_OPT_TASK_STK_CHK|OS_OPT_TASK_STK_CLR,
;;;414                (OS_ERR 	* )&err);
;;;415        heartbeat_count = 0;
00008a  482c              LDR      r0,|L4.316|
00008c  7004              STRB     r4,[r0,#0]
;;;416        ret = l206_setup(FALSE);
00008e  2000              MOVS     r0,#0
000090  f7fffffe          BL       l206_setup
;;;417        if(!ret) {
000094  2800              CMP      r0,#0
000096  d11e              BNE      |L4.214|
;;;418            loge("##SYSTEM REBOOT##");
000098  4668              MOV      r0,sp
00009a  f7fffffe          BL       OSTimeGet
00009e  4928              LDR      r1,|L4.320|
0000a0  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
0000a2  07c9              LSLS     r1,r1,#31
0000a4  d00b              BEQ      |L4.190|
0000a6  f2413288          MOV      r2,#0x1388
0000aa  fbb0f1f2          UDIV     r1,r0,r2
0000ae  fb020011          MLS      r0,r2,r1,r0
0000b2  2205              MOVS     r2,#5
0000b4  fbb0f2f2          UDIV     r2,r0,r2
0000b8  a022              ADR      r0,|L4.324|
0000ba  f7fffffe          BL       __2printf
                  |L4.190|
;;;419            l206_powerdown();
0000be  f7fffffe          BL       l206_powerdown
;;;420            //wait 30min to restart
;;;421            OSTimeDlyHMSM(0, 10, 0,
0000c2  2300              MOVS     r3,#0
0000c4  461a              MOV      r2,r3
0000c6  210a              MOVS     r1,#0xa
0000c8  4618              MOV      r0,r3
0000ca  e9cd4500          STRD     r4,r5,[sp,#0]
0000ce  f7fffffe          BL       OSTimeDlyHMSM
;;;422                    0, OS_OPT_TIME_HMSM_STRICT, &err);
;;;423            SystemReset();
0000d2  f7fffffe          BL       SystemReset
                  |L4.214|
;;;424        }
;;;425    }
0000d6  b00a              ADD      sp,sp,#0x28
0000d8  e8bd81f0          POP      {r4-r8,pc}
;;;426    
                          ENDP

                  |L4.220|
0000dc  5452414e          DCB      "TRANSMIT_MUTEX",0
0000e0  534d4954
0000e4  5f4d5554
0000e8  455800  
0000eb  00                DCB      0
                  |L4.236|
                          DCD      ||.bss||+0x2a4c
                  |L4.240|
                          DCD      ||.bss||+0xc4
                  |L4.244|
                          DCD      transmit_callback_task
                  |L4.248|
0000f8  7472616e          DCB      "transmit callback task",0
0000fc  736d6974
000100  2063616c
000104  6c626163
000108  6b207461
00010c  736b00  
00010f  00                DCB      0
                  |L4.272|
                          DCD      ||.bss||+0x1188
                  |L4.276|
                          DCD      heartbeat_task
                  |L4.280|
000118  48656172          DCB      "Heartbeat task",0
00011c  74626561
000120  74207461
000124  736b00  
000127  00                DCB      0
                  |L4.296|
                          DCD      ||.bss||+0x224c
                  |L4.300|
                          DCD      upload_task
                  |L4.304|
000130  55706c6f          DCB      "Upload task",0
000134  61642074
000138  61736b00
                  |L4.316|
                          DCD      ||.data||
                  |L4.320|
                          DCD      DEBUG_MODE
                  |L4.324|
000144  5b253035          DCB      "[%05d.%03d/E]: ##SYSTEM REBOOT##\r\n",0
000148  642e2530
00014c  33642f45
000150  5d3a2023
000154  23535953
000158  54454d20
00015c  5245424f
000160  4f542323
000164  0d0a00  
000167  00                DCB      0

                          AREA ||i.transmit_lock||, CODE, READONLY, ALIGN=2

                  transmit_lock PROC
;;;433    
;;;434    void transmit_lock(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;435    {
;;;436        OS_ERR err;
;;;437    
;;;438    //    logi("+++%s+++", __func__);
;;;439        OSMutexPend(&mTransmitMutex, 0, OS_OPT_PEND_BLOCKING, 0, &err);
000002  a801              ADD      r0,sp,#4
000004  2300              MOVS     r3,#0
000006  9000              STR      r0,[sp,#0]
000008  461a              MOV      r2,r3
00000a  4619              MOV      r1,r3
00000c  4801              LDR      r0,|L5.20|
00000e  f7fffffe          BL       OSMutexPend
;;;440    }
000012  bd1c              POP      {r2-r4,pc}
;;;441    
                          ENDP

                  |L5.20|
                          DCD      ||.bss||+0x2a4c

                          AREA ||i.transmit_reconnect||, CODE, READONLY, ALIGN=1

                  transmit_reconnect PROC
;;;311    
;;;312    void transmit_reconnect(void)
000000  b510              PUSH     {r4,lr}
;;;313    {
;;;314        l206_set_connected(FALSE);
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       l206_set_connected
;;;315        l206_powerdown();
000008  f7fffffe          BL       l206_powerdown
;;;316        l206_setup(TRUE);
00000c  e8bd4010          POP      {r4,lr}
000010  2001              MOVS     r0,#1
000012  f7ffbffe          B.W      l206_setup
;;;317    }
;;;318    
                          ENDP


                          AREA ||i.transmit_unlock||, CODE, READONLY, ALIGN=2

                  transmit_unlock PROC
;;;441    
;;;442    void transmit_unlock(void)
000000  b508              PUSH     {r3,lr}
;;;443    {
;;;444        OS_ERR err;
;;;445    
;;;446    //    logi("---%s---", __func__);
;;;447        OSMutexPost(&mTransmitMutex, OS_OPT_POST_NONE, &err);
000002  466a              MOV      r2,sp
000004  2100              MOVS     r1,#0
000006  4802              LDR      r0,|L7.16|
000008  f7fffffe          BL       OSMutexPost
;;;448    }
00000c  bd08              POP      {r3,pc}
;;;449    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      ||.bss||+0x2a4c

                          AREA ||i.upload_task||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  upload_task PROC
;;;318    
;;;319    void upload_task(void *unused)
000000  b50e              PUSH     {r1-r3,lr}
;;;320    {
;;;321        OS_ERR err;
;;;322        uint8_t i;
;;;323        static uint16_t upload_timer = 0;
;;;324    
;;;325        while(1) {
;;;326            //set the wdg feed flag
;;;327            OSFlagPost(
;;;328                    (OS_FLAG_GRP *)&FLAG_TaskRunStatus,
;;;329                    (OS_FLAGS)FLAG_UPLOAD,
;;;330                    (OS_OPT)OS_OPT_POST_FLAG_SET,
;;;331                    (OS_ERR *)&err
;;;332                    );
;;;333            OSTimeDlyHMSM(0, 0, 2,
;;;334                    0, OS_OPT_TIME_HMSM_STRICT, &err);
;;;335            if(!is_connected())
;;;336                continue;
;;;337    
;;;338            for(i = 0; i < PID_SIZE; i++) {
;;;339                mUpdateList[i].spend_time += 2;
;;;340                if(mUpdateList[i].updated &&
;;;341                        (mUpdateList[i].spend_time >= pidList[i].interval)) {
000002  f8dfb0cc          LDR      r11,|L8.208|
000006  4e31              LDR      r6,|L8.204|
000008  f10d0a08          ADD      r10,sp,#8             ;327
00000c  2700              MOVS     r7,#0
;;;342                    mUpdateList[i].pid = i;
;;;343                    logi("upload %d", i);
;;;344                    //upload the pid data
;;;345                    transmit_lock();
;;;346                    upload_item(&mUpdateList[i], pidList[i].key);
;;;347                    transmit_unlock();
;;;348                    mUpdateList[i].updated = FALSE;
;;;349                    mUpdateList[i].spend_time = 0;
;;;350                }
;;;351            }
;;;352            upload_timer += 2;
00000e  f1ab09ee          SUB      r9,r11,#0xee
                  |L8.18|
000012  ab02              ADD      r3,sp,#8              ;327
000014  2200              MOVS     r2,#0                 ;327
000016  2102              MOVS     r1,#2                 ;327
000018  482e              LDR      r0,|L8.212|
00001a  f7fffffe          BL       OSFlagPost
00001e  2300              MOVS     r3,#0                 ;333
000020  e9cd7a00          STRD     r7,r10,[sp,#0]        ;333
000024  2202              MOVS     r2,#2                 ;333
000026  4619              MOV      r1,r3                 ;333
000028  4618              MOV      r0,r3                 ;333
00002a  f7fffffe          BL       OSTimeDlyHMSM
00002e  f7fffffe          BL       is_connected
000032  2800              CMP      r0,#0                 ;335
000034  d0ed              BEQ      |L8.18|
000036  2400              MOVS     r4,#0                 ;338
                  |L8.56|
000038  ebc400c4          RSB      r0,r4,r4,LSL #3       ;339
00003c  eb060540          ADD      r5,r6,r0,LSL #1       ;339
000040  89a9              LDRH     r1,[r5,#0xc]          ;339
000042  1c89              ADDS     r1,r1,#2              ;339
000044  b289              UXTH     r1,r1                 ;339
000046  81a9              STRH     r1,[r5,#0xc]          ;339
000048  7aaa              LDRB     r2,[r5,#0xa]          ;340
00004a  b342              CBZ      r2,|L8.158|
00004c  eb0403c4          ADD      r3,r4,r4,LSL #3       ;341
000050  eb0b0883          ADD      r8,r11,r3,LSL #2      ;341
000054  f8b82022          LDRH     r2,[r8,#0x22]         ;341
000058  4291              CMP      r1,r2                 ;341
00005a  d320              BCC      |L8.158|
00005c  f8064010          STRB     r4,[r6,r0,LSL #1]     ;342
000060  4668              MOV      r0,sp                 ;343
000062  f7fffffe          BL       OSTimeGet
000066  491c              LDR      r1,|L8.216|
000068  7809              LDRB     r1,[r1,#0]            ;343  ; DEBUG_MODE
00006a  0789              LSLS     r1,r1,#30             ;343
00006c  d50c              BPL      |L8.136|
00006e  f2413288          MOV      r2,#0x1388            ;343
000072  fbb0f1f2          UDIV     r1,r0,r2              ;343
000076  fb020011          MLS      r0,r2,r1,r0           ;343
00007a  2205              MOVS     r2,#5                 ;343
00007c  fbb0f2f2          UDIV     r2,r0,r2              ;343
000080  4623              MOV      r3,r4                 ;343
000082  a016              ADR      r0,|L8.220|
000084  f7fffffe          BL       __2printf
                  |L8.136|
000088  f7fffffe          BL       transmit_lock
00008c  f1080101          ADD      r1,r8,#1              ;346
000090  4628              MOV      r0,r5                 ;346
000092  f7fffffe          BL       upload_item
000096  f7fffffe          BL       transmit_unlock
00009a  72af              STRB     r7,[r5,#0xa]          ;348
00009c  81af              STRH     r7,[r5,#0xc]          ;349
                  |L8.158|
00009e  1c64              ADDS     r4,r4,#1              ;338
0000a0  b2e4              UXTB     r4,r4                 ;338
0000a2  2c39              CMP      r4,#0x39              ;338
0000a4  d3c8              BCC      |L8.56|
0000a6  f8b91004          LDRH     r1,[r9,#4]  ; upload_timer
0000aa  1c89              ADDS     r1,r1,#2
0000ac  b289              UXTH     r1,r1
0000ae  f8a91004          STRH     r1,[r9,#4]
;;;353            if(upload_timer >= 300) {
0000b2  f5b17f96          CMP      r1,#0x12c
0000b6  d3ac              BCC      |L8.18|
;;;354                upload_timer = 0;
0000b8  f8a97004          STRH     r7,[r9,#4]
;;;355                //upload location
;;;356                transmit_lock();
0000bc  f7fffffe          BL       transmit_lock
;;;357                upload_location();
0000c0  f7fffffe          BL       upload_location
;;;358                transmit_unlock();
0000c4  f7fffffe          BL       transmit_unlock
0000c8  e7a3              B        |L8.18|
;;;359            }
;;;360        }
;;;361    }
;;;362    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L8.204|
                          DCD      mUpdateList
                  |L8.208|
                          DCD      ||.data||+0xee
                  |L8.212|
                          DCD      FLAG_TaskRunStatus
                  |L8.216|
                          DCD      DEBUG_MODE
                  |L8.220|
0000dc  5b253035          DCB      "[%05d.%03d/I]: upload %d\r\n",0
0000e0  642e2530
0000e4  33642f49
0000e8  5d3a2075
0000ec  706c6f61
0000f0  64202564
0000f4  0d0a00  
0000f7  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TransmitCallbackTaskTCB
                          %        196
                  TRANSMIT_CALLBACK_TASK_STK
                          %        4096
                  HeartbeatTaskTCB
                          %        196
                  HEARTBEAT_TASK_STK
                          %        4096
                  UploadTaskTCB
                          %        196
                  UPLOAD_TASK_STK
                          %        2048
                  mTransmitMutex
                          %        44

                          AREA ||.data||, DATA, ALIGN=1

                  heartbeat_count
000000  00                DCB      0x00
                  heartbeat_fail_times
000001  00                DCB      0x00
                  logined
000002  0000              DCB      0x00,0x00
                  upload_timer
000004  0000              DCW      0x0000
                  ctrlTable
000006  0062              DCB      0x00,0x62
000008  636d5f66          DCB      0x63,0x6d,0x5f,0x66
00000c  756e5f77          DCB      0x75,0x6e,0x5f,0x77
000010  696e646f          DCB      0x69,0x6e,0x64,0x6f
000014  77000000          DCB      0x77,0x00,0x00,0x00
                          %        12
000024  00000001          DCB      0x00,0x00,0x00,0x01
000028  62636d5f          DCB      0x62,0x63,0x6d,0x5f
00002c  66756e5f          DCB      0x66,0x75,0x6e,0x5f
000030  646f6f72          DCB      0x64,0x6f,0x6f,0x72
000034  00000000          DCB      0x00,0x00,0x00,0x00
                          %        16
000048  0262636d          DCB      0x02,0x62,0x63,0x6d
00004c  5f66756e          DCB      0x5f,0x66,0x75,0x6e
000050  5f6c616d          DCB      0x5f,0x6c,0x61,0x6d
000054  70000000          DCB      0x70,0x00,0x00,0x00
                          %        16
000068  00036263          DCB      0x00,0x03,0x62,0x63
00006c  6d5f6675          DCB      0x6d,0x5f,0x66,0x75
000070  6e5f7375          DCB      0x6e,0x5f,0x73,0x75
000074  6e726f6f          DCB      0x6e,0x72,0x6f,0x6f
000078  66000000          DCB      0x66,0x00,0x00,0x00
                          %        12
000088  00000462          DCB      0x00,0x00,0x04,0x62
00008c  636d5f66          DCB      0x63,0x6d,0x5f,0x66
000090  756e5f74          DCB      0x75,0x6e,0x5f,0x74
000094  72756e6b          DCB      0x72,0x75,0x6e,0x6b
000098  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
0000a8  00000005          DCB      0x00,0x00,0x00,0x05
0000ac  62636d5f          DCB      0x62,0x63,0x6d,0x5f
0000b0  66756e5f          DCB      0x66,0x75,0x6e,0x5f
0000b4  66696e64          DCB      0x66,0x69,0x6e,0x64
0000b8  63617200          DCB      0x63,0x61,0x72,0x00
                          %        16
0000cc  0662636d          DCB      0x06,0x62,0x63,0x6d
0000d0  5f66756e          DCB      0x5f,0x66,0x75,0x6e
0000d4  5f696d6d          DCB      0x5f,0x69,0x6d,0x6d
0000d8  6f6c6f63          DCB      0x6f,0x6c,0x6f,0x63
0000dc  6b000000          DCB      0x6b,0x00,0x00,0x00
                          %        12
0000ec  0000              DCB      0x00,0x00
                  pidList
0000ee  0065              DCB      0x00,0x65
0000f0  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0000f4  6174615f          DCB      0x61,0x74,0x61,0x5f
0000f8  72706d00          DCB      0x72,0x70,0x6d,0x00
                          %        16
00010c  00000000          DCB      0x00,0x00,0x00,0x00
000110  01f4              DCW      0x01f4
000112  0165              DCB      0x01,0x65
000114  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000118  6174615f          DCB      0x61,0x74,0x61,0x5f
00011c  76730000          DCB      0x76,0x73,0x00,0x00
                          %        16
000130  00000000          DCB      0x00,0x00,0x00,0x00
000134  01f4              DCW      0x01f4
000136  0265              DCB      0x02,0x65
000138  6e675f64          DCB      0x6e,0x67,0x5f,0x64
00013c  6174615f          DCB      0x61,0x74,0x61,0x5f
000140  65637400          DCB      0x65,0x63,0x74,0x00
                          %        16
000154  00000000          DCB      0x00,0x00,0x00,0x00
000158  01f4              DCW      0x01f4
00015a  0365              DCB      0x03,0x65
00015c  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000160  6174615f          DCB      0x61,0x74,0x61,0x5f
000164  69617400          DCB      0x69,0x61,0x74,0x00
                          %        16
000178  00000000          DCB      0x00,0x00,0x00,0x00
00017c  01f4              DCW      0x01f4
00017e  0465              DCB      0x04,0x65
000180  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000184  6174615f          DCB      0x61,0x74,0x61,0x5f
000188  61707000          DCB      0x61,0x70,0x70,0x00
                          %        16
00019c  00000000          DCB      0x00,0x00,0x00,0x00
0001a0  01f4              DCW      0x01f4
0001a2  0565              DCB      0x05,0x65
0001a4  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0001a8  6174615f          DCB      0x61,0x74,0x61,0x5f
0001ac  74700000          DCB      0x74,0x70,0x00,0x00
                          %        16
0001c0  00000000          DCB      0x00,0x00,0x00,0x00
0001c4  01f4              DCW      0x01f4
0001c6  0665              DCB      0x06,0x65
0001c8  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0001cc  6174615f          DCB      0x61,0x74,0x61,0x5f
0001d0  65727400          DCB      0x65,0x72,0x74,0x00
                          %        16
0001e4  00000000          DCB      0x00,0x00,0x00,0x00
0001e8  01f4              DCW      0x01f4
0001ea  0765              DCB      0x07,0x65
0001ec  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0001f0  6174615f          DCB      0x61,0x74,0x61,0x5f
0001f4  6c6f6164          DCB      0x6c,0x6f,0x61,0x64
0001f8  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
000208  00000000          DCB      0x00,0x00,0x00,0x00
00020c  01f4              DCW      0x01f4
00020e  0865              DCB      0x08,0x65
000210  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000214  6174615f          DCB      0x61,0x74,0x61,0x5f
000218  6c746674          DCB      0x6c,0x74,0x66,0x74
00021c  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
00022c  00000000          DCB      0x00,0x00,0x00,0x00
000230  01f4              DCW      0x01f4
000232  0965              DCB      0x09,0x65
000234  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000238  6174615f          DCB      0x61,0x74,0x61,0x5f
00023c  73746674          DCB      0x73,0x74,0x66,0x74
000240  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
000250  00000000          DCB      0x00,0x00,0x00,0x00
000254  01f4              DCW      0x01f4
000256  0a65              DCB      0x0a,0x65
000258  6e675f64          DCB      0x6e,0x67,0x5f,0x64
00025c  6174615f          DCB      0x61,0x74,0x61,0x5f
000260  6d697366          DCB      0x6d,0x69,0x73,0x66
000264  69726531          DCB      0x69,0x72,0x65,0x31
000268  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000274  00000000          DCB      0x00,0x00,0x00,0x00
000278  01f4              DCW      0x01f4
00027a  0b65              DCB      0x0b,0x65
00027c  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000280  6174615f          DCB      0x61,0x74,0x61,0x5f
000284  6d697366          DCB      0x6d,0x69,0x73,0x66
000288  69726532          DCB      0x69,0x72,0x65,0x32
00028c  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000298  00000000          DCB      0x00,0x00,0x00,0x00
00029c  01f4              DCW      0x01f4
00029e  0c65              DCB      0x0c,0x65
0002a0  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0002a4  6174615f          DCB      0x61,0x74,0x61,0x5f
0002a8  6d697366          DCB      0x6d,0x69,0x73,0x66
0002ac  69726533          DCB      0x69,0x72,0x65,0x33
0002b0  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
0002bc  00000000          DCB      0x00,0x00,0x00,0x00
0002c0  01f4              DCW      0x01f4
0002c2  0d65              DCB      0x0d,0x65
0002c4  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0002c8  6174615f          DCB      0x61,0x74,0x61,0x5f
0002cc  6d697366          DCB      0x6d,0x69,0x73,0x66
0002d0  69726534          DCB      0x69,0x72,0x65,0x34
0002d4  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
0002e0  00000000          DCB      0x00,0x00,0x00,0x00
0002e4  01f4              DCW      0x01f4
0002e6  0e65              DCB      0x0e,0x65
0002e8  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0002ec  6174615f          DCB      0x61,0x74,0x61,0x5f
0002f0  6d697366          DCB      0x6d,0x69,0x73,0x66
0002f4  69726535          DCB      0x69,0x72,0x65,0x35
0002f8  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000304  00000000          DCB      0x00,0x00,0x00,0x00
000308  01f4              DCW      0x01f4
00030a  0f65              DCB      0x0f,0x65
00030c  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000310  6174615f          DCB      0x61,0x74,0x61,0x5f
000314  6d697366          DCB      0x6d,0x69,0x73,0x66
000318  69726536          DCB      0x69,0x72,0x65,0x36
00031c  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000328  00000000          DCB      0x00,0x00,0x00,0x00
00032c  01f4              DCW      0x01f4
00032e  1065              DCB      0x10,0x65
000330  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000334  6174615f          DCB      0x61,0x74,0x61,0x5f
000338  66636c73          DCB      0x66,0x63,0x6c,0x73
00033c  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
00034c  00000000          DCB      0x00,0x00,0x00,0x00
000350  01f4              DCW      0x01f4
000352  1165              DCB      0x11,0x65
000354  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000358  6174615f          DCB      0x61,0x74,0x61,0x5f
00035c  6b657973          DCB      0x6b,0x65,0x79,0x73
000360  74617475          DCB      0x74,0x61,0x74,0x75
000364  73000000          DCB      0x73,0x00,0x00,0x00
                          %        8
000370  00000000          DCB      0x00,0x00,0x00,0x00
000374  01f4              DCW      0x01f4
000376  1265              DCB      0x12,0x65
000378  6e675f64          DCB      0x6e,0x67,0x5f,0x64
00037c  6174615f          DCB      0x61,0x74,0x61,0x5f
000380  686f3273          DCB      0x68,0x6f,0x32,0x73
000384  31000000          DCB      0x31,0x00,0x00,0x00
                          %        12
000394  00000000          DCB      0x00,0x00,0x00,0x00
000398  01f4              DCW      0x01f4
00039a  1365              DCB      0x13,0x65
00039c  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0003a0  6174615f          DCB      0x61,0x74,0x61,0x5f
0003a4  686f3273          DCB      0x68,0x6f,0x32,0x73
0003a8  32000000          DCB      0x32,0x00,0x00,0x00
                          %        12
0003b8  00000000          DCB      0x00,0x00,0x00,0x00
0003bc  01f4              DCW      0x01f4
0003be  1465              DCB      0x14,0x65
0003c0  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0003c4  6174615f          DCB      0x61,0x74,0x61,0x5f
0003c8  6d617000          DCB      0x6d,0x61,0x70,0x00
                          %        16
0003dc  00000000          DCB      0x00,0x00,0x00,0x00
0003e0  01f4              DCW      0x01f4
0003e2  1565              DCB      0x15,0x65
0003e4  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0003e8  6174615f          DCB      0x61,0x74,0x61,0x5f
0003ec  696e6a65          DCB      0x69,0x6e,0x6a,0x65
0003f0  63747075          DCB      0x63,0x74,0x70,0x75
0003f4  6c736500          DCB      0x6c,0x73,0x65,0x00
                          %        8
000400  00000000          DCB      0x00,0x00,0x00,0x00
000404  01f4              DCW      0x01f4
000406  1665              DCB      0x16,0x65
000408  6e675f64          DCB      0x6e,0x67,0x5f,0x64
00040c  6174615f          DCB      0x61,0x74,0x61,0x5f
000410  6f696c70          DCB      0x6f,0x69,0x6c,0x70
000414  72657373          DCB      0x72,0x65,0x73,0x73
000418  75726500          DCB      0x75,0x72,0x65,0x00
                          %        8
000424  00000000          DCB      0x00,0x00,0x00,0x00
000428  01f4              DCW      0x01f4
00042a  1765              DCB      0x17,0x65
00042c  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000430  6174615f          DCB      0x61,0x74,0x61,0x5f
000434  6f696c6c          DCB      0x6f,0x69,0x6c,0x6c
000438  6576656c          DCB      0x65,0x76,0x65,0x6c
00043c  73746174          DCB      0x73,0x74,0x61,0x74
000440  75730000          DCB      0x75,0x73,0x00,0x00
                          DCDU     0x00000000
000448  00000000          DCB      0x00,0x00,0x00,0x00
00044c  01f4              DCW      0x01f4
00044e  1865              DCB      0x18,0x65
000450  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000454  6174615f          DCB      0x61,0x74,0x61,0x5f
000458  61660000          DCB      0x61,0x66,0x00,0x00
                          %        16
00046c  00000000          DCB      0x00,0x00,0x00,0x00
000470  01f4              DCW      0x01f4
000472  1965              DCB      0x19,0x65
000474  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000478  6174615f          DCB      0x61,0x74,0x61,0x5f
00047c  69677469          DCB      0x69,0x67,0x74,0x69
000480  6d696e67          DCB      0x6d,0x69,0x6e,0x67
000484  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000490  00000000          DCB      0x00,0x00,0x00,0x00
000494  01f4              DCW      0x01f4
000496  1a65              DCB      0x1a,0x65
000498  6e675f64          DCB      0x6e,0x67,0x5f,0x64
00049c  6174615f          DCB      0x61,0x74,0x61,0x5f
0004a0  6d616600          DCB      0x6d,0x61,0x66,0x00
                          %        16
0004b4  00000000          DCB      0x00,0x00,0x00,0x00
0004b8  01f4              DCW      0x01f4
0004ba  1b65              DCB      0x1b,0x65
0004bc  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0004c0  6174615f          DCB      0x61,0x74,0x61,0x5f
0004c4  6f696c6c          DCB      0x6f,0x69,0x6c,0x6c
0004c8  69666500          DCB      0x69,0x66,0x65,0x00
                          %        12
0004d8  00000000          DCB      0x00,0x00,0x00,0x00
0004dc  01f4              DCW      0x01f4
0004de  1c65              DCB      0x1c,0x65
0004e0  6e675f64          DCB      0x6e,0x67,0x5f,0x64
0004e4  6174615f          DCB      0x61,0x74,0x61,0x5f
0004e8  6f696c74          DCB      0x6f,0x69,0x6c,0x74
0004ec  656d7000          DCB      0x65,0x6d,0x70,0x00
                          %        12
0004fc  00000000          DCB      0x00,0x00,0x00,0x00
000500  01f4              DCW      0x01f4
000502  1d65              DCB      0x1d,0x65
000504  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000508  6174615f          DCB      0x61,0x74,0x61,0x5f
00050c  6675656c          DCB      0x66,0x75,0x65,0x6c
000510  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
000520  00000000          DCB      0x00,0x00,0x00,0x00
000524  01f4              DCW      0x01f4
000526  1e65              DCB      0x1e,0x65
000528  6e675f64          DCB      0x6e,0x67,0x5f,0x64
00052c  6174615f          DCB      0x61,0x74,0x61,0x5f
000530  6675656c          DCB      0x66,0x75,0x65,0x6c
000534  6c657665          DCB      0x6c,0x65,0x76,0x65
000538  6c000000          DCB      0x6c,0x00,0x00,0x00
                          %        8
000544  00000000          DCB      0x00,0x00,0x00,0x00
000548  01f4              DCW      0x01f4
00054a  1f65              DCB      0x1f,0x65
00054c  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000550  6174615f          DCB      0x61,0x74,0x61,0x5f
000554  6675656c          DCB      0x66,0x75,0x65,0x6c
000558  74616e6b          DCB      0x74,0x61,0x6e,0x6b
00055c  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000568  00000000          DCB      0x00,0x00,0x00,0x00
00056c  01f4              DCW      0x01f4
00056e  2065              DCB      0x20,0x65
000570  6e675f64          DCB      0x6e,0x67,0x5f,0x64
000574  6174615f          DCB      0x61,0x74,0x61,0x5f
000578  7265616c          DCB      0x72,0x65,0x61,0x6c
00057c  6675656c          DCB      0x66,0x75,0x65,0x6c
000580  636f0000          DCB      0x63,0x6f,0x00,0x00
                          %        8
00058c  00000000          DCB      0x00,0x00,0x00,0x00
000590  01f4              DCW      0x01f4
000592  2161              DCB      0x21,0x61
000594  745f6461          DCB      0x74,0x5f,0x64,0x61
000598  74615f6f          DCB      0x74,0x61,0x5f,0x6f
00059c  696c7465          DCB      0x69,0x6c,0x74,0x65
0005a0  6d700000          DCB      0x6d,0x70,0x00,0x00
                          %        12
0005b0  00000000          DCB      0x00,0x00,0x00,0x00
0005b4  0258              DCW      0x0258
0005b6  2261              DCB      0x22,0x61
0005b8  62735f64          DCB      0x62,0x73,0x5f,0x64
0005bc  6174615f          DCB      0x61,0x74,0x61,0x5f
0005c0  6f696c6c          DCB      0x6f,0x69,0x6c,0x6c
0005c4  6576656c          DCB      0x65,0x76,0x65,0x6c
0005c8  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
0005d4  00000000          DCB      0x00,0x00,0x00,0x00
0005d8  0190              DCW      0x0190
0005da  2362              DCB      0x23,0x62
0005dc  636d5f64          DCB      0x63,0x6d,0x5f,0x64
0005e0  6174615f          DCB      0x61,0x74,0x61,0x5f
0005e4  63686172          DCB      0x63,0x68,0x61,0x72
0005e8  67657374          DCB      0x67,0x65,0x73,0x74
0005ec  61747573          DCB      0x61,0x74,0x75,0x73
0005f0  00000000          DCB      0x00,0x00,0x00,0x00
                          DCDU     0x00000000
0005f8  00000000          DCB      0x00,0x00,0x00,0x00
0005fc  012c              DCW      0x012c
0005fe  2462              DCB      0x24,0x62
000600  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000604  6174615f          DCB      0x61,0x74,0x61,0x5f
000608  62617474          DCB      0x62,0x61,0x74,0x74
00060c  63757272          DCB      0x63,0x75,0x72,0x72
000610  656e7400          DCB      0x65,0x6e,0x74,0x00
                          %        8
00061c  00000000          DCB      0x00,0x00,0x00,0x00
000620  012c              DCW      0x012c
000622  2562              DCB      0x25,0x62
000624  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000628  6174615f          DCB      0x61,0x74,0x61,0x5f
00062c  62617474          DCB      0x62,0x61,0x74,0x74
000630  73746174          DCB      0x73,0x74,0x61,0x74
000634  75730000          DCB      0x75,0x73,0x00,0x00
                          %        8
000640  00000000          DCB      0x00,0x00,0x00,0x00
000644  012c              DCW      0x012c
000646  2662              DCB      0x26,0x62
000648  636d5f64          DCB      0x63,0x6d,0x5f,0x64
00064c  6174615f          DCB      0x61,0x74,0x61,0x5f
000650  62617474          DCB      0x62,0x61,0x74,0x74
000654  766f6c74          DCB      0x76,0x6f,0x6c,0x74
000658  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000664  00000000          DCB      0x00,0x00,0x00,0x00
000668  012c              DCW      0x012c
00066a  2762              DCB      0x27,0x62
00066c  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000670  6174615f          DCB      0x61,0x74,0x61,0x5f
000674  64646100          DCB      0x64,0x64,0x61,0x00
                          %        16
000688  00000000          DCB      0x00,0x00,0x00,0x00
00068c  012c              DCW      0x012c
00068e  2862              DCB      0x28,0x62
000690  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000694  6174615f          DCB      0x61,0x74,0x61,0x5f
000698  70646100          DCB      0x70,0x64,0x61,0x00
                          %        16
0006ac  00000000          DCB      0x00,0x00,0x00,0x00
0006b0  012c              DCW      0x012c
0006b2  2962              DCB      0x29,0x62
0006b4  636d5f64          DCB      0x63,0x6d,0x5f,0x64
0006b8  6174615f          DCB      0x61,0x74,0x61,0x5f
0006bc  72726461          DCB      0x72,0x72,0x64,0x61
0006c0  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
0006d0  00000000          DCB      0x00,0x00,0x00,0x00
0006d4  012c              DCW      0x012c
0006d6  2a62              DCB      0x2a,0x62
0006d8  636d5f64          DCB      0x63,0x6d,0x5f,0x64
0006dc  6174615f          DCB      0x61,0x74,0x61,0x5f
0006e0  6c726461          DCB      0x6c,0x72,0x64,0x61
0006e4  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
0006f4  00000000          DCB      0x00,0x00,0x00,0x00
0006f8  012c              DCW      0x012c
0006fa  2b62              DCB      0x2b,0x62
0006fc  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000700  6174615f          DCB      0x61,0x74,0x61,0x5f
000704  73756e72          DCB      0x73,0x75,0x6e,0x72
000708  6f6f6600          DCB      0x6f,0x6f,0x66,0x00
                          %        12
000718  00000000          DCB      0x00,0x00,0x00,0x00
00071c  012c              DCW      0x012c
00071e  2c62              DCB      0x2c,0x62
000720  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000724  6174615f          DCB      0x61,0x74,0x61,0x5f
000728  7061726b          DCB      0x70,0x61,0x72,0x6b
00072c  6c616d70          DCB      0x6c,0x61,0x6d,0x70
000730  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
00073c  00000000          DCB      0x00,0x00,0x00,0x00
000740  012c              DCW      0x012c
000742  2d62              DCB      0x2d,0x62
000744  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000748  6174615f          DCB      0x61,0x74,0x61,0x5f
00074c  68656164          DCB      0x68,0x65,0x61,0x64
000750  6c616d70          DCB      0x6c,0x61,0x6d,0x70
000754  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000760  00000000          DCB      0x00,0x00,0x00,0x00
000764  012c              DCW      0x012c
000766  2e62              DCB      0x2e,0x62
000768  636d5f64          DCB      0x63,0x6d,0x5f,0x64
00076c  6174615f          DCB      0x61,0x74,0x61,0x5f
000770  68696768          DCB      0x68,0x69,0x67,0x68
000774  6265616d          DCB      0x62,0x65,0x61,0x6d
000778  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000784  00000000          DCB      0x00,0x00,0x00,0x00
000788  012c              DCW      0x012c
00078a  2f62              DCB      0x2f,0x62
00078c  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000790  6174615f          DCB      0x61,0x74,0x61,0x5f
000794  68617a61          DCB      0x68,0x61,0x7a,0x61
000798  72640000          DCB      0x72,0x64,0x00,0x00
                          %        12
0007a8  00000000          DCB      0x00,0x00,0x00,0x00
0007ac  012c              DCW      0x012c
0007ae  3062              DCB      0x30,0x62
0007b0  636d5f64          DCB      0x63,0x6d,0x5f,0x64
0007b4  6174615f          DCB      0x61,0x74,0x61,0x5f
0007b8  66726f6e          DCB      0x66,0x72,0x6f,0x6e
0007bc  74666f67          DCB      0x74,0x66,0x6f,0x67
0007c0  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
0007cc  00000000          DCB      0x00,0x00,0x00,0x00
0007d0  012c              DCW      0x012c
0007d2  3162              DCB      0x31,0x62
0007d4  636d5f64          DCB      0x63,0x6d,0x5f,0x64
0007d8  6174615f          DCB      0x61,0x74,0x61,0x5f
0007dc  72656172          DCB      0x72,0x65,0x61,0x72
0007e0  666f6700          DCB      0x66,0x6f,0x67,0x00
                          %        12
0007f0  00000000          DCB      0x00,0x00,0x00,0x00
0007f4  012c              DCW      0x012c
0007f6  3262              DCB      0x32,0x62
0007f8  636d5f64          DCB      0x63,0x6d,0x5f,0x64
0007fc  6174615f          DCB      0x61,0x74,0x61,0x5f
000800  6c656674          DCB      0x6c,0x65,0x66,0x74
000804  7475726e          DCB      0x74,0x75,0x72,0x6e
000808  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000814  00000000          DCB      0x00,0x00,0x00,0x00
000818  012c              DCW      0x012c
00081a  3362              DCB      0x33,0x62
00081c  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000820  6174615f          DCB      0x61,0x74,0x61,0x5f
000824  72696768          DCB      0x72,0x69,0x67,0x68
000828  74747572          DCB      0x74,0x74,0x75,0x72
00082c  6e000000          DCB      0x6e,0x00,0x00,0x00
                          %        8
000838  00000000          DCB      0x00,0x00,0x00,0x00
00083c  012c              DCW      0x012c
00083e  3462              DCB      0x34,0x62
000840  636d5f64          DCB      0x63,0x6d,0x5f,0x64
000844  6174615f          DCB      0x61,0x74,0x61,0x5f
000848  6f646f00          DCB      0x6f,0x64,0x6f,0x00
                          %        16
00085c  00000000          DCB      0x00,0x00,0x00,0x00
000860  012c              DCW      0x012c
000862  3574              DCB      0x35,0x74
000864  706d735f          DCB      0x70,0x6d,0x73,0x5f
000868  64617461          DCB      0x64,0x61,0x74,0x61
00086c  5f6c6674          DCB      0x5f,0x6c,0x66,0x74
000870  69726570          DCB      0x69,0x72,0x65,0x70
000874  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
000880  00000000          DCB      0x00,0x00,0x00,0x00
000884  012c              DCW      0x012c
000886  3674              DCB      0x36,0x74
000888  706d735f          DCB      0x70,0x6d,0x73,0x5f
00088c  64617461          DCB      0x64,0x61,0x74,0x61
000890  5f726674          DCB      0x5f,0x72,0x66,0x74
000894  69726570          DCB      0x69,0x72,0x65,0x70
000898  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
0008a4  00000000          DCB      0x00,0x00,0x00,0x00
0008a8  012c              DCW      0x012c
0008aa  3774              DCB      0x37,0x74
0008ac  706d735f          DCB      0x70,0x6d,0x73,0x5f
0008b0  64617461          DCB      0x64,0x61,0x74,0x61
0008b4  5f6c7274          DCB      0x5f,0x6c,0x72,0x74
0008b8  69726570          DCB      0x69,0x72,0x65,0x70
0008bc  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
0008c8  00000000          DCB      0x00,0x00,0x00,0x00
0008cc  012c              DCW      0x012c
0008ce  3874              DCB      0x38,0x74
0008d0  706d735f          DCB      0x70,0x6d,0x73,0x5f
0008d4  64617461          DCB      0x64,0x61,0x74,0x61
0008d8  5f727274          DCB      0x5f,0x72,0x72,0x74
0008dc  69726570          DCB      0x69,0x72,0x65,0x70
0008e0  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
0008ec  00000000          DCB      0x00,0x00,0x00,0x00
0008f0  012c              DCW      0x012c
