; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\os_prio.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\os_prio.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\os_prio.crf ..\UCOSIII\uCOS-III\Source\os_prio.c]
                          THUMB

                          AREA ||i.OS_PrioGetHighest||, CODE, READONLY, ALIGN=2

                  OS_PrioGetHighest PROC
;;;84     
;;;85     OS_PRIO  OS_PrioGetHighest (void)
000000  b510              PUSH     {r4,lr}
;;;86     {
;;;87         CPU_DATA  *p_tbl;
;;;88         OS_PRIO    prio;
;;;89     
;;;90     
;;;91         prio  = (OS_PRIO)0;
000002  2400              MOVS     r4,#0
;;;92         p_tbl = &OSPrioTbl[0];
000004  4806              LDR      r0,|L1.32|
000006  e002              B        |L1.14|
                  |L1.8|
;;;93         while (*p_tbl == (CPU_DATA)0) {                         /* Search the bitmap table for the highest priority       */
;;;94             prio += DEF_INT_CPU_NBR_BITS;                       /* Compute the step of each CPU_DATA entry                */
000008  3420              ADDS     r4,r4,#0x20
00000a  b2e4              UXTB     r4,r4
;;;95             p_tbl++;
00000c  1d00              ADDS     r0,r0,#4
                  |L1.14|
00000e  6801              LDR      r1,[r0,#0]            ;93
000010  2900              CMP      r1,#0                 ;93
000012  d0f9              BEQ      |L1.8|
;;;96         }
;;;97         prio += (OS_PRIO)CPU_CntLeadZeros(*p_tbl);              /* Find the position of the first bit set at the entry    */
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       CPU_CntLeadZeros
00001a  4420              ADD      r0,r0,r4
00001c  b2c0              UXTB     r0,r0
;;;98         return (prio);
;;;99     }
00001e  bd10              POP      {r4,pc}
;;;100    
                          ENDP

                  |L1.32|
                          DCD      ||.data||

                          AREA ||i.OS_PrioInit||, CODE, READONLY, ALIGN=2

                  OS_PrioInit PROC
;;;58     
;;;59     void  OS_PrioInit (void)
000000  2000              MOVS     r0,#0
;;;60     {
;;;61         CPU_DATA  i;
;;;62     
;;;63     
;;;64                                                                 /* Clear the bitmap table ... no task is ready            */
;;;65         for (i = 0u; i < OS_PRIO_TBL_SIZE; i++) {
;;;66              OSPrioTbl[i] = (CPU_DATA)0;
000002  4904              LDR      r1,|L2.20|
000004  4602              MOV      r2,r0                 ;65
000006  bf00              NOP      
                  |L2.8|
000008  f8412020          STR      r2,[r1,r0,LSL #2]
00000c  1c40              ADDS     r0,r0,#1              ;65
00000e  2802              CMP      r0,#2                 ;65
000010  d3fa              BCC      |L2.8|
;;;67         }
;;;68     }
000012  4770              BX       lr
;;;69     
                          ENDP

                  |L2.20|
                          DCD      ||.data||

                          AREA ||i.OS_PrioInsert||, CODE, READONLY, ALIGN=2

                  OS_PrioInsert PROC
;;;114    
;;;115    void  OS_PrioInsert (OS_PRIO  prio)
000000  f000021f          AND      r2,r0,#0x1f
;;;116    {
;;;117        CPU_DATA  bit;
;;;118        CPU_DATA  bit_nbr;
;;;119        OS_PRIO   ix;
;;;120    
;;;121    
;;;122        ix             = prio / DEF_INT_CPU_NBR_BITS;
000004  0941              LSRS     r1,r0,#5
;;;123        bit_nbr        = (CPU_DATA)prio & (DEF_INT_CPU_NBR_BITS - 1u);
;;;124        bit            = 1u;
000006  2001              MOVS     r0,#1
;;;125        bit          <<= (DEF_INT_CPU_NBR_BITS - 1u) - bit_nbr;
000008  f1c2021f          RSB      r2,r2,#0x1f
00000c  4090              LSLS     r0,r0,r2
;;;126        OSPrioTbl[ix] |= bit;
00000e  4a03              LDR      r2,|L3.28|
000010  f8523021          LDR      r3,[r2,r1,LSL #2]
000014  4303              ORRS     r3,r3,r0
000016  f8423021          STR      r3,[r2,r1,LSL #2]
;;;127    }
00001a  4770              BX       lr
;;;128    
                          ENDP

                  |L3.28|
                          DCD      ||.data||

                          AREA ||i.OS_PrioRemove||, CODE, READONLY, ALIGN=2

                  OS_PrioRemove PROC
;;;142    
;;;143    void  OS_PrioRemove (OS_PRIO  prio)
000000  f000021f          AND      r2,r0,#0x1f
;;;144    {
;;;145        CPU_DATA  bit;
;;;146        CPU_DATA  bit_nbr;
;;;147        OS_PRIO   ix;
;;;148    
;;;149    
;;;150        ix             = prio / DEF_INT_CPU_NBR_BITS;
000004  0941              LSRS     r1,r0,#5
;;;151        bit_nbr        = (CPU_DATA)prio & (DEF_INT_CPU_NBR_BITS - 1u);
;;;152        bit            = 1u;
000006  2001              MOVS     r0,#1
;;;153        bit          <<= (DEF_INT_CPU_NBR_BITS - 1u) - bit_nbr;
000008  f1c2021f          RSB      r2,r2,#0x1f
00000c  4090              LSLS     r0,r0,r2
;;;154        OSPrioTbl[ix] &= ~bit;
00000e  4a03              LDR      r2,|L4.28|
000010  f8523021          LDR      r3,[r2,r1,LSL #2]
000014  4383              BICS     r3,r3,r0
000016  f8423021          STR      r3,[r2,r1,LSL #2]
;;;155    }
00001a  4770              BX       lr
                          ENDP

                  |L4.28|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  OSPrioTbl
                          %        8
