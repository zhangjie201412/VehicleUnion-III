; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\uc_bsp_int.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\uc_bsp_int.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\uc_bsp_int.crf ..\UCOSIII\UCOS_BSP\uc_bsp_int.c]
                          THUMB

                          AREA ||i.BSP_IntClr||, CODE, READONLY, ALIGN=1

                  BSP_IntClr PROC
;;;113    
;;;114    void  BSP_IntClr (CPU_DATA  int_id)
000000  4770              BX       lr
;;;115    {
;;;116    
;;;117    }
;;;118    
                          ENDP


                          AREA ||i.BSP_IntDis||, CODE, READONLY, ALIGN=1

                  BSP_IntDis PROC
;;;135    
;;;136    void  BSP_IntDis (CPU_DATA  int_id)
000000  2844              CMP      r0,#0x44
;;;137    {
000002  d203              BCS      |L2.12|
;;;138        if (int_id < BSP_INT_SRC_NBR) {
;;;139            CPU_IntSrcDis(int_id + 16);
000004  3010              ADDS     r0,r0,#0x10
000006  b2c0              UXTB     r0,r0
000008  f7ffbffe          B.W      CPU_IntSrcDis
                  |L2.12|
;;;140        }
;;;141    }
00000c  4770              BX       lr
;;;142    
                          ENDP


                          AREA ||i.BSP_IntDisAll||, CODE, READONLY, ALIGN=1

                  BSP_IntDisAll PROC
;;;159    
;;;160    void  BSP_IntDisAll (void)
000000  f7ffbffe          B.W      CPU_IntDis
;;;161    {
;;;162        CPU_IntDis();
;;;163    }
;;;164    
                          ENDP


                          AREA ||i.BSP_IntEn||, CODE, READONLY, ALIGN=1

                  BSP_IntEn PROC
;;;181    
;;;182    void  BSP_IntEn (CPU_DATA  int_id)
000000  2844              CMP      r0,#0x44
;;;183    {
000002  d203              BCS      |L4.12|
;;;184        if (int_id < BSP_INT_SRC_NBR) {
;;;185            CPU_IntSrcEn(int_id + 16);
000004  3010              ADDS     r0,r0,#0x10
000006  b2c0              UXTB     r0,r0
000008  f7ffbffe          B.W      CPU_IntSrcEn
                  |L4.12|
;;;186        }
;;;187    }
00000c  4770              BX       lr
;;;188    
                          ENDP


                          AREA ||i.BSP_IntHandler||, CODE, READONLY, ALIGN=2

                  BSP_IntHandler PROC
;;;391    
;;;392    static  void  BSP_IntHandler (CPU_DATA  int_id)
000000  b570              PUSH     {r4-r6,lr}
;;;393    {
000002  4604              MOV      r4,r0
;;;394        CPU_FNCT_VOID  isr;
;;;395        CPU_SR_ALLOC();
;;;396    
;;;397    
;;;398        CPU_CRITICAL_ENTER();                                       /* Tell the OS that we are starting an ISR            */
000004  f7fffffe          BL       CPU_SR_Save
000008  4605              MOV      r5,r0
;;;399    
;;;400        OSIntEnter();
00000a  f7fffffe          BL       OSIntEnter
;;;401    
;;;402        CPU_CRITICAL_EXIT();
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       CPU_SR_Restore
;;;403    
;;;404        if (int_id < BSP_INT_SRC_NBR) {
000014  2c44              CMP      r4,#0x44
000016  d204              BCS      |L5.34|
;;;405            isr = BSP_IntVectTbl[int_id];
000018  4804              LDR      r0,|L5.44|
00001a  f8500024          LDR      r0,[r0,r4,LSL #2]
;;;406            if (isr != (CPU_FNCT_VOID)0) {
00001e  b100              CBZ      r0,|L5.34|
;;;407                isr();
000020  4780              BLX      r0
                  |L5.34|
;;;408            }
;;;409        }
;;;410    
;;;411        OSIntExit();                                                /* Tell the OS that we are leaving the ISR            */
000022  e8bd4070          POP      {r4-r6,lr}
000026  f7ffbffe          B.W      OSIntExit
;;;412    }
;;;413    
                          ENDP

00002a  0000              DCW      0x0000
                  |L5.44|
                          DCD      ||.bss||

                          AREA ||i.BSP_IntHandlerADC1_2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerADC1_2 PROC
;;;322    void  BSP_IntHandlerDMA1_CH7      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH7);        }
;;;323    void  BSP_IntHandlerADC1_2        (void)  { BSP_IntHandler(BSP_INT_ID_ADC1_2);          }
000000  2012              MOVS     r0,#0x12
000002  f7ffbffe          B.W      BSP_IntHandler
;;;324    void  BSP_IntHandlerCAN1_TX       (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_TX);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN1_RX0||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN1_RX0 PROC
;;;324    void  BSP_IntHandlerCAN1_TX       (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_TX);         }
;;;325    void  BSP_IntHandlerCAN1_RX0      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX0);        }
000000  2014              MOVS     r0,#0x14
000002  f7ffbffe          B.W      BSP_IntHandler
;;;326    void  BSP_IntHandlerCAN1_RX1      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX1);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN1_RX1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN1_RX1 PROC
;;;325    void  BSP_IntHandlerCAN1_RX0      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX0);        }
;;;326    void  BSP_IntHandlerCAN1_RX1      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX1);        }
000000  2015              MOVS     r0,#0x15
000002  f7ffbffe          B.W      BSP_IntHandler
;;;327    void  BSP_IntHandlerCAN1_SCE      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_SCE);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN1_SCE||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN1_SCE PROC
;;;326    void  BSP_IntHandlerCAN1_RX1      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX1);        }
;;;327    void  BSP_IntHandlerCAN1_SCE      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_SCE);        }
000000  2016              MOVS     r0,#0x16
000002  f7ffbffe          B.W      BSP_IntHandler
;;;328    void  BSP_IntHandlerEXTI9_5       (void)  { BSP_IntHandler(BSP_INT_ID_EXTI9_5);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN1_TX||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN1_TX PROC
;;;323    void  BSP_IntHandlerADC1_2        (void)  { BSP_IntHandler(BSP_INT_ID_ADC1_2);          }
;;;324    void  BSP_IntHandlerCAN1_TX       (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_TX);         }
000000  2013              MOVS     r0,#0x13
000002  f7ffbffe          B.W      BSP_IntHandler
;;;325    void  BSP_IntHandlerCAN1_RX0      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX0);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN2_RX0||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN2_RX0 PROC
;;;361    void  BSP_IntHandlerCAN2_TX       (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_TX);         }
;;;362    void  BSP_IntHandlerCAN2_RX0      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX0);        }
000000  2040              MOVS     r0,#0x40
000002  f7ffbffe          B.W      BSP_IntHandler
;;;363    void  BSP_IntHandlerCAN2_RX1      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX1);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN2_RX1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN2_RX1 PROC
;;;362    void  BSP_IntHandlerCAN2_RX0      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX0);        }
;;;363    void  BSP_IntHandlerCAN2_RX1      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX1);        }
000000  2041              MOVS     r0,#0x41
000002  f7ffbffe          B.W      BSP_IntHandler
;;;364    void  BSP_IntHandlerCAN2_SCE      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_SCE);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN2_SCE||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN2_SCE PROC
;;;363    void  BSP_IntHandlerCAN2_RX1      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX1);        }
;;;364    void  BSP_IntHandlerCAN2_SCE      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_SCE);        }
000000  2042              MOVS     r0,#0x42
000002  f7ffbffe          B.W      BSP_IntHandler
;;;365    void  BSP_IntHandlerOTG           (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN2_TX||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN2_TX PROC
;;;360    void  BSP_IntHandlerETHWakeup     (void)  { BSP_IntHandler(BSP_INT_ID_ETH_WKUP);        }
;;;361    void  BSP_IntHandlerCAN2_TX       (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_TX);         }
000000  203f              MOVS     r0,#0x3f
000002  f7ffbffe          B.W      BSP_IntHandler
;;;362    void  BSP_IntHandlerCAN2_RX0      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX0);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH1 PROC
;;;315    void  BSP_IntHandlerEXTI4         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI4);           }
;;;316    void  BSP_IntHandlerDMA1_CH1      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH1);        }
000000  200b              MOVS     r0,#0xb
000002  f7ffbffe          B.W      BSP_IntHandler
;;;317    void  BSP_IntHandlerDMA1_CH2      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH2);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH2 PROC
;;;316    void  BSP_IntHandlerDMA1_CH1      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH1);        }
;;;317    void  BSP_IntHandlerDMA1_CH2      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH2);        }
000000  200c              MOVS     r0,#0xc
000002  f7ffbffe          B.W      BSP_IntHandler
;;;318    void  BSP_IntHandlerDMA1_CH3      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH3);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH3 PROC
;;;317    void  BSP_IntHandlerDMA1_CH2      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH2);        }
;;;318    void  BSP_IntHandlerDMA1_CH3      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH3);        }
000000  200d              MOVS     r0,#0xd
000002  f7ffbffe          B.W      BSP_IntHandler
;;;319    void  BSP_IntHandlerDMA1_CH4      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH4);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH4 PROC
;;;318    void  BSP_IntHandlerDMA1_CH3      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH3);        }
;;;319    void  BSP_IntHandlerDMA1_CH4      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH4);        }
000000  200e              MOVS     r0,#0xe
000002  f7ffbffe          B.W      BSP_IntHandler
;;;320    void  BSP_IntHandlerDMA1_CH5      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH5);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH5 PROC
;;;319    void  BSP_IntHandlerDMA1_CH4      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH4);        }
;;;320    void  BSP_IntHandlerDMA1_CH5      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH5);        }
000000  200f              MOVS     r0,#0xf
000002  f7ffbffe          B.W      BSP_IntHandler
;;;321    void  BSP_IntHandlerDMA1_CH6      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH6);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH6||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH6 PROC
;;;320    void  BSP_IntHandlerDMA1_CH5      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH5);        }
;;;321    void  BSP_IntHandlerDMA1_CH6      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH6);        }
000000  2010              MOVS     r0,#0x10
000002  f7ffbffe          B.W      BSP_IntHandler
;;;322    void  BSP_IntHandlerDMA1_CH7      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH7);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH7||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH7 PROC
;;;321    void  BSP_IntHandlerDMA1_CH6      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH6);        }
;;;322    void  BSP_IntHandlerDMA1_CH7      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH7);        }
000000  2011              MOVS     r0,#0x11
000002  f7ffbffe          B.W      BSP_IntHandler
;;;323    void  BSP_IntHandlerADC1_2        (void)  { BSP_IntHandler(BSP_INT_ID_ADC1_2);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH1 PROC
;;;353    void  BSP_IntHandlerTIM7          (void)  { BSP_IntHandler(BSP_INT_ID_TIM7);            }
;;;354    void  BSP_IntHandlerDMA2_CH1      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH1);        }
000000  2038              MOVS     r0,#0x38
000002  f7ffbffe          B.W      BSP_IntHandler
;;;355    void  BSP_IntHandlerDMA2_CH2      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH2);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH2 PROC
;;;354    void  BSP_IntHandlerDMA2_CH1      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH1);        }
;;;355    void  BSP_IntHandlerDMA2_CH2      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH2);        }
000000  2039              MOVS     r0,#0x39
000002  f7ffbffe          B.W      BSP_IntHandler
;;;356    void  BSP_IntHandlerDMA2_CH3      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH3);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH3 PROC
;;;355    void  BSP_IntHandlerDMA2_CH2      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH2);        }
;;;356    void  BSP_IntHandlerDMA2_CH3      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH3);        }
000000  203a              MOVS     r0,#0x3a
000002  f7ffbffe          B.W      BSP_IntHandler
;;;357    void  BSP_IntHandlerDMA2_CH4      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH4);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH4 PROC
;;;356    void  BSP_IntHandlerDMA2_CH3      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH3);        }
;;;357    void  BSP_IntHandlerDMA2_CH4      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH4);        }
000000  203b              MOVS     r0,#0x3b
000002  f7ffbffe          B.W      BSP_IntHandler
;;;358    void  BSP_IntHandlerDMA2_CH5      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH5);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH5 PROC
;;;357    void  BSP_IntHandlerDMA2_CH4      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH4);        }
;;;358    void  BSP_IntHandlerDMA2_CH5      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH5);        }
000000  203c              MOVS     r0,#0x3c
000002  f7ffbffe          B.W      BSP_IntHandler
;;;359    void  BSP_IntHandlerETH           (void)  { BSP_IntHandler(BSP_INT_ID_ETH);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerDummy||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDummy PROC
;;;430    
;;;431    static  void  BSP_IntHandlerDummy (void)
000000  4770              BX       lr
;;;432    {
;;;433    
;;;434    }
                          ENDP


                          AREA ||i.BSP_IntHandlerETH||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerETH PROC
;;;358    void  BSP_IntHandlerDMA2_CH5      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH5);        }
;;;359    void  BSP_IntHandlerETH           (void)  { BSP_IntHandler(BSP_INT_ID_ETH);             }
000000  203d              MOVS     r0,#0x3d
000002  f7ffbffe          B.W      BSP_IntHandler
;;;360    void  BSP_IntHandlerETHWakeup     (void)  { BSP_IntHandler(BSP_INT_ID_ETH_WKUP);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerETHWakeup||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerETHWakeup PROC
;;;359    void  BSP_IntHandlerETH           (void)  { BSP_IntHandler(BSP_INT_ID_ETH);             }
;;;360    void  BSP_IntHandlerETHWakeup     (void)  { BSP_IntHandler(BSP_INT_ID_ETH_WKUP);        }
000000  203e              MOVS     r0,#0x3e
000002  f7ffbffe          B.W      BSP_IntHandler
;;;361    void  BSP_IntHandlerCAN2_TX       (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_TX);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI0||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI0 PROC
;;;310    void  BSP_IntHandlerRCC           (void)  { BSP_IntHandler(BSP_INT_ID_RCC);             }
;;;311    void  BSP_IntHandlerEXTI0         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI0);           }
000000  2006              MOVS     r0,#6
000002  f7ffbffe          B.W      BSP_IntHandler
;;;312    void  BSP_IntHandlerEXTI1         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI1);           }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI1 PROC
;;;311    void  BSP_IntHandlerEXTI0         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI0);           }
;;;312    void  BSP_IntHandlerEXTI1         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI1);           }
000000  2007              MOVS     r0,#7
000002  f7ffbffe          B.W      BSP_IntHandler
;;;313    void  BSP_IntHandlerEXTI2         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI2);           }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI15_10||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI15_10 PROC
;;;344    void  BSP_IntHandlerUSART3        (void)  { BSP_IntHandler(BSP_INT_ID_USART3);          }
;;;345    void  BSP_IntHandlerEXTI15_10     (void)  { BSP_IntHandler(BSP_INT_ID_EXTI15_10);       }
000000  2028              MOVS     r0,#0x28
000002  f7ffbffe          B.W      BSP_IntHandler
;;;346    void  BSP_IntHandlerRTCAlarm      (void)  { BSP_IntHandler(BSP_INT_ID_RTC_ALARM);       }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI2 PROC
;;;312    void  BSP_IntHandlerEXTI1         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI1);           }
;;;313    void  BSP_IntHandlerEXTI2         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI2);           }
000000  2008              MOVS     r0,#8
000002  f7ffbffe          B.W      BSP_IntHandler
;;;314    void  BSP_IntHandlerEXTI3         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI3);           }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI3 PROC
;;;313    void  BSP_IntHandlerEXTI2         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI2);           }
;;;314    void  BSP_IntHandlerEXTI3         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI3);           }
000000  2009              MOVS     r0,#9
000002  f7ffbffe          B.W      BSP_IntHandler
;;;315    void  BSP_IntHandlerEXTI4         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI4);           }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI4 PROC
;;;314    void  BSP_IntHandlerEXTI3         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI3);           }
;;;315    void  BSP_IntHandlerEXTI4         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI4);           }
000000  200a              MOVS     r0,#0xa
000002  f7ffbffe          B.W      BSP_IntHandler
;;;316    void  BSP_IntHandlerDMA1_CH1      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH1);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI9_5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI9_5 PROC
;;;327    void  BSP_IntHandlerCAN1_SCE      (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_SCE);        }
;;;328    void  BSP_IntHandlerEXTI9_5       (void)  { BSP_IntHandler(BSP_INT_ID_EXTI9_5);         }
000000  2017              MOVS     r0,#0x17
000002  f7ffbffe          B.W      BSP_IntHandler
;;;329    void  BSP_IntHandlerTIM1_BRK      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_BRK);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerFLASH||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerFLASH PROC
;;;308    void  BSP_IntHandlerRTC           (void)  { BSP_IntHandler(BSP_INT_ID_RTC);             }
;;;309    void  BSP_IntHandlerFLASH         (void)  { BSP_IntHandler(BSP_INT_ID_FLASH);           }
000000  2004              MOVS     r0,#4
000002  f7ffbffe          B.W      BSP_IntHandler
;;;310    void  BSP_IntHandlerRCC           (void)  { BSP_IntHandler(BSP_INT_ID_RCC);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C1_ER||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C1_ER PROC
;;;336    void  BSP_IntHandlerI2C1_EV       (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_EV);         }
;;;337    void  BSP_IntHandlerI2C1_ER       (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_ER);         }
000000  2020              MOVS     r0,#0x20
000002  f7ffbffe          B.W      BSP_IntHandler
;;;338    void  BSP_IntHandlerI2C2_EV       (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_EV);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C1_EV||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C1_EV PROC
;;;335    void  BSP_IntHandlerTIM4          (void)  { BSP_IntHandler(BSP_INT_ID_TIM4);            }
;;;336    void  BSP_IntHandlerI2C1_EV       (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_EV);         }
000000  201f              MOVS     r0,#0x1f
000002  f7ffbffe          B.W      BSP_IntHandler
;;;337    void  BSP_IntHandlerI2C1_ER       (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_ER);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C2_ER||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C2_ER PROC
;;;338    void  BSP_IntHandlerI2C2_EV       (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_EV);         }
;;;339    void  BSP_IntHandlerI2C2_ER       (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_ER);         }
000000  2022              MOVS     r0,#0x22
000002  f7ffbffe          B.W      BSP_IntHandler
;;;340    void  BSP_IntHandlerSPI1          (void)  { BSP_IntHandler(BSP_INT_ID_SPI1);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C2_EV||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C2_EV PROC
;;;337    void  BSP_IntHandlerI2C1_ER       (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_ER);         }
;;;338    void  BSP_IntHandlerI2C2_EV       (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_EV);         }
000000  2021              MOVS     r0,#0x21
000002  f7ffbffe          B.W      BSP_IntHandler
;;;339    void  BSP_IntHandlerI2C2_ER       (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_ER);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerOTG||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerOTG PROC
;;;364    void  BSP_IntHandlerCAN2_SCE      (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_SCE);        }
;;;365    void  BSP_IntHandlerOTG           (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS);          }
000000  2043              MOVS     r0,#0x43
000002  f7ffbffe          B.W      BSP_IntHandler
;;;366    
                          ENDP


                          AREA ||i.BSP_IntHandlerPVD||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerPVD PROC
;;;305    void  BSP_IntHandlerWWDG          (void)  { BSP_IntHandler(BSP_INT_ID_WWDG);            }
;;;306    void  BSP_IntHandlerPVD           (void)  { BSP_IntHandler(BSP_INT_ID_PVD);             }
000000  2001              MOVS     r0,#1
000002  f7ffbffe          B.W      BSP_IntHandler
;;;307    void  BSP_IntHandlerTAMPER        (void)  { BSP_IntHandler(BSP_INT_ID_TAMPER);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerRCC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerRCC PROC
;;;309    void  BSP_IntHandlerFLASH         (void)  { BSP_IntHandler(BSP_INT_ID_FLASH);           }
;;;310    void  BSP_IntHandlerRCC           (void)  { BSP_IntHandler(BSP_INT_ID_RCC);             }
000000  2005              MOVS     r0,#5
000002  f7ffbffe          B.W      BSP_IntHandler
;;;311    void  BSP_IntHandlerEXTI0         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI0);           }
                          ENDP


                          AREA ||i.BSP_IntHandlerRTC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerRTC PROC
;;;307    void  BSP_IntHandlerTAMPER        (void)  { BSP_IntHandler(BSP_INT_ID_TAMPER);          }
;;;308    void  BSP_IntHandlerRTC           (void)  { BSP_IntHandler(BSP_INT_ID_RTC);             }
000000  2003              MOVS     r0,#3
000002  f7ffbffe          B.W      BSP_IntHandler
;;;309    void  BSP_IntHandlerFLASH         (void)  { BSP_IntHandler(BSP_INT_ID_FLASH);           }
                          ENDP


                          AREA ||i.BSP_IntHandlerRTCAlarm||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerRTCAlarm PROC
;;;345    void  BSP_IntHandlerEXTI15_10     (void)  { BSP_IntHandler(BSP_INT_ID_EXTI15_10);       }
;;;346    void  BSP_IntHandlerRTCAlarm      (void)  { BSP_IntHandler(BSP_INT_ID_RTC_ALARM);       }
000000  2029              MOVS     r0,#0x29
000002  f7ffbffe          B.W      BSP_IntHandler
;;;347    void  BSP_IntHandlerUSBWakeUp     (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS_WKUP);     }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI1 PROC
;;;339    void  BSP_IntHandlerI2C2_ER       (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_ER);         }
;;;340    void  BSP_IntHandlerSPI1          (void)  { BSP_IntHandler(BSP_INT_ID_SPI1);            }
000000  2023              MOVS     r0,#0x23
000002  f7ffbffe          B.W      BSP_IntHandler
;;;341    void  BSP_IntHandlerSPI2          (void)  { BSP_IntHandler(BSP_INT_ID_SPI2);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI2 PROC
;;;340    void  BSP_IntHandlerSPI1          (void)  { BSP_IntHandler(BSP_INT_ID_SPI1);            }
;;;341    void  BSP_IntHandlerSPI2          (void)  { BSP_IntHandler(BSP_INT_ID_SPI2);            }
000000  2024              MOVS     r0,#0x24
000002  f7ffbffe          B.W      BSP_IntHandler
;;;342    void  BSP_IntHandlerUSART1        (void)  { BSP_IntHandler(BSP_INT_ID_USART1);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI3 PROC
;;;348    void  BSP_IntHandlerTIM5          (void)  { BSP_IntHandler(BSP_INT_ID_TIM5);            }
;;;349    void  BSP_IntHandlerSPI3          (void)  { BSP_IntHandler(BSP_INT_ID_SPI3);            }
000000  2033              MOVS     r0,#0x33
000002  f7ffbffe          B.W      BSP_IntHandler
;;;350    void  BSP_IntHandlerUSART4        (void)  { BSP_IntHandler(BSP_INT_ID_USART4);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerTAMPER||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTAMPER PROC
;;;306    void  BSP_IntHandlerPVD           (void)  { BSP_IntHandler(BSP_INT_ID_PVD);             }
;;;307    void  BSP_IntHandlerTAMPER        (void)  { BSP_IntHandler(BSP_INT_ID_TAMPER);          }
000000  2002              MOVS     r0,#2
000002  f7ffbffe          B.W      BSP_IntHandler
;;;308    void  BSP_IntHandlerRTC           (void)  { BSP_IntHandler(BSP_INT_ID_RTC);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM1_BRK||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM1_BRK PROC
;;;328    void  BSP_IntHandlerEXTI9_5       (void)  { BSP_IntHandler(BSP_INT_ID_EXTI9_5);         }
;;;329    void  BSP_IntHandlerTIM1_BRK      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_BRK);        }
000000  2018              MOVS     r0,#0x18
000002  f7ffbffe          B.W      BSP_IntHandler
;;;330    void  BSP_IntHandlerTIM1_UP       (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_UP);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM1_CC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM1_CC PROC
;;;331    void  BSP_IntHandlerTIM1_TRG_COM  (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_TRG_COM);    }
;;;332    void  BSP_IntHandlerTIM1_CC       (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_CC);         }
000000  201b              MOVS     r0,#0x1b
000002  f7ffbffe          B.W      BSP_IntHandler
;;;333    void  BSP_IntHandlerTIM2          (void)  { BSP_IntHandler(BSP_INT_ID_TIM2);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM1_TRG_COM||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM1_TRG_COM PROC
;;;330    void  BSP_IntHandlerTIM1_UP       (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_UP);         }
;;;331    void  BSP_IntHandlerTIM1_TRG_COM  (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_TRG_COM);    }
000000  201a              MOVS     r0,#0x1a
000002  f7ffbffe          B.W      BSP_IntHandler
;;;332    void  BSP_IntHandlerTIM1_CC       (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_CC);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM1_UP||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM1_UP PROC
;;;329    void  BSP_IntHandlerTIM1_BRK      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_BRK);        }
;;;330    void  BSP_IntHandlerTIM1_UP       (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_UP);         }
000000  2019              MOVS     r0,#0x19
000002  f7ffbffe          B.W      BSP_IntHandler
;;;331    void  BSP_IntHandlerTIM1_TRG_COM  (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_TRG_COM);    }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM2 PROC
;;;332    void  BSP_IntHandlerTIM1_CC       (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_CC);         }
;;;333    void  BSP_IntHandlerTIM2          (void)  { BSP_IntHandler(BSP_INT_ID_TIM2);            }
000000  201c              MOVS     r0,#0x1c
000002  f7ffbffe          B.W      BSP_IntHandler
;;;334    void  BSP_IntHandlerTIM3          (void)  { BSP_IntHandler(BSP_INT_ID_TIM3);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM3 PROC
;;;333    void  BSP_IntHandlerTIM2          (void)  { BSP_IntHandler(BSP_INT_ID_TIM2);            }
;;;334    void  BSP_IntHandlerTIM3          (void)  { BSP_IntHandler(BSP_INT_ID_TIM3);            }
000000  201d              MOVS     r0,#0x1d
000002  f7ffbffe          B.W      BSP_IntHandler
;;;335    void  BSP_IntHandlerTIM4          (void)  { BSP_IntHandler(BSP_INT_ID_TIM4);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM4 PROC
;;;334    void  BSP_IntHandlerTIM3          (void)  { BSP_IntHandler(BSP_INT_ID_TIM3);            }
;;;335    void  BSP_IntHandlerTIM4          (void)  { BSP_IntHandler(BSP_INT_ID_TIM4);            }
000000  201e              MOVS     r0,#0x1e
000002  f7ffbffe          B.W      BSP_IntHandler
;;;336    void  BSP_IntHandlerI2C1_EV       (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_EV);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM5 PROC
;;;347    void  BSP_IntHandlerUSBWakeUp     (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS_WKUP);     }
;;;348    void  BSP_IntHandlerTIM5          (void)  { BSP_IntHandler(BSP_INT_ID_TIM5);            }
000000  2032              MOVS     r0,#0x32
000002  f7ffbffe          B.W      BSP_IntHandler
;;;349    void  BSP_IntHandlerSPI3          (void)  { BSP_IntHandler(BSP_INT_ID_SPI3);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM6||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM6 PROC
;;;351    void  BSP_IntHandlerUSART5        (void)  { BSP_IntHandler(BSP_INT_ID_USART5);          }
;;;352    void  BSP_IntHandlerTIM6          (void)  { BSP_IntHandler(BSP_INT_ID_TIM6);            }
000000  2036              MOVS     r0,#0x36
000002  f7ffbffe          B.W      BSP_IntHandler
;;;353    void  BSP_IntHandlerTIM7          (void)  { BSP_IntHandler(BSP_INT_ID_TIM7);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM7||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM7 PROC
;;;352    void  BSP_IntHandlerTIM6          (void)  { BSP_IntHandler(BSP_INT_ID_TIM6);            }
;;;353    void  BSP_IntHandlerTIM7          (void)  { BSP_IntHandler(BSP_INT_ID_TIM7);            }
000000  2037              MOVS     r0,#0x37
000002  f7ffbffe          B.W      BSP_IntHandler
;;;354    void  BSP_IntHandlerDMA2_CH1      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH1);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART1 PROC
;;;341    void  BSP_IntHandlerSPI2          (void)  { BSP_IntHandler(BSP_INT_ID_SPI2);            }
;;;342    void  BSP_IntHandlerUSART1        (void)  { BSP_IntHandler(BSP_INT_ID_USART1);          }
000000  2025              MOVS     r0,#0x25
000002  f7ffbffe          B.W      BSP_IntHandler
;;;343    void  BSP_IntHandlerUSART2        (void)  { BSP_IntHandler(BSP_INT_ID_USART2);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART2 PROC
;;;342    void  BSP_IntHandlerUSART1        (void)  { BSP_IntHandler(BSP_INT_ID_USART1);          }
;;;343    void  BSP_IntHandlerUSART2        (void)  { BSP_IntHandler(BSP_INT_ID_USART2);          }
000000  2026              MOVS     r0,#0x26
000002  f7ffbffe          B.W      BSP_IntHandler
;;;344    void  BSP_IntHandlerUSART3        (void)  { BSP_IntHandler(BSP_INT_ID_USART3);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART3 PROC
;;;343    void  BSP_IntHandlerUSART2        (void)  { BSP_IntHandler(BSP_INT_ID_USART2);          }
;;;344    void  BSP_IntHandlerUSART3        (void)  { BSP_IntHandler(BSP_INT_ID_USART3);          }
000000  2027              MOVS     r0,#0x27
000002  f7ffbffe          B.W      BSP_IntHandler
;;;345    void  BSP_IntHandlerEXTI15_10     (void)  { BSP_IntHandler(BSP_INT_ID_EXTI15_10);       }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART4 PROC
;;;349    void  BSP_IntHandlerSPI3          (void)  { BSP_IntHandler(BSP_INT_ID_SPI3);            }
;;;350    void  BSP_IntHandlerUSART4        (void)  { BSP_IntHandler(BSP_INT_ID_USART4);          }
000000  2034              MOVS     r0,#0x34
000002  f7ffbffe          B.W      BSP_IntHandler
;;;351    void  BSP_IntHandlerUSART5        (void)  { BSP_IntHandler(BSP_INT_ID_USART5);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART5 PROC
;;;350    void  BSP_IntHandlerUSART4        (void)  { BSP_IntHandler(BSP_INT_ID_USART4);          }
;;;351    void  BSP_IntHandlerUSART5        (void)  { BSP_IntHandler(BSP_INT_ID_USART5);          }
000000  2035              MOVS     r0,#0x35
000002  f7ffbffe          B.W      BSP_IntHandler
;;;352    void  BSP_IntHandlerTIM6          (void)  { BSP_IntHandler(BSP_INT_ID_TIM6);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSBWakeUp||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSBWakeUp PROC
;;;346    void  BSP_IntHandlerRTCAlarm      (void)  { BSP_IntHandler(BSP_INT_ID_RTC_ALARM);       }
;;;347    void  BSP_IntHandlerUSBWakeUp     (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS_WKUP);     }
000000  202a              MOVS     r0,#0x2a
000002  f7ffbffe          B.W      BSP_IntHandler
;;;348    void  BSP_IntHandlerTIM5          (void)  { BSP_IntHandler(BSP_INT_ID_TIM5);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerWWDG||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerWWDG PROC
;;;304    
;;;305    void  BSP_IntHandlerWWDG          (void)  { BSP_IntHandler(BSP_INT_ID_WWDG);            }
000000  2000              MOVS     r0,#0
000002  f7ffbffe          B.W      BSP_IntHandler
;;;306    void  BSP_IntHandlerPVD           (void)  { BSP_IntHandler(BSP_INT_ID_PVD);             }
                          ENDP


                          AREA ||i.BSP_IntInit||, CODE, READONLY, ALIGN=2

                  BSP_IntInit PROC
;;;277    
;;;278    void  BSP_IntInit (void)
000000  b510              PUSH     {r4,lr}
;;;279    {
;;;280        CPU_DATA  int_id;
;;;281    
;;;282    
;;;283        for (int_id = 0; int_id < BSP_INT_SRC_NBR; int_id++) {
000002  2400              MOVS     r4,#0
                  |L68.4|
;;;284            BSP_IntVectSet(int_id, BSP_IntHandlerDummy);
000004  4903              LDR      r1,|L68.20|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       BSP_IntVectSet
00000c  1c64              ADDS     r4,r4,#1              ;283
00000e  2c44              CMP      r4,#0x44              ;283
000010  d3f8              BCC      |L68.4|
;;;285        }
;;;286    }
000012  bd10              POP      {r4,pc}
;;;287    
                          ENDP

                  |L68.20|
                          DCD      BSP_IntHandlerDummy

                          AREA ||i.BSP_IntPrioSet||, CODE, READONLY, ALIGN=1

                  BSP_IntPrioSet PROC
;;;239    
;;;240    void  BSP_IntPrioSet (CPU_DATA    int_id,
000000  b570              PUSH     {r4-r6,lr}
;;;241                          CPU_INT08U  prio)
;;;242    {
000002  460e              MOV      r6,r1
000004  4604              MOV      r4,r0
;;;243        CPU_SR_ALLOC();
;;;244    
;;;245    
;;;246        if (int_id < BSP_INT_SRC_NBR) {
000006  2844              CMP      r0,#0x44
000008  d20c              BCS      |L69.36|
;;;247            CPU_CRITICAL_ENTER();
00000a  f7fffffe          BL       CPU_SR_Save
00000e  4605              MOV      r5,r0
;;;248            CPU_IntSrcPrioSet(int_id + 16, prio);
000010  3410              ADDS     r4,r4,#0x10
000012  b2e0              UXTB     r0,r4
000014  4631              MOV      r1,r6
000016  f7fffffe          BL       CPU_IntSrcPrioSet
;;;249            CPU_CRITICAL_EXIT();
00001a  4628              MOV      r0,r5
00001c  e8bd4070          POP      {r4-r6,lr}
000020  f7ffbffe          B.W      CPU_SR_Restore
                  |L69.36|
;;;250        }
;;;251    }
000024  bd70              POP      {r4-r6,pc}
;;;252    
                          ENDP


                          AREA ||i.BSP_IntVectSet||, CODE, READONLY, ALIGN=2

                  BSP_IntVectSet PROC
;;;207    
;;;208    void  BSP_IntVectSet (CPU_DATA       int_id,
000000  b570              PUSH     {r4-r6,lr}
;;;209                          CPU_FNCT_VOID  isr)
;;;210    {
000002  460d              MOV      r5,r1
000004  4604              MOV      r4,r0
;;;211        CPU_SR_ALLOC();
;;;212    
;;;213    
;;;214        if (int_id < BSP_INT_SRC_NBR) {
000006  2844              CMP      r0,#0x44
000008  d208              BCS      |L70.28|
;;;215            CPU_CRITICAL_ENTER();
00000a  f7fffffe          BL       CPU_SR_Save
;;;216            BSP_IntVectTbl[int_id] = isr;
00000e  4904              LDR      r1,|L70.32|
000010  f8415024          STR      r5,[r1,r4,LSL #2]
;;;217            CPU_CRITICAL_EXIT();
000014  e8bd4070          POP      {r4-r6,lr}
000018  f7ffbffe          B.W      CPU_SR_Restore
                  |L70.28|
;;;218        }
;;;219    }
00001c  bd70              POP      {r4-r6,pc}
;;;220    
                          ENDP

00001e  0000              DCW      0x0000
                  |L70.32|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  BSP_IntVectTbl
                          %        272
