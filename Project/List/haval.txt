; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\haval.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\haval.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\haval.crf ..\PAL\vehicles\haval.c]
                          THUMB

                          AREA ||i.haval_check_fault_code||, CODE, READONLY, ALIGN=1

                  haval_check_fault_code PROC
;;;438    
;;;439    uint32_t *haval_check_fault_code(uint8_t id, uint8_t *len)
000000  2000              MOVS     r0,#0
;;;440    {
;;;441        return NULL;
;;;442    }
000002  4770              BX       lr
;;;443    
                          ENDP


                          AREA ||i.haval_clear_fault_code||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  haval_clear_fault_code PROC
;;;443    
;;;444    void haval_clear_fault_code(void)
000000  b508              PUSH     {r3,lr}
;;;445    {
;;;446        logi("%s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L2.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L2.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L2.48|
000024  a003              ADR      r0,|L2.52|
000026  f7fffffe          BL       __2printf
                  |L2.42|
;;;447    }
00002a  bd08              POP      {r3,pc}
;;;448    
                          ENDP

                  |L2.44|
                          DCD      DEBUG_MODE
                  |L2.48|
                          DCD      ||.constdata||+0x6a
                  |L2.52|
000034  5b253035          DCB      "[%05d.%03d/I]: %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a2025
000044  730d0a00

                          AREA ||i.haval_ctrl_door||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  haval_ctrl_door PROC
;;;354    
;;;355    void haval_ctrl_door(uint8_t state)
000000  b51c              PUSH     {r2-r4,lr}
;;;356    {
000002  4604              MOV      r4,r0
;;;357        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4909              LDR      r1,|L3.48|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L3.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b03              LDR      r3,|L3.52|
000026  a004              ADR      r0,|L3.56|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L3.46|
;;;358    }
00002e  bd1c              POP      {r2-r4,pc}
;;;359    
                          ENDP

                  |L3.48|
                          DCD      DEBUG_MODE
                  |L3.52|
                          DCD      ||.constdata||+0x12
                  |L3.56|
000038  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
00003c  642e2530
000040  33642f49
000044  5d3a2025
000048  733a2073
00004c  74617465
000050  203d2025
000054  640d0a00

                          AREA ||i.haval_ctrl_findcar||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  haval_ctrl_findcar PROC
;;;374    
;;;375    void haval_ctrl_findcar(uint8_t state)
000000  b51c              PUSH     {r2-r4,lr}
;;;376    {
000002  4604              MOV      r4,r0
;;;377        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4909              LDR      r1,|L4.48|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L4.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b03              LDR      r3,|L4.52|
000026  a004              ADR      r0,|L4.56|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L4.46|
;;;378    }
00002e  bd1c              POP      {r2-r4,pc}
;;;379    
                          ENDP

                  |L4.48|
                          DCD      DEBUG_MODE
                  |L4.52|
                          DCD      ||.constdata||+0x57
                  |L4.56|
000038  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
00003c  642e2530
000040  33642f49
000044  5d3a2025
000048  733a2073
00004c  74617465
000050  203d2025
000054  640d0a00

                          AREA ||i.haval_ctrl_light||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  haval_ctrl_light PROC
;;;359    
;;;360    void haval_ctrl_light(uint8_t state)
000000  b51c              PUSH     {r2-r4,lr}
;;;361    {
000002  4604              MOV      r4,r0
;;;362        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4909              LDR      r1,|L5.48|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L5.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b03              LDR      r3,|L5.52|
000026  a004              ADR      r0,|L5.56|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L5.46|
;;;363    }
00002e  bd1c              POP      {r2-r4,pc}
;;;364    
                          ENDP

                  |L5.48|
                          DCD      DEBUG_MODE
                  |L5.52|
                          DCD      ||.constdata||+0x22
                  |L5.56|
000038  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
00003c  642e2530
000040  33642f49
000044  5d3a2025
000048  733a2073
00004c  74617465
000050  203d2025
000054  640d0a00

                          AREA ||i.haval_ctrl_sunroof||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  haval_ctrl_sunroof PROC
;;;364    
;;;365    void haval_ctrl_sunroof(uint8_t state)
000000  b51c              PUSH     {r2-r4,lr}
;;;366    {
000002  4604              MOV      r4,r0
;;;367        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4909              LDR      r1,|L6.48|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L6.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b03              LDR      r3,|L6.52|
000026  a004              ADR      r0,|L6.56|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L6.46|
;;;368    }
00002e  bd1c              POP      {r2-r4,pc}
;;;369    
                          ENDP

                  |L6.48|
                          DCD      DEBUG_MODE
                  |L6.52|
                          DCD      ||.constdata||+0x33
                  |L6.56|
000038  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
00003c  642e2530
000040  33642f49
000044  5d3a2025
000048  733a2073
00004c  74617465
000050  203d2025
000054  640d0a00

                          AREA ||i.haval_ctrl_trunk||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  haval_ctrl_trunk PROC
;;;369    
;;;370    void haval_ctrl_trunk(uint8_t state)
000000  b51c              PUSH     {r2-r4,lr}
;;;371    {
000002  4604              MOV      r4,r0
;;;372        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4909              LDR      r1,|L7.48|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L7.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b03              LDR      r3,|L7.52|
000026  a004              ADR      r0,|L7.56|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L7.46|
;;;373    }
00002e  bd1c              POP      {r2-r4,pc}
;;;374    
                          ENDP

                  |L7.48|
                          DCD      DEBUG_MODE
                  |L7.52|
                          DCD      ||.constdata||+0x46
                  |L7.56|
000038  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
00003c  642e2530
000040  33642f49
000044  5d3a2025
000048  733a2073
00004c  74617465
000050  203d2025
000054  640d0a00

                          AREA ||i.haval_ctrl_window||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  haval_ctrl_window PROC
;;;349    
;;;350    void haval_ctrl_window(uint8_t state)
000000  b51c              PUSH     {r2-r4,lr}
;;;351    {
000002  4604              MOV      r4,r0
;;;352        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4909              LDR      r1,|L8.48|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L8.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b03              LDR      r3,|L8.52|
000026  a004              ADR      r0,|L8.56|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L8.46|
;;;353    }
00002e  bd1c              POP      {r2-r4,pc}
;;;354    
                          ENDP

                  |L8.48|
                          DCD      DEBUG_MODE
                  |L8.52|
                          DCD      ||.constdata||
                  |L8.56|
000038  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
00003c  642e2530
000040  33642f49
000044  5d3a2025
000048  733a2073
00004c  74617465
000050  203d2025
000054  640d0a00

                          AREA ||i.haval_data_stream||, CODE, READONLY, ALIGN=2

                  haval_data_stream PROC
;;;402    
;;;403    uint8_t* haval_data_stream(uint8_t pid, uint8_t *len)
000000  b5f0              PUSH     {r4-r7,lr}
;;;404    {
000002  4605              MOV      r5,r0
;;;405        int8_t ret, i;
;;;406        uint8_t valid_len;
;;;407        uint8_t offset;
;;;408    
;;;409        CanTxMsg txMsg;
;;;410        CanRxMsg *rxMsg;
;;;411    
;;;412        if(havalSupportItems[pid].support != SUPPORTED) {
000004  4822              LDR      r0,|L9.144|
000006  b085              SUB      sp,sp,#0x14           ;404
000008  eb000045          ADD      r0,r0,r5,LSL #1
00000c  460c              MOV      r4,r1                 ;404
00000e  7840              LDRB     r0,[r0,#1]
000010  2801              CMP      r0,#1
000012  d002              BEQ      |L9.26|
;;;413            *len = UNSUPPORTED_LEN;
000014  20ff              MOVS     r0,#0xff
000016  7008              STRB     r0,[r1,#0]
;;;414            return NULL;
000018  e037              B        |L9.138|
                  |L9.26|
;;;415        }
;;;416    
;;;417        xdelay(2);
00001a  2002              MOVS     r0,#2
00001c  f7fffffe          BL       xdelay
;;;418        valid_len = havalStdDs[pid].valid_len;
000020  481b              LDR      r0,|L9.144|
000022  eb0501c5          ADD      r1,r5,r5,LSL #3
000026  3072              ADDS     r0,r0,#0x72
000028  eb000141          ADD      r1,r0,r1,LSL #1
00002c  466a              MOV      r2,sp                 ;409
00002e  7c4d              LDRB     r5,[r1,#0x11]
;;;419        offset = havalStdDs[pid].offset;
000030  7c0e              LDRB     r6,[r1,#0x10]
;;;420        txMsg.StdId = havalStdDs[pid].txId;
000032  8848              LDRH     r0,[r1,#2]
;;;421        txMsg.IDE = CAN_ID_STD;
000034  9000              STR      r0,[sp,#0]
000036  2000              MOVS     r0,#0
000038  f88d0008          STRB     r0,[sp,#8]
;;;422        txMsg.DLC = havalStdDs[pid].len;
00003c  7908              LDRB     r0,[r1,#4]
00003e  f88d000a          STRB     r0,[sp,#0xa]
;;;423        for(i = 0; i < txMsg.DLC; i++) {
000042  2000              MOVS     r0,#0
000044  e005              B        |L9.82|
                  |L9.70|
;;;424            txMsg.Data[i] = havalStdDs[pid].data[i];
000046  180b              ADDS     r3,r1,r0
000048  1817              ADDS     r7,r2,r0
00004a  795b              LDRB     r3,[r3,#5]
00004c  1c40              ADDS     r0,r0,#1              ;423
00004e  72fb              STRB     r3,[r7,#0xb]
000050  b240              SXTB     r0,r0                 ;423
                  |L9.82|
000052  f89d300a          LDRB     r3,[sp,#0xa]          ;423
000056  4283              CMP      r3,r0                 ;423
000058  dcf5              BGT      |L9.70|
;;;425        }
;;;426        ret = flexcan_ioctl(DIR_BI, &txMsg, havalStdDs[pid].rxId, 1);
00005a  89ca              LDRH     r2,[r1,#0xe]
00005c  2301              MOVS     r3,#1
00005e  4669              MOV      r1,sp
000060  2003              MOVS     r0,#3
000062  f7fffffe          BL       flexcan_ioctl
;;;427        if(ret > 0) {
000066  2800              CMP      r0,#0
000068  dd0f              BLE      |L9.138|
;;;428            rxMsg = flexcan_dump();
00006a  f7fffffe          BL       flexcan_dump
;;;429            for(i = 0; i < 8; i++) {
;;;430                haval_rx_buf[i] = rxMsg->Data[i];
00006e  4a08              LDR      r2,|L9.144|
000070  2100              MOVS     r1,#0                 ;429
000072  3a08              SUBS     r2,r2,#8
                  |L9.116|
000074  1843              ADDS     r3,r0,r1
000076  7adb              LDRB     r3,[r3,#0xb]
000078  5453              STRB     r3,[r2,r1]
00007a  1c49              ADDS     r1,r1,#1              ;429
00007c  b249              SXTB     r1,r1                 ;429
00007e  2908              CMP      r1,#8                 ;429
000080  dbf8              BLT      |L9.116|
;;;431            }
;;;432            *len = valid_len;
000082  7025              STRB     r5,[r4,#0]
;;;433            return haval_rx_buf + offset;
000084  1990              ADDS     r0,r2,r6
                  |L9.134|
;;;434        } else {
;;;435            return NULL;
;;;436        }
;;;437    }
000086  b005              ADD      sp,sp,#0x14
000088  bdf0              POP      {r4-r7,pc}
                  |L9.138|
00008a  2000              MOVS     r0,#0                 ;435
00008c  e7fb              B        |L9.134|
;;;438    
                          ENDP

00008e  0000              DCW      0x0000
                  |L9.144|
                          DCD      ||.data||+0x8

                          AREA ||i.haval_engine_on||, CODE, READONLY, ALIGN=2

                  haval_engine_on PROC
;;;379    
;;;380    bool haval_engine_on(void)
000000  b510              PUSH     {r4,lr}
;;;381    {
;;;382        CanRxMsg *rxMsg;
;;;383        int8_t ret = -1;
;;;384        bool on = FALSE;
000002  2400              MOVS     r4,#0
;;;385    
;;;386        ret = flexcan_ioctl(DIR_BI, &havalEngineCmd,
000004  2301              MOVS     r3,#1
000006  f44f62fd          MOV      r2,#0x7e8
00000a  4906              LDR      r1,|L10.36|
00000c  2003              MOVS     r0,#3
00000e  f7fffffe          BL       flexcan_ioctl
;;;387                0x7e8, 1);
;;;388        if(ret > 0) {
000012  2800              CMP      r0,#0
000014  dd03              BLE      |L10.30|
;;;389            rxMsg = flexcan_dump();
000016  f7fffffe          BL       flexcan_dump
;;;390            //check if the receive msg type is needed
;;;391            //TODO: ???
;;;392            if(rxMsg == NULL) {
00001a  b100              CBZ      r0,|L10.30|
;;;393                on = FALSE;
;;;394            } else {
;;;395                on = TRUE;
00001c  2401              MOVS     r4,#1
                  |L10.30|
;;;396            }
;;;397        } else {
;;;398            on = FALSE;
;;;399        }
;;;400        return on;
00001e  4620              MOV      r0,r4
;;;401    }
000020  bd10              POP      {r4,pc}
;;;402    
                          ENDP

000022  0000              DCW      0x0000
                  |L10.36|
                          DCD      ||.data||+0x47c

                          AREA ||i.haval_exit||, CODE, READONLY, ALIGN=1

                  haval_exit PROC
;;;344    {}
;;;345    void haval_exit(uint8_t type)
000000  4770              BX       lr
;;;346    {}
;;;347    void haval_keepalive(uint8_t type)
                          ENDP


                          AREA ||i.haval_init||, CODE, READONLY, ALIGN=1

                  haval_init PROC
;;;342    
;;;343    void haval_init(uint8_t type)
000000  4770              BX       lr
;;;344    {}
;;;345    void haval_exit(uint8_t type)
                          ENDP


                          AREA ||i.haval_keepalive||, CODE, READONLY, ALIGN=1

                  haval_keepalive PROC
;;;346    {}
;;;347    void haval_keepalive(uint8_t type)
000000  4770              BX       lr
;;;348    {}
;;;349    
                          ENDP


                          AREA ||i.haval_setup||, CODE, READONLY, ALIGN=2

                  haval_setup PROC
;;;320    
;;;321    void haval_setup(Vehicles *vehicle)
000000  4911              LDR      r1,|L14.72|
;;;322    {
;;;323        haval_ctrl_ops.control_window = haval_ctrl_window;
000002  4a10              LDR      r2,|L14.68|
;;;324        haval_ctrl_ops.control_door = haval_ctrl_door;
;;;325        haval_ctrl_ops.control_sunroof = haval_ctrl_sunroof;
;;;326        haval_ctrl_ops.control_light = haval_ctrl_light;
;;;327        haval_ctrl_ops.control_trunk = haval_ctrl_trunk;
;;;328        haval_ctrl_ops.control_findcar = haval_ctrl_findcar;
;;;329        haval_ctrl_ops.clear_fault_code = haval_clear_fault_code;
;;;330    
;;;331        haval_data_ops.transfer_data_stream = haval_data_stream;
000004  4b17              LDR      r3,|L14.100|
000006  600a              STR      r2,[r1,#0]            ;324  ; haval_ctrl_ops
000008  4a10              LDR      r2,|L14.76|
00000a  604a              STR      r2,[r1,#4]            ;325  ; haval_ctrl_ops
00000c  4a10              LDR      r2,|L14.80|
00000e  60ca              STR      r2,[r1,#0xc]          ;326  ; haval_ctrl_ops
000010  4a10              LDR      r2,|L14.84|
000012  608a              STR      r2,[r1,#8]            ;327  ; haval_ctrl_ops
000014  4a10              LDR      r2,|L14.88|
000016  610a              STR      r2,[r1,#0x10]         ;328  ; haval_ctrl_ops
000018  4a10              LDR      r2,|L14.92|
00001a  614a              STR      r2,[r1,#0x14]         ;329  ; haval_ctrl_ops
00001c  4a10              LDR      r2,|L14.96|
00001e  618a              STR      r2,[r1,#0x18]  ; haval_ctrl_ops
000020  f101021c          ADD      r2,r1,#0x1c
;;;332        haval_data_ops.is_engine_on = haval_engine_on;
000024  6053              STR      r3,[r2,#4]  ; haval_data_ops
000026  4b10              LDR      r3,|L14.104|
;;;333        haval_data_ops.check_fault_code = haval_check_fault_code;
000028  6013              STR      r3,[r2,#0]  ; haval_data_ops
00002a  4b10              LDR      r3,|L14.108|
;;;334        haval_data_ops.init = haval_init;
00002c  6093              STR      r3,[r2,#8]  ; haval_data_ops
00002e  4b10              LDR      r3,|L14.112|
;;;335        haval_data_ops.exit = haval_exit;
000030  60d3              STR      r3,[r2,#0xc]  ; haval_data_ops
000032  4b10              LDR      r3,|L14.116|
;;;336        haval_data_ops.keepalive = haval_keepalive;
000034  6153              STR      r3,[r2,#0x14]  ; haval_data_ops
000036  4b10              LDR      r3,|L14.120|
000038  6113              STR      r3,[r2,#0x10]  ; haval_data_ops
00003a  e9c02101          STRD     r2,r1,[r0,#4]
;;;337    
;;;338        vehicle->ctrlOps = &haval_ctrl_ops;
;;;339        vehicle->dataOps = &haval_data_ops;
;;;340        vehicle->init = TRUE;
00003e  2101              MOVS     r1,#1
000040  7001              STRB     r1,[r0,#0]
;;;341    }
000042  4770              BX       lr
;;;342    
                          ENDP

                  |L14.68|
                          DCD      haval_ctrl_window
                  |L14.72|
                          DCD      ||.bss||
                  |L14.76|
                          DCD      haval_ctrl_door
                  |L14.80|
                          DCD      haval_ctrl_sunroof
                  |L14.84|
                          DCD      haval_ctrl_light
                  |L14.88|
                          DCD      haval_ctrl_trunk
                  |L14.92|
                          DCD      haval_ctrl_findcar
                  |L14.96|
                          DCD      haval_clear_fault_code
                  |L14.100|
                          DCD      haval_data_stream
                  |L14.104|
                          DCD      haval_engine_on
                  |L14.108|
                          DCD      haval_check_fault_code
                  |L14.112|
                          DCD      haval_init
                  |L14.116|
                          DCD      haval_exit
                  |L14.120|
                          DCD      haval_keepalive

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  haval_ctrl_ops
                          %        28
                  haval_data_ops
                          %        24

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __func__
000000  68617661          DCB      0x68,0x61,0x76,0x61
000004  6c5f6374          DCB      0x6c,0x5f,0x63,0x74
000008  726c5f77          DCB      0x72,0x6c,0x5f,0x77
00000c  696e646f          DCB      0x69,0x6e,0x64,0x6f
000010  7700              DCB      0x77,0x00
                  |symbol_number.45|
000012  6861              DCB      0x68,0x61
000014  76616c5f          DCB      0x76,0x61,0x6c,0x5f
000018  6374726c          DCB      0x63,0x74,0x72,0x6c
00001c  5f646f6f          DCB      0x5f,0x64,0x6f,0x6f
000020  7200              DCB      0x72,0x00
                  |symbol_number.46|
000022  6861              DCB      0x68,0x61
000024  76616c5f          DCB      0x76,0x61,0x6c,0x5f
000028  6374726c          DCB      0x63,0x74,0x72,0x6c
00002c  5f6c6967          DCB      0x5f,0x6c,0x69,0x67
000030  687400            DCB      0x68,0x74,0x00
                  |symbol_number.47|
000033  68                DCB      0x68
000034  6176616c          DCB      0x61,0x76,0x61,0x6c
000038  5f637472          DCB      0x5f,0x63,0x74,0x72
00003c  6c5f7375          DCB      0x6c,0x5f,0x73,0x75
000040  6e726f6f          DCB      0x6e,0x72,0x6f,0x6f
000044  6600              DCB      0x66,0x00
                  |symbol_number.48|
000046  6861              DCB      0x68,0x61
000048  76616c5f          DCB      0x76,0x61,0x6c,0x5f
00004c  6374726c          DCB      0x63,0x74,0x72,0x6c
000050  5f747275          DCB      0x5f,0x74,0x72,0x75
000054  6e6b00            DCB      0x6e,0x6b,0x00
                  |symbol_number.49|
000057  68                DCB      0x68
000058  6176616c          DCB      0x61,0x76,0x61,0x6c
00005c  5f637472          DCB      0x5f,0x63,0x74,0x72
000060  6c5f6669          DCB      0x6c,0x5f,0x66,0x69
000064  6e646361          DCB      0x6e,0x64,0x63,0x61
000068  7200              DCB      0x72,0x00
                  |symbol_number.50|
00006a  6861              DCB      0x68,0x61
00006c  76616c5f          DCB      0x76,0x61,0x6c,0x5f
000070  636c6561          DCB      0x63,0x6c,0x65,0x61
000074  725f6661          DCB      0x72,0x5f,0x66,0x61
000078  756c745f          DCB      0x75,0x6c,0x74,0x5f
00007c  636f6465          DCB      0x63,0x6f,0x64,0x65
000080  00                DCB      0x00

                          AREA ||.data||, DATA, ALIGN=2

                  haval_rx_buf
                          %        8
                  havalSupportItems
000008  00010101          DCB      0x00,0x01,0x01,0x01
00000c  02010301          DCB      0x02,0x01,0x03,0x01
000010  04000501          DCB      0x04,0x00,0x05,0x01
000014  06000701          DCB      0x06,0x00,0x07,0x01
000018  08000900          DCB      0x08,0x00,0x09,0x00
00001c  0a000b00          DCB      0x0a,0x00,0x0b,0x00
000020  0c000d00          DCB      0x0c,0x00,0x0d,0x00
000024  0e000f00          DCB      0x0e,0x00,0x0f,0x00
000028  10001100          DCB      0x10,0x00,0x11,0x00
00002c  12001300          DCB      0x12,0x00,0x13,0x00
000030  14011500          DCB      0x14,0x01,0x15,0x00
000034  16001700          DCB      0x16,0x00,0x17,0x00
000038  18001900          DCB      0x18,0x00,0x19,0x00
00003c  1a011b00          DCB      0x1a,0x01,0x1b,0x00
000040  1c001d00          DCB      0x1c,0x00,0x1d,0x00
000044  1e001f00          DCB      0x1e,0x00,0x1f,0x00
000048  20012100          DCB      0x20,0x01,0x21,0x00
00004c  22002300          DCB      0x22,0x00,0x23,0x00
000050  24002500          DCB      0x24,0x00,0x25,0x00
000054  26012701          DCB      0x26,0x01,0x27,0x01
000058  28012901          DCB      0x28,0x01,0x29,0x01
00005c  2a012b00          DCB      0x2a,0x01,0x2b,0x00
000060  2c002d00          DCB      0x2c,0x00,0x2d,0x00
000064  2e012f00          DCB      0x2e,0x01,0x2f,0x00
000068  30003100          DCB      0x30,0x00,0x31,0x00
00006c  32003300          DCB      0x32,0x00,0x33,0x00
000070  34010000          DCB      0x34,0x01,0x00,0x00
                          DCD      0x00000000
000078  0000              DCB      0x00,0x00
                  havalStdDs
00007a  0000              DCB      0x00,0x00
00007c  07e0              DCW      0x07e0
00007e  0803              DCB      0x08,0x03
000080  22010800          DCB      0x22,0x01,0x08,0x00
000084  00000000          DCB      0x00,0x00,0x00,0x00
000088  07e8              DCW      0x07e8
00008a  0402              DCB      0x04,0x02
00008c  0100              DCB      0x01,0x00
00008e  07e0              DCW      0x07e0
000090  08032201          DCB      0x08,0x03,0x22,0x01
000094  04000000          DCB      0x04,0x00,0x00,0x00
000098  0000              DCB      0x00,0x00
00009a  07e8              DCW      0x07e8
00009c  04020200          DCB      0x04,0x02,0x02,0x00
0000a0  07e0              DCW      0x07e0
0000a2  0803              DCB      0x08,0x03
0000a4  22012f00          DCB      0x22,0x01,0x2f,0x00
0000a8  00000000          DCB      0x00,0x00,0x00,0x00
0000ac  07e8              DCW      0x07e8
0000ae  0401              DCB      0x04,0x01
0000b0  0300              DCB      0x03,0x00
0000b2  07e0              DCW      0x07e0
0000b4  08032201          DCB      0x08,0x03,0x22,0x01
0000b8  0d000000          DCB      0x0d,0x00,0x00,0x00
0000bc  0000              DCB      0x00,0x00
0000be  07e8              DCW      0x07e8
0000c0  04010400          DCB      0x04,0x01,0x04,0x00
0000c4  07e0              DCW      0x07e0
0000c6  0800              DCB      0x08,0x00
                          DCD      0x00000000
0000cc  00000000          DCB      0x00,0x00,0x00,0x00
0000d0  0000              DCW      0x0000
0000d2  0000              DCB      0x00,0x00
0000d4  0500              DCB      0x05,0x00
0000d6  07e0              DCW      0x07e0
0000d8  08032201          DCB      0x08,0x03,0x22,0x01
0000dc  0b000000          DCB      0x0b,0x00,0x00,0x00
0000e0  0000              DCB      0x00,0x00
0000e2  07e8              DCW      0x07e8
0000e4  04020600          DCB      0x04,0x02,0x06,0x00
0000e8  07e0              DCW      0x07e0
0000ea  0800              DCB      0x08,0x00
                          DCD      0x00000000
0000f0  00000000          DCB      0x00,0x00,0x00,0x00
0000f4  0000              DCW      0x0000
0000f6  0000              DCB      0x00,0x00
0000f8  0700              DCB      0x07,0x00
0000fa  07e0              DCW      0x07e0
0000fc  08032201          DCB      0x08,0x03,0x22,0x01
000100  1e000000          DCB      0x1e,0x00,0x00,0x00
000104  0000              DCB      0x00,0x00
000106  07e8              DCW      0x07e8
000108  04010800          DCB      0x04,0x01,0x08,0x00
00010c  07e0              DCW      0x07e0
00010e  0800              DCB      0x08,0x00
                          DCD      0x00000000
000114  00000000          DCB      0x00,0x00,0x00,0x00
000118  0000              DCW      0x0000
00011a  0000              DCB      0x00,0x00
00011c  0900              DCB      0x09,0x00
00011e  07e0              DCW      0x07e0
000120  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000128  0000              DCB      0x00,0x00
00012a  0000              DCW      0x0000
00012c  00000a00          DCB      0x00,0x00,0x0a,0x00
000130  07e0              DCW      0x07e0
000132  0800              DCB      0x08,0x00
                          DCD      0x00000000
000138  00000000          DCB      0x00,0x00,0x00,0x00
00013c  0000              DCW      0x0000
00013e  0000              DCB      0x00,0x00
000140  0b00              DCB      0x0b,0x00
000142  07e0              DCW      0x07e0
000144  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
00014c  0000              DCB      0x00,0x00
00014e  0000              DCW      0x0000
000150  00000c00          DCB      0x00,0x00,0x0c,0x00
000154  07e0              DCW      0x07e0
000156  0800              DCB      0x08,0x00
                          DCD      0x00000000
00015c  00000000          DCB      0x00,0x00,0x00,0x00
000160  0000              DCW      0x0000
000162  0000              DCB      0x00,0x00
000164  0d00              DCB      0x0d,0x00
000166  07e0              DCW      0x07e0
000168  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000170  0000              DCB      0x00,0x00
000172  0000              DCW      0x0000
000174  00000e00          DCB      0x00,0x00,0x0e,0x00
000178  07df              DCW      0x07df
00017a  0800              DCB      0x08,0x00
                          DCD      0x00000000
000180  00000000          DCB      0x00,0x00,0x00,0x00
000184  0000              DCW      0x0000
000186  0000              DCB      0x00,0x00
000188  0f00              DCB      0x0f,0x00
00018a  07df              DCW      0x07df
00018c  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000194  0000              DCB      0x00,0x00
000196  0000              DCW      0x0000
000198  00001000          DCB      0x00,0x00,0x10,0x00
00019c  07df              DCW      0x07df
00019e  0800              DCB      0x08,0x00
                          DCD      0x00000000
0001a4  00000000          DCB      0x00,0x00,0x00,0x00
0001a8  0000              DCW      0x0000
0001aa  0000              DCB      0x00,0x00
0001ac  1100              DCB      0x11,0x00
0001ae  07df              DCW      0x07df
0001b0  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0001b8  0000              DCB      0x00,0x00
0001ba  0000              DCW      0x0000
0001bc  00001200          DCB      0x00,0x00,0x12,0x00
0001c0  07e0              DCW      0x07e0
0001c2  0800              DCB      0x08,0x00
                          DCD      0x00000000
0001c8  00000000          DCB      0x00,0x00,0x00,0x00
0001cc  0000              DCW      0x0000
0001ce  0000              DCB      0x00,0x00
0001d0  1300              DCB      0x13,0x00
0001d2  07e0              DCW      0x07e0
0001d4  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0001dc  0000              DCB      0x00,0x00
0001de  0000              DCW      0x0000
0001e0  00001400          DCB      0x00,0x00,0x14,0x00
0001e4  07e0              DCW      0x07e0
0001e6  0803              DCB      0x08,0x03
0001e8  22014500          DCB      0x22,0x01,0x45,0x00
0001ec  00000000          DCB      0x00,0x00,0x00,0x00
0001f0  07e8              DCW      0x07e8
0001f2  0402              DCB      0x04,0x02
0001f4  1500              DCB      0x15,0x00
0001f6  07df              DCW      0x07df
0001f8  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000200  0000              DCB      0x00,0x00
000202  0000              DCW      0x0000
000204  00001600          DCB      0x00,0x00,0x16,0x00
000208  07df              DCW      0x07df
00020a  0800              DCB      0x08,0x00
                          DCD      0x00000000
000210  00000000          DCB      0x00,0x00,0x00,0x00
000214  0000              DCW      0x0000
000216  0000              DCB      0x00,0x00
000218  1700              DCB      0x17,0x00
00021a  07df              DCW      0x07df
00021c  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000224  0000              DCB      0x00,0x00
000226  0000              DCW      0x0000
000228  00001800          DCB      0x00,0x00,0x18,0x00
00022c  07e0              DCW      0x07e0
00022e  0800              DCB      0x08,0x00
                          DCD      0x00000000
000234  00000000          DCB      0x00,0x00,0x00,0x00
000238  0000              DCW      0x0000
00023a  0000              DCB      0x00,0x00
00023c  1900              DCB      0x19,0x00
00023e  07e0              DCW      0x07e0
000240  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000248  0000              DCB      0x00,0x00
00024a  0000              DCW      0x0000
00024c  00001a00          DCB      0x00,0x00,0x1a,0x00
000250  07e0              DCW      0x07e0
000252  0803              DCB      0x08,0x03
000254  22012000          DCB      0x22,0x01,0x20,0x00
000258  00000000          DCB      0x00,0x00,0x00,0x00
00025c  07e8              DCW      0x07e8
00025e  0401              DCB      0x04,0x01
000260  1b00              DCB      0x1b,0x00
000262  07df              DCW      0x07df
000264  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
00026c  0000              DCB      0x00,0x00
00026e  0000              DCW      0x0000
000270  00001c00          DCB      0x00,0x00,0x1c,0x00
000274  07df              DCW      0x07df
000276  0800              DCB      0x08,0x00
                          DCD      0x00000000
00027c  00000000          DCB      0x00,0x00,0x00,0x00
000280  0000              DCW      0x0000
000282  0000              DCB      0x00,0x00
000284  1d00              DCB      0x1d,0x00
000286  07e0              DCW      0x07e0
000288  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000290  0000              DCB      0x00,0x00
000292  0000              DCW      0x0000
000294  00001e00          DCB      0x00,0x00,0x1e,0x00
000298  07e0              DCW      0x07e0
00029a  0800              DCB      0x08,0x00
                          DCD      0x00000000
0002a0  00000000          DCB      0x00,0x00,0x00,0x00
0002a4  0000              DCW      0x0000
0002a6  0000              DCB      0x00,0x00
0002a8  1f00              DCB      0x1f,0x00
0002aa  07c0              DCW      0x07c0
0002ac  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0002b4  0000              DCB      0x00,0x00
0002b6  0000              DCW      0x0000
0002b8  00002000          DCB      0x00,0x00,0x20,0x00
0002bc  07e0              DCW      0x07e0
0002be  0803              DCB      0x08,0x03
0002c0  22011100          DCB      0x22,0x01,0x11,0x00
0002c4  00000000          DCB      0x00,0x00,0x00,0x00
0002c8  07e8              DCW      0x07e8
0002ca  0402              DCB      0x04,0x02
0002cc  2100              DCB      0x21,0x00
0002ce  07e1              DCW      0x07e1
0002d0  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0002d8  0000              DCB      0x00,0x00
0002da  0000              DCW      0x0000
0002dc  00002200          DCB      0x00,0x00,0x22,0x00
0002e0  07b0              DCW      0x07b0
0002e2  0800              DCB      0x08,0x00
                          DCD      0x00000000
0002e8  00000000          DCB      0x00,0x00,0x00,0x00
0002ec  0000              DCW      0x0000
0002ee  0000              DCB      0x00,0x00
0002f0  2300              DCB      0x23,0x00
0002f2  0710              DCW      0x0710
0002f4  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0002fc  0000              DCB      0x00,0x00
0002fe  0000              DCW      0x0000
000300  00002400          DCB      0x00,0x00,0x24,0x00
000304  0710              DCW      0x0710
000306  0800              DCB      0x08,0x00
                          DCD      0x00000000
00030c  00000000          DCB      0x00,0x00,0x00,0x00
000310  0000              DCW      0x0000
000312  0000              DCB      0x00,0x00
000314  2500              DCB      0x25,0x00
000316  07b0              DCW      0x07b0
000318  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000320  0000              DCB      0x00,0x00
000322  0000              DCW      0x0000
000324  00002600          DCB      0x00,0x00,0x26,0x00
000328  07e0              DCW      0x07e0
00032a  0803              DCB      0x08,0x03
00032c  22010a00          DCB      0x22,0x01,0x0a,0x00
000330  00000000          DCB      0x00,0x00,0x00,0x00
000334  07e8              DCW      0x07e8
000336  0402              DCB      0x04,0x02
000338  2700              DCB      0x27,0x00
00033a  0765              DCW      0x0765
00033c  08032210          DCB      0x08,0x03,0x22,0x10
000340  07000000          DCB      0x07,0x00,0x00,0x00
000344  0000              DCB      0x00,0x00
000346  076d              DCW      0x076d
000348  04012800          DCB      0x04,0x01,0x28,0x00
00034c  0765              DCW      0x0765
00034e  0803              DCB      0x08,0x03
000350  22100700          DCB      0x22,0x10,0x07,0x00
000354  00000000          DCB      0x00,0x00,0x00,0x00
000358  076d              DCW      0x076d
00035a  0401              DCB      0x04,0x01
00035c  2900              DCB      0x29,0x00
00035e  0765              DCW      0x0765
000360  08032210          DCB      0x08,0x03,0x22,0x10
000364  07000000          DCB      0x07,0x00,0x00,0x00
000368  0000              DCB      0x00,0x00
00036a  076d              DCW      0x076d
00036c  04012a00          DCB      0x04,0x01,0x2a,0x00
000370  0765              DCW      0x0765
000372  0803              DCB      0x08,0x03
000374  22100700          DCB      0x22,0x10,0x07,0x00
000378  00000000          DCB      0x00,0x00,0x00,0x00
00037c  076d              DCW      0x076d
00037e  0401              DCB      0x04,0x01
000380  2b00              DCB      0x2b,0x00
000382  070e              DCW      0x070e
000384  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
00038c  0000              DCB      0x00,0x00
00038e  0000              DCW      0x0000
000390  00002c00          DCB      0x00,0x00,0x2c,0x00
000394  074a              DCW      0x074a
000396  0800              DCB      0x08,0x00
                          DCD      0x00000000
00039c  00000000          DCB      0x00,0x00,0x00,0x00
0003a0  0000              DCW      0x0000
0003a2  0000              DCB      0x00,0x00
0003a4  2d00              DCB      0x2d,0x00
0003a6  0750              DCW      0x0750
0003a8  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0003b0  0000              DCB      0x00,0x00
0003b2  0000              DCW      0x0000
0003b4  00002e00          DCB      0x00,0x00,0x2e,0x00
0003b8  0765              DCW      0x0765
0003ba  0803              DCB      0x08,0x03
0003bc  22100b00          DCB      0x22,0x10,0x0b,0x00
0003c0  00000000          DCB      0x00,0x00,0x00,0x00
0003c4  076d              DCW      0x076d
0003c6  0401              DCB      0x04,0x01
0003c8  2f00              DCB      0x2f,0x00
0003ca  070e              DCW      0x070e
0003cc  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0003d4  0000              DCB      0x00,0x00
0003d6  0000              DCW      0x0000
0003d8  00003000          DCB      0x00,0x00,0x30,0x00
0003dc  074a              DCW      0x074a
0003de  0800              DCB      0x08,0x00
                          DCD      0x00000000
0003e4  00000000          DCB      0x00,0x00,0x00,0x00
0003e8  0000              DCW      0x0000
0003ea  0000              DCB      0x00,0x00
0003ec  3100              DCB      0x31,0x00
0003ee  074a              DCW      0x074a
0003f0  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0003f8  0000              DCB      0x00,0x00
0003fa  0000              DCW      0x0000
0003fc  00003200          DCB      0x00,0x00,0x32,0x00
000400  07c0              DCW      0x07c0
000402  0800              DCB      0x08,0x00
                          DCD      0x00000000
000408  00000000          DCB      0x00,0x00,0x00,0x00
00040c  0000              DCW      0x0000
00040e  0000              DCB      0x00,0x00
000410  3300              DCB      0x33,0x00
000412  07c0              DCW      0x07c0
000414  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
00041c  0000              DCB      0x00,0x00
00041e  0000              DCW      0x0000
000420  00003400          DCB      0x00,0x00,0x34,0x00
000424  0721              DCW      0x0721
000426  0803              DCB      0x08,0x03
000428  22d00500          DCB      0x22,0xd0,0x05,0x00
00042c  00000000          DCB      0x00,0x00,0x00,0x00
000430  0729              DCW      0x0729
000432  0402              DCB      0x04,0x02
                          %        72
                  havalEngineCmd
                          DCD      0x000007df
                          DCD      0x18db33f1
000484  00000802          DCB      0x00,0x00,0x08,0x02
000488  01000000          DCB      0x01,0x00,0x00,0x00
00048c  00000000          DCB      0x00,0x00,0x00,0x00
