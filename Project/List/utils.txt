; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\utils.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\utils.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\utils.crf ..\BSP\src\utils.c]
                          THUMB

                          AREA ||i.control_rsp||, CODE, READONLY, ALIGN=2

                  control_rsp PROC
;;;34     
;;;35     void control_rsp(uint32_t cmd_id, uint8_t cmd_type, char *key)
000000  b570              PUSH     {r4-r6,lr}
;;;36     {
000002  4615              MOV      r5,r2
000004  4606              MOV      r6,r0
;;;37         cJSON *root = cJSON_CreateObject();
000006  f7fffffe          BL       cJSON_CreateObject
00000a  4604              MOV      r4,r0
;;;38         char *out;
;;;39         uint16_t length;
;;;40     
;;;41         get_deviceid();
00000c  f7fffffe          BL       get_deviceid
;;;42         cJSON_AddStringToObject(root, KEY_DEVICE_ID, (const char *)deviceid);
000010  481e              LDR      r0,|L1.140|
000012  f7fffffe          BL       cJSON_CreateString
000016  4602              MOV      r2,r0
000018  a11d              ADR      r1,|L1.144|
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       cJSON_AddItemToObject
;;;43         cJSON_AddNumberToObject(root, KEY_MSG_TYPE, MSG_TYPE_CTRL_RSP);
000020  2000              MOVS     r0,#0
000022  491e              LDR      r1,|L1.156|
000024  f7fffffe          BL       cJSON_CreateNumber
000028  4602              MOV      r2,r0
00002a  a11d              ADR      r1,|L1.160|
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       cJSON_AddItemToObject
;;;44     #ifdef SERVER_IS_K
;;;45         cJSON_AddNumberToObject(root, KEY_CMD_ID, cmd_id);
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       __aeabi_ui2d
000038  f7fffffe          BL       cJSON_CreateNumber
00003c  4602              MOV      r2,r0
00003e  a11b              ADR      r1,|L1.172|
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       cJSON_AddItemToObject
;;;46     #endif
;;;47         cJSON_AddNumberToObject(root, KEY_STATUS, 0);
000046  2000              MOVS     r0,#0
000048  4601              MOV      r1,r0
00004a  f7fffffe          BL       cJSON_CreateNumber
00004e  4602              MOV      r2,r0
000050  a118              ADR      r1,|L1.180|
000052  4620              MOV      r0,r4
000054  f7fffffe          BL       cJSON_AddItemToObject
;;;48         cJSON_AddStringToObject(root, KEY_CMD_TYPE, key);
000058  4628              MOV      r0,r5
00005a  f7fffffe          BL       cJSON_CreateString
00005e  4602              MOV      r2,r0
000060  a116              ADR      r1,|L1.188|
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       cJSON_AddItemToObject
;;;49     
;;;50         out = cJSON_Print(root);
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       cJSON_Print
00006e  4605              MOV      r5,r0
;;;51         length = strlen(out);
000070  f7fffffe          BL       strlen
000074  b281              UXTH     r1,r0
;;;52         l206_send((uint8_t *)out, length);
000076  4628              MOV      r0,r5
000078  f7fffffe          BL       l206_send
;;;53     
;;;54         cJSON_Delete(root);
00007c  4620              MOV      r0,r4
00007e  f7fffffe          BL       cJSON_Delete
;;;55         free(out);
000082  4628              MOV      r0,r5
000084  e8bd4070          POP      {r4-r6,lr}
000088  f7ffbffe          B.W      free
;;;56     }
;;;57     
                          ENDP

                  |L1.140|
                          DCD      ||.bss||
                  |L1.144|
000090  64657669          DCB      "deviceid",0
000094  63656964
000098  00      
000099  00                DCB      0
00009a  00                DCB      0
00009b  00                DCB      0
                  |L1.156|
                          DCD      0x40080000
                  |L1.160|
0000a0  6d73675f          DCB      "msg_type",0
0000a4  74797065
0000a8  00      
0000a9  00                DCB      0
0000aa  00                DCB      0
0000ab  00                DCB      0
                  |L1.172|
0000ac  636d645f          DCB      "cmd_id",0
0000b0  696400  
0000b3  00                DCB      0
                  |L1.180|
0000b4  73746174          DCB      "status",0
0000b8  757300  
0000bb  00                DCB      0
                  |L1.188|
0000bc  636d645f          DCB      "cmd_type",0
0000c0  74797065
0000c4  00      
0000c5  00                DCB      0
0000c6  00                DCB      0
0000c7  00                DCB      0

                          AREA ||i.get_deviceid||, CODE, READONLY, ALIGN=2

                  get_deviceid PROC
;;;112    
;;;113    void get_deviceid(void)
000000  2211              MOVS     r2,#0x11
;;;114    {
;;;115        flash_page_read(deviceid, DEVICE_ID_ADDRESS, 17);
000002  2180              MOVS     r1,#0x80
000004  4801              LDR      r0,|L2.12|
000006  f7ffbffe          B.W      flash_page_read
;;;116    }
;;;117    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      ||.bss||

                          AREA ||i.get_immo_data||, CODE, READONLY, ALIGN=2

                  get_immo_data PROC
;;;126    
;;;127    uint8_t get_immo_data(void)
000000  b510              PUSH     {r4,lr}
;;;128    {
;;;129        //flash_page_read(g_immo_data, IMMO_DATA_ADDRESS, 1);
;;;130        bsp_ReadCpuFlash(IMMO_DATA_ADDRESS, g_immo_data, 2);
000002  2202              MOVS     r2,#2
000004  4903              LDR      r1,|L3.20|
000006  4804              LDR      r0,|L3.24|
000008  f7fffffe          BL       bsp_ReadCpuFlash
;;;131    
;;;132        return g_immo_data[0];
00000c  4801              LDR      r0,|L3.20|
00000e  7800              LDRB     r0,[r0,#0]  ; g_immo_data
;;;133    }
000010  bd10              POP      {r4,pc}
;;;134    
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      ||area_number.18||
                  |L3.24|
                          DCD      0x0807ff80

                          AREA ||i.heartbeat||, CODE, READONLY, ALIGN=2

                  heartbeat PROC
;;;15     
;;;16     void heartbeat(uint8_t count)
000000  b570              PUSH     {r4-r6,lr}
;;;17     {
000002  4605              MOV      r5,r0
;;;18         cJSON *root = cJSON_CreateObject();
000004  f7fffffe          BL       cJSON_CreateObject
000008  4604              MOV      r4,r0
;;;19         char *out;
;;;20         uint16_t length;
;;;21     
;;;22         get_deviceid();
00000a  f7fffffe          BL       get_deviceid
;;;23         cJSON_AddStringToObject(root, KEY_DEVICE_ID, (const char *)deviceid);
00000e  4816              LDR      r0,|L4.104|
000010  f7fffffe          BL       cJSON_CreateString
000014  4602              MOV      r2,r0
000016  a115              ADR      r1,|L4.108|
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       cJSON_AddItemToObject
;;;24         cJSON_AddNumberToObject(root, KEY_MSG_TYPE, MSG_TYPE_HEARTBEAT);
00001e  2000              MOVS     r0,#0
000020  4601              MOV      r1,r0
000022  f7fffffe          BL       cJSON_CreateNumber
000026  4602              MOV      r2,r0
000028  a113              ADR      r1,|L4.120|
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       cJSON_AddItemToObject
;;;25         cJSON_AddNumberToObject(root, KEY_HEARTBEAT, count);
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       __aeabi_ui2d
000036  f7fffffe          BL       cJSON_CreateNumber
00003a  4602              MOV      r2,r0
00003c  a111              ADR      r1,|L4.132|
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       cJSON_AddItemToObject
;;;26     
;;;27         out = cJSON_Print(root);
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       cJSON_Print
00004a  4605              MOV      r5,r0
;;;28         length = strlen(out);
00004c  f7fffffe          BL       strlen
000050  b281              UXTH     r1,r0
;;;29         l206_send((uint8_t *)out, length);
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       l206_send
;;;30     
;;;31         cJSON_Delete(root);
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       cJSON_Delete
;;;32         free(out);
00005e  4628              MOV      r0,r5
000060  e8bd4070          POP      {r4-r6,lr}
000064  f7ffbffe          B.W      free
;;;33     }
;;;34     
                          ENDP

                  |L4.104|
                          DCD      ||.bss||
                  |L4.108|
00006c  64657669          DCB      "deviceid",0
000070  63656964
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L4.120|
000078  6d73675f          DCB      "msg_type",0
00007c  74797065
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L4.132|
000084  68656172          DCB      "heartbeat_count",0
000088  74626561
00008c  745f636f
000090  756e7400

                          AREA ||i.is_connected||, CODE, READONLY, ALIGN=1

                  is_connected PROC
;;;10     
;;;11     bool is_connected(void)
000000  f7ffbffe          B.W      l206_is_connected
;;;12     {
;;;13         return l206_is_connected();
;;;14     }
;;;15     
                          ENDP


                          AREA ||i.json_get_heartbeat||, CODE, READONLY, ALIGN=2

                  json_get_heartbeat PROC
;;;144    
;;;145    uint8_t json_get_heartbeat(cJSON *json)
000000  b510              PUSH     {r4,lr}
;;;146    {
;;;147        cJSON *item = cJSON_GetObjectItem(json, KEY_HEARTBEAT);
000002  a103              ADR      r1,|L6.16|
000004  f7fffffe          BL       cJSON_GetObjectItem
;;;148        if(item) {
000008  2800              CMP      r0,#0
00000a  d000              BEQ      |L6.14|
;;;149            return item->valueint;
00000c  7d00              LDRB     r0,[r0,#0x14]
                  |L6.14|
;;;150        } else {
;;;151            return 0;
;;;152        }
;;;153    }
00000e  bd10              POP      {r4,pc}
;;;154    
                          ENDP

                  |L6.16|
000010  68656172          DCB      "heartbeat_count",0
000014  74626561
000018  745f636f
00001c  756e7400

                          AREA ||i.json_get_msg_type||, CODE, READONLY, ALIGN=2

                  json_get_msg_type PROC
;;;134    
;;;135    uint8_t json_get_msg_type(cJSON *json)
000000  b510              PUSH     {r4,lr}
;;;136    {
;;;137        cJSON *item = cJSON_GetObjectItem(json, KEY_MSG_TYPE);
000002  a103              ADR      r1,|L7.16|
000004  f7fffffe          BL       cJSON_GetObjectItem
;;;138        if(item) {
000008  2800              CMP      r0,#0
00000a  d000              BEQ      |L7.14|
;;;139            return item->valueint;
00000c  7d00              LDRB     r0,[r0,#0x14]
                  |L7.14|
;;;140        } else {
;;;141            return 0;
;;;142        }
;;;143    }
00000e  bd10              POP      {r4,pc}
;;;144    
                          ENDP

                  |L7.16|
000010  6d73675f          DCB      "msg_type",0
000014  74797065
000018  00      
000019  00                DCB      0
00001a  00                DCB      0
00001b  00                DCB      0

                          AREA ||i.login||, CODE, READONLY, ALIGN=2

                  login PROC
;;;154    
;;;155    void login(void)
000000  b570              PUSH     {r4-r6,lr}
;;;156    {
;;;157        cJSON *root = cJSON_CreateObject();
000002  f7fffffe          BL       cJSON_CreateObject
000006  4604              MOV      r4,r0
;;;158        char *out;
;;;159        uint16_t length;
;;;160    
;;;161        get_deviceid();
000008  f7fffffe          BL       get_deviceid
;;;162        cJSON_AddStringToObject(root, KEY_DEVICE_ID, (const char *)deviceid);
00000c  4811              LDR      r0,|L8.84|
00000e  f7fffffe          BL       cJSON_CreateString
000012  4602              MOV      r2,r0
000014  a110              ADR      r1,|L8.88|
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       cJSON_AddItemToObject
;;;163        cJSON_AddNumberToObject(root, KEY_MSG_TYPE, MSG_TYPE_LOGIN);
00001c  2000              MOVS     r0,#0
00001e  4911              LDR      r1,|L8.100|
000020  f7fffffe          BL       cJSON_CreateNumber
000024  4602              MOV      r2,r0
000026  a110              ADR      r1,|L8.104|
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       cJSON_AddItemToObject
;;;164    
;;;165        out = cJSON_Print(root);
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       cJSON_Print
000034  4605              MOV      r5,r0
;;;166        length = strlen(out);
000036  f7fffffe          BL       strlen
00003a  b281              UXTH     r1,r0
;;;167        l206_send((uint8_t *)out, length);
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       l206_send
;;;168        cJSON_Delete(root);
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       cJSON_Delete
;;;169        free(out);
000048  4628              MOV      r0,r5
00004a  e8bd4070          POP      {r4-r6,lr}
00004e  f7ffbffe          B.W      free
;;;170    }
;;;171    
                          ENDP

000052  0000              DCW      0x0000
                  |L8.84|
                          DCD      ||.bss||
                  |L8.88|
000058  64657669          DCB      "deviceid",0
00005c  63656964
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0
                  |L8.100|
                          DCD      0x40200000
                  |L8.104|
000068  6d73675f          DCB      "msg_type",0
00006c  74797065
000070  00      
000071  00                DCB      0
000072  00                DCB      0
000073  00                DCB      0

                          AREA ||i.set_immo_data||, CODE, READONLY, ALIGN=2

                  set_immo_data PROC
;;;118    uint8_t g_immo_data[2];
;;;119    void set_immo_data(uint8_t data)
000000  4902              LDR      r1,|L9.12|
;;;120    {
;;;121        uint8_t ret;
;;;122        g_immo_data[0] = data;
;;;123        //flash_page_write(g_immo_data, IMMO_DATA_ADDRESS, 1);
;;;124        ret = bsp_WriteCpuFlash(IMMO_DATA_ADDRESS, g_immo_data, 2);
000002  2202              MOVS     r2,#2
000004  7008              STRB     r0,[r1,#0]            ;122
000006  4802              LDR      r0,|L9.16|
000008  f7ffbffe          B.W      bsp_WriteCpuFlash
;;;125    }
;;;126    
                          ENDP

                  |L9.12|
                          DCD      ||area_number.18||
                  |L9.16|
                          DCD      0x0807ff80

                          AREA ||i.upload_item||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_return_value
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  upload_item PROC
;;;57     
;;;58     void upload_item(UpdateItem *item, char *key)
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;59     {
000004  4688              MOV      r8,r1
000006  4606              MOV      r6,r0
;;;60         cJSON *root = cJSON_CreateObject();
000008  f7fffffe          BL       cJSON_CreateObject
00000c  4681              MOV      r9,r0
;;;61         char *out;
;;;62         uint16_t length;
;;;63         char val_buf[16];
;;;64         uint8_t i;
;;;65         uint8_t index = 0, n = 0;
00000e  2500              MOVS     r5,#0
;;;66     
;;;67         get_deviceid();
000010  f7fffffe          BL       get_deviceid
;;;68         cJSON_AddStringToObject(root, KEY_DEVICE_ID, (const char *)deviceid);
000014  481f              LDR      r0,|L10.148|
000016  f7fffffe          BL       cJSON_CreateString
00001a  4602              MOV      r2,r0
00001c  a11e              ADR      r1,|L10.152|
00001e  4648              MOV      r0,r9
000020  f7fffffe          BL       cJSON_AddItemToObject
;;;69         cJSON_AddNumberToObject(root, KEY_MSG_TYPE, MSG_TYPE_UPLOAD);
000024  2000              MOVS     r0,#0
000026  491f              LDR      r1,|L10.164|
000028  f7fffffe          BL       cJSON_CreateNumber
00002c  4602              MOV      r2,r0
00002e  a11e              ADR      r1,|L10.168|
000030  4648              MOV      r0,r9
000032  f7fffffe          BL       cJSON_AddItemToObject
;;;70         //make value
;;;71         memset(val_buf, 0x00, 16);
000036  2000              MOVS     r0,#0
000038  9000              STR      r0,[sp,#0]
00003a  9001              STR      r0,[sp,#4]
00003c  9002              STR      r0,[sp,#8]
;;;72         for(i = 0; i < item->len; i++) {
00003e  4604              MOV      r4,r0
000040  466f              MOV      r7,sp                 ;63
000042  9003              STR      r0,[sp,#0xc]
000044  e009              B        |L10.90|
                  |L10.70|
;;;73             n = sprintf(val_buf + index, "%02x", item->data[i]);
000046  1930              ADDS     r0,r6,r4
000048  a11a              ADR      r1,|L10.180|
00004a  7842              LDRB     r2,[r0,#1]
00004c  1978              ADDS     r0,r7,r5
00004e  f7fffffe          BL       __2sprintf
;;;74             index += n;
000052  4428              ADD      r0,r0,r5
000054  1c64              ADDS     r4,r4,#1              ;72
000056  b2c5              UXTB     r5,r0
000058  b2e4              UXTB     r4,r4                 ;72
                  |L10.90|
00005a  7a70              LDRB     r0,[r6,#9]            ;72
00005c  42a0              CMP      r0,r4                 ;72
00005e  d8f2              BHI      |L10.70|
;;;75         }
;;;76         cJSON_AddStringToObject(root, key, val_buf);
000060  4668              MOV      r0,sp
000062  f7fffffe          BL       cJSON_CreateString
000066  4602              MOV      r2,r0
000068  4641              MOV      r1,r8
00006a  4648              MOV      r0,r9
00006c  f7fffffe          BL       cJSON_AddItemToObject
;;;77     
;;;78         //printf("%s: %s\r\n", __func__, getPidKey(item->pid));
;;;79         out = cJSON_Print(root);
000070  4648              MOV      r0,r9
000072  f7fffffe          BL       cJSON_Print
000076  4604              MOV      r4,r0
;;;80         length = strlen(out);
000078  f7fffffe          BL       strlen
00007c  b281              UXTH     r1,r0
;;;81         l206_send((uint8_t *)out, length);
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       l206_send
;;;82     
;;;83         cJSON_Delete(root);
000084  4648              MOV      r0,r9
000086  f7fffffe          BL       cJSON_Delete
;;;84         free(out);
00008a  4620              MOV      r0,r4
00008c  f7fffffe          BL       free
;;;85     }
000090  e8bd87ff          POP      {r0-r10,pc}
;;;86     
                          ENDP

                  |L10.148|
                          DCD      ||.bss||
                  |L10.152|
000098  64657669          DCB      "deviceid",0
00009c  63656964
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L10.164|
                          DCD      0x40100000
                  |L10.168|
0000a8  6d73675f          DCB      "msg_type",0
0000ac  74797065
0000b0  00      
0000b1  00                DCB      0
0000b2  00                DCB      0
0000b3  00                DCB      0
                  |L10.180|
0000b4  25303278          DCB      "%02x",0
0000b8  00      
0000b9  00                DCB      0
0000ba  00                DCB      0
0000bb  00                DCB      0

                          AREA ||i.upload_location||, CODE, READONLY, ALIGN=2

                  upload_location PROC
;;;86     
;;;87     void upload_location(void)
000000  b57c              PUSH     {r2-r6,lr}
;;;88     {
;;;89         cJSON *root = cJSON_CreateObject();
000002  f7fffffe          BL       cJSON_CreateObject
000006  4604              MOV      r4,r0
;;;90         char *out;
;;;91         uint16_t length;
;;;92         uint32_t lng, lat;
;;;93     
;;;94         get_deviceid();
000008  f7fffffe          BL       get_deviceid
;;;95     
;;;96         l206_get_location(&lng, &lat);
00000c  a901              ADD      r1,sp,#4
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       l206_get_location
;;;97         if(lng == 0 || lat == 0) {
000014  9800              LDR      r0,[sp,#0]
000016  2800              CMP      r0,#0
000018  d037              BEQ      |L11.138|
00001a  9801              LDR      r0,[sp,#4]
00001c  2800              CMP      r0,#0
00001e  d034              BEQ      |L11.138|
;;;98             return;
;;;99         }
;;;100        cJSON_AddStringToObject(root, KEY_DEVICE_ID, (const char *)deviceid);
000020  481a              LDR      r0,|L11.140|
000022  f7fffffe          BL       cJSON_CreateString
000026  4602              MOV      r2,r0
000028  a119              ADR      r1,|L11.144|
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       cJSON_AddItemToObject
;;;101        cJSON_AddNumberToObject(root, KEY_MSG_TYPE, MSG_TYPE_LOCATION);
000030  2000              MOVS     r0,#0
000032  491a              LDR      r1,|L11.156|
000034  f7fffffe          BL       cJSON_CreateNumber
000038  4602              MOV      r2,r0
00003a  a119              ADR      r1,|L11.160|
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       cJSON_AddItemToObject
;;;102        cJSON_AddNumberToObject(root, KEY_LNG, lng);
000042  9800              LDR      r0,[sp,#0]
000044  f7fffffe          BL       __aeabi_ui2d
000048  f7fffffe          BL       cJSON_CreateNumber
00004c  4602              MOV      r2,r0
00004e  a117              ADR      r1,|L11.172|
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       cJSON_AddItemToObject
;;;103        cJSON_AddNumberToObject(root, KEY_LAT, lat);
000056  9801              LDR      r0,[sp,#4]
000058  f7fffffe          BL       __aeabi_ui2d
00005c  f7fffffe          BL       cJSON_CreateNumber
000060  4602              MOV      r2,r0
000062  a113              ADR      r1,|L11.176|
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       cJSON_AddItemToObject
;;;104    
;;;105        out = cJSON_Print(root);
00006a  4620              MOV      r0,r4
00006c  f7fffffe          BL       cJSON_Print
000070  4605              MOV      r5,r0
;;;106        length = strlen(out);
000072  f7fffffe          BL       strlen
000076  b281              UXTH     r1,r0
;;;107        l206_send((uint8_t *)out, length);
000078  4628              MOV      r0,r5
00007a  f7fffffe          BL       l206_send
;;;108    
;;;109        cJSON_Delete(root);
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       cJSON_Delete
;;;110        free(out);
000084  4628              MOV      r0,r5
000086  f7fffffe          BL       free
                  |L11.138|
;;;111    }
00008a  bd7c              POP      {r2-r6,pc}
;;;112    
                          ENDP

                  |L11.140|
                          DCD      ||.bss||
                  |L11.144|
000090  64657669          DCB      "deviceid",0
000094  63656964
000098  00      
000099  00                DCB      0
00009a  00                DCB      0
00009b  00                DCB      0
                  |L11.156|
                          DCD      0x401c0000
                  |L11.160|
0000a0  6d73675f          DCB      "msg_type",0
0000a4  74797065
0000a8  00      
0000a9  00                DCB      0
0000aa  00                DCB      0
0000ab  00                DCB      0
                  |L11.172|
0000ac  6c6e6700          DCB      "lng",0
                  |L11.176|
0000b0  6c617400          DCB      "lat",0

                          AREA ||i.xdelay||, CODE, READONLY, ALIGN=1

                  xdelay PROC
;;;171    
;;;172    void xdelay(uint8_t s)
000000  b50e              PUSH     {r1-r3,lr}
;;;173    {
;;;174        OS_ERR err;
;;;175        OSTimeDlyHMSM(0, 0, s, 0, OS_OPT_TIME_HMSM_STRICT, &err);
000002  2100              MOVS     r1,#0
000004  aa02              ADD      r2,sp,#8
000006  e9cd1200          STRD     r1,r2,[sp,#0]
00000a  4602              MOV      r2,r0
00000c  460b              MOV      r3,r1
00000e  4608              MOV      r0,r1
000010  f7fffffe          BL       OSTimeDlyHMSM
;;;176    }
000014  bd0e              POP      {r1-r3,pc}
;;;177    
                          ENDP


                          AREA ||i.xdelay_ms||, CODE, READONLY, ALIGN=1

                  xdelay_ms PROC
;;;177    
;;;178    void xdelay_ms(uint16_t s)
000000  b50e              PUSH     {r1-r3,lr}
;;;179    {
;;;180        OS_ERR err;
;;;181        OSTimeDlyHMSM(0, 0, 0, s, OS_OPT_TIME_HMSM_STRICT, &err);
000002  2100              MOVS     r1,#0
000004  aa02              ADD      r2,sp,#8
000006  e9cd1200          STRD     r1,r2,[sp,#0]
00000a  4603              MOV      r3,r0
00000c  460a              MOV      r2,r1
00000e  4608              MOV      r0,r1
000010  f7fffffe          BL       OSTimeDlyHMSM
;;;182    }
000014  bd0e              POP      {r1-r3,pc}
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  deviceid
                          %        17

                          AREA ||.data||, DATA, ALIGN=0

                  DEBUG_MODE
000000  03                DCB      0x03

                          AREA ||area_number.18||, DATA, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.data||
                  g_immo_data
000000  0000              DCB      0x00,0x00
