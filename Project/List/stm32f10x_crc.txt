; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\stm32f10x_crc.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\stm32f10x_crc.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\stm32f10x_crc.crf ..\STM32F10x_FWLib\src\stm32f10x_crc.c]
                          THUMB

                          AREA ||i.CRC_CalcBlockCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcBlockCRC PROC
;;;106      */
;;;107    uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
000000  b510              PUSH     {r4,lr}
;;;108    {
;;;109      uint32_t index = 0;
000002  2200              MOVS     r2,#0
;;;110      
;;;111      for(index = 0; index < BufferLength; index++)
;;;112      {
;;;113        CRC->DR = pBuffer[index];
000004  4b04              LDR      r3,|L1.24|
000006  e003              B        |L1.16|
                  |L1.8|
000008  f8504022          LDR      r4,[r0,r2,LSL #2]
00000c  601c              STR      r4,[r3,#0]
00000e  1c52              ADDS     r2,r2,#1              ;111
                  |L1.16|
000010  428a              CMP      r2,r1                 ;111
000012  d3f9              BCC      |L1.8|
;;;114      }
;;;115      return (CRC->DR);
000014  6818              LDR      r0,[r3,#0]
;;;116    }
000016  bd10              POP      {r4,pc}
;;;117    
                          ENDP

                  |L1.24|
                          DCD      0x40023000

                          AREA ||i.CRC_CalcCRC||, CODE, READONLY, ALIGN=2

                  CRC_CalcCRC PROC
;;;93       */
;;;94     uint32_t CRC_CalcCRC(uint32_t Data)
000000  4901              LDR      r1,|L2.8|
;;;95     {
;;;96       CRC->DR = Data;
000002  6008              STR      r0,[r1,#0]
;;;97       
;;;98       return (CRC->DR);
000004  6808              LDR      r0,[r1,#0]
;;;99     }
000006  4770              BX       lr
;;;100    
                          ENDP

                  |L2.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetCRC||, CODE, READONLY, ALIGN=2

                  CRC_GetCRC PROC
;;;122      */
;;;123    uint32_t CRC_GetCRC(void)
000000  4801              LDR      r0,|L3.8|
;;;124    {
;;;125      return (CRC->DR);
000002  6800              LDR      r0,[r0,#0]
;;;126    }
000004  4770              BX       lr
;;;127    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      0x40023000

                          AREA ||i.CRC_GetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_GetIDRegister PROC
;;;142      */
;;;143    uint8_t CRC_GetIDRegister(void)
000000  4801              LDR      r0,|L4.8|
;;;144    {
;;;145      return (CRC->IDR);
000002  7900              LDRB     r0,[r0,#4]
;;;146    }
000004  4770              BX       lr
;;;147    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      0x40023000

                          AREA ||i.CRC_ResetDR||, CODE, READONLY, ALIGN=2

                  CRC_ResetDR PROC
;;;82       */
;;;83     void CRC_ResetDR(void)
000000  4901              LDR      r1,|L5.8|
;;;84     {
;;;85       /* Reset CRC generator */
;;;86       CRC->CR = CRC_CR_RESET;
000002  2001              MOVS     r0,#1
000004  6088              STR      r0,[r1,#8]
;;;87     }
000006  4770              BX       lr
;;;88     
                          ENDP

                  |L5.8|
                          DCD      0x40023000

                          AREA ||i.CRC_SetIDRegister||, CODE, READONLY, ALIGN=2

                  CRC_SetIDRegister PROC
;;;132      */
;;;133    void CRC_SetIDRegister(uint8_t IDValue)
000000  4901              LDR      r1,|L6.8|
;;;134    {
;;;135      CRC->IDR = IDValue;
000002  7108              STRB     r0,[r1,#4]
;;;136    }
000004  4770              BX       lr
;;;137    
                          ENDP

000006  0000              DCW      0x0000
                  |L6.8|
                          DCD      0x40023000
