; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\lib_ascii.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\lib_ascii.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\lib_ascii.crf ..\UCOSIII\uC-LIB\lib_ascii.c]
                          THUMB

                          AREA ||i.ASCII_Cmp||, CODE, READONLY, ALIGN=1

                  ASCII_Cmp PROC
;;;637    
;;;638    CPU_BOOLEAN  ASCII_Cmp (CPU_CHAR  c1,
000000  b500              PUSH     {lr}
;;;639                            CPU_CHAR  c2)
;;;640    {
000002  460b              MOV      r3,r1
;;;641        CPU_CHAR     c1_upper;
;;;642        CPU_CHAR     c2_upper;
;;;643        CPU_BOOLEAN  cmp;
;;;644    
;;;645    
;;;646        c1_upper =  ASCII_ToUpper(c1);
000004  f7fffffe          BL       ASCII_ToUpper
000008  4602              MOV      r2,r0
;;;647        c2_upper =  ASCII_ToUpper(c2);
00000a  4618              MOV      r0,r3
00000c  f7fffffe          BL       ASCII_ToUpper
;;;648        cmp      = (c1_upper == c2_upper) ? (DEF_YES) : (DEF_NO);
000010  4282              CMP      r2,r0
000012  d101              BNE      |L1.24|
000014  2001              MOVS     r0,#1
;;;649    
;;;650        return (cmp);
;;;651    }
000016  bd00              POP      {pc}
                  |L1.24|
000018  2000              MOVS     r0,#0                 ;648
00001a  bd00              POP      {pc}
;;;652    
                          ENDP


                          AREA ||i.ASCII_IsAlpha||, CODE, READONLY, ALIGN=1

                  ASCII_IsAlpha PROC
;;;152    
;;;153    CPU_BOOLEAN  ASCII_IsAlpha (CPU_CHAR  c)
000000  f1a00141          SUB      r1,r0,#0x41
;;;154    {
;;;155        CPU_BOOLEAN  alpha;
;;;156    
;;;157    
;;;158        alpha = ASCII_IS_ALPHA(c);
000004  2919              CMP      r1,#0x19
000006  d902              BLS      |L2.14|
000008  3861              SUBS     r0,r0,#0x61
00000a  2819              CMP      r0,#0x19
00000c  d801              BHI      |L2.18|
                  |L2.14|
00000e  2001              MOVS     r0,#1
;;;159    
;;;160        return (alpha);
;;;161    }
000010  4770              BX       lr
                  |L2.18|
000012  2000              MOVS     r0,#0                 ;158
000014  4770              BX       lr
;;;162    
                          ENDP


                          AREA ||i.ASCII_IsAlphaNum||, CODE, READONLY, ALIGN=1

                  ASCII_IsAlphaNum PROC
;;;182    
;;;183    CPU_BOOLEAN  ASCII_IsAlphaNum (CPU_CHAR  c)
000000  f1a00141          SUB      r1,r0,#0x41
;;;184    {
;;;185        CPU_BOOLEAN  alpha_num;
;;;186    
;;;187    
;;;188        alpha_num = ASCII_IS_ALPHA_NUM(c);
000004  2919              CMP      r1,#0x19
000006  d905              BLS      |L3.20|
000008  3920              SUBS     r1,r1,#0x20
00000a  2919              CMP      r1,#0x19
00000c  d902              BLS      |L3.20|
00000e  3830              SUBS     r0,r0,#0x30
000010  2809              CMP      r0,#9
000012  d801              BHI      |L3.24|
                  |L3.20|
000014  2001              MOVS     r0,#1
;;;189    
;;;190        return (alpha_num);
;;;191    }
000016  4770              BX       lr
                  |L3.24|
000018  2000              MOVS     r0,#0                 ;188
00001a  4770              BX       lr
;;;192    
                          ENDP


                          AREA ||i.ASCII_IsBlank||, CODE, READONLY, ALIGN=1

                  ASCII_IsBlank PROC
;;;364    
;;;365    CPU_BOOLEAN  ASCII_IsBlank (CPU_CHAR  c)
000000  2820              CMP      r0,#0x20
;;;366    {
000002  d003              BEQ      |L4.12|
;;;367        CPU_BOOLEAN  blank;
;;;368    
;;;369    
;;;370        blank = ASCII_IS_BLANK(c);
000004  2809              CMP      r0,#9
000006  d001              BEQ      |L4.12|
000008  2000              MOVS     r0,#0
;;;371    
;;;372        return (blank);
;;;373    }
00000a  4770              BX       lr
                  |L4.12|
00000c  2001              MOVS     r0,#1                 ;370
00000e  4770              BX       lr
;;;374    
                          ENDP


                          AREA ||i.ASCII_IsCtrl||, CODE, READONLY, ALIGN=1

                  ASCII_IsCtrl PROC
;;;530    
;;;531    CPU_BOOLEAN  ASCII_IsCtrl (CPU_CHAR  c)
000000  b241              SXTB     r1,r0
;;;532    {
;;;533        CPU_BOOLEAN  ctrl;
;;;534    
;;;535    
;;;536        ctrl = ASCII_IS_CTRL(c);
000002  2900              CMP      r1,#0
000004  db01              BLT      |L5.10|
000006  281f              CMP      r0,#0x1f
000008  d903              BLS      |L5.18|
                  |L5.10|
00000a  287f              CMP      r0,#0x7f
00000c  d001              BEQ      |L5.18|
00000e  2000              MOVS     r0,#0
;;;537    
;;;538        return (ctrl);
;;;539    }
000010  4770              BX       lr
                  |L5.18|
000012  2001              MOVS     r0,#1                 ;536
000014  4770              BX       lr
;;;540    
                          ENDP


                          AREA ||i.ASCII_IsDig||, CODE, READONLY, ALIGN=1

                  ASCII_IsDig PROC
;;;272    
;;;273    CPU_BOOLEAN  ASCII_IsDig (CPU_CHAR  c)
000000  3830              SUBS     r0,r0,#0x30
;;;274    {
;;;275        CPU_BOOLEAN  dig;
;;;276    
;;;277    
;;;278        dig = ASCII_IS_DIG(c);
000002  2809              CMP      r0,#9
000004  d801              BHI      |L6.10|
000006  2001              MOVS     r0,#1
;;;279    
;;;280        return (dig);
;;;281    }
000008  4770              BX       lr
                  |L6.10|
00000a  2000              MOVS     r0,#0                 ;278
00000c  4770              BX       lr
;;;282    
                          ENDP


                          AREA ||i.ASCII_IsDigHex||, CODE, READONLY, ALIGN=1

                  ASCII_IsDigHex PROC
;;;331    
;;;332    CPU_BOOLEAN  ASCII_IsDigHex (CPU_CHAR  c)
000000  f1a00130          SUB      r1,r0,#0x30
;;;333    {
;;;334        CPU_BOOLEAN  dig_hex;
;;;335    
;;;336    
;;;337        dig_hex = ASCII_IS_DIG_HEX(c);
000004  2909              CMP      r1,#9
000006  d905              BLS      |L7.20|
000008  3911              SUBS     r1,r1,#0x11
00000a  2905              CMP      r1,#5
00000c  d902              BLS      |L7.20|
00000e  3861              SUBS     r0,r0,#0x61
000010  2805              CMP      r0,#5
000012  d801              BHI      |L7.24|
                  |L7.20|
000014  2001              MOVS     r0,#1
;;;338    
;;;339        return (dig_hex);
;;;340    }
000016  4770              BX       lr
                  |L7.24|
000018  2000              MOVS     r0,#0                 ;337
00001a  4770              BX       lr
;;;341    
                          ENDP


                          AREA ||i.ASCII_IsDigOct||, CODE, READONLY, ALIGN=1

                  ASCII_IsDigOct PROC
;;;301    
;;;302    CPU_BOOLEAN  ASCII_IsDigOct (CPU_CHAR  c)
000000  3830              SUBS     r0,r0,#0x30
;;;303    {
;;;304        CPU_BOOLEAN  dig_oct;
;;;305    
;;;306    
;;;307        dig_oct = ASCII_IS_DIG_OCT(c);
000002  2807              CMP      r0,#7
000004  d801              BHI      |L8.10|
000006  2001              MOVS     r0,#1
;;;308    
;;;309        return (dig_oct);
;;;310    }
000008  4770              BX       lr
                  |L8.10|
00000a  2000              MOVS     r0,#0                 ;307
00000c  4770              BX       lr
;;;311    
                          ENDP


                          AREA ||i.ASCII_IsGraph||, CODE, READONLY, ALIGN=1

                  ASCII_IsGraph PROC
;;;466    
;;;467    CPU_BOOLEAN  ASCII_IsGraph (CPU_CHAR  c)
000000  3821              SUBS     r0,r0,#0x21
;;;468    {
;;;469        CPU_BOOLEAN  graph;
;;;470    
;;;471    
;;;472        graph = ASCII_IS_GRAPH(c);
000002  285d              CMP      r0,#0x5d
000004  d801              BHI      |L9.10|
000006  2001              MOVS     r0,#1
;;;473    
;;;474        return (graph);
;;;475    }
000008  4770              BX       lr
                  |L9.10|
00000a  2000              MOVS     r0,#0                 ;472
00000c  4770              BX       lr
;;;476    
                          ENDP


                          AREA ||i.ASCII_IsLower||, CODE, READONLY, ALIGN=1

                  ASCII_IsLower PROC
;;;212    
;;;213    CPU_BOOLEAN  ASCII_IsLower (CPU_CHAR  c)
000000  3861              SUBS     r0,r0,#0x61
;;;214    {
;;;215        CPU_BOOLEAN  lower;
;;;216    
;;;217    
;;;218        lower = ASCII_IS_LOWER(c);
000002  2819              CMP      r0,#0x19
000004  d801              BHI      |L10.10|
000006  2001              MOVS     r0,#1
;;;219    
;;;220        return (lower);
;;;221    }
000008  4770              BX       lr
                  |L10.10|
00000a  2000              MOVS     r0,#0                 ;218
00000c  4770              BX       lr
;;;222    
                          ENDP


                          AREA ||i.ASCII_IsPrint||, CODE, READONLY, ALIGN=1

                  ASCII_IsPrint PROC
;;;432    
;;;433    CPU_BOOLEAN  ASCII_IsPrint (CPU_CHAR  c)
000000  3820              SUBS     r0,r0,#0x20
;;;434    {
;;;435        CPU_BOOLEAN  print;
;;;436    
;;;437    
;;;438        print = ASCII_IS_PRINT(c);
000002  285e              CMP      r0,#0x5e
000004  d801              BHI      |L11.10|
000006  2001              MOVS     r0,#1
;;;439    
;;;440        return (print);
;;;441    }
000008  4770              BX       lr
                  |L11.10|
00000a  2000              MOVS     r0,#0                 ;438
00000c  4770              BX       lr
;;;442    
                          ENDP


                          AREA ||i.ASCII_IsPunct||, CODE, READONLY, ALIGN=1

                  ASCII_IsPunct PROC
;;;496    
;;;497    CPU_BOOLEAN  ASCII_IsPunct (CPU_CHAR  c)
000000  f1a00120          SUB      r1,r0,#0x20
;;;498    {
;;;499        CPU_BOOLEAN  punct;
;;;500    
;;;501    
;;;502        punct = ASCII_IS_PUNCT(c);
000004  295e              CMP      r1,#0x5e
000006  d816              BHI      |L12.54|
000008  2820              CMP      r0,#0x20
00000a  d014              BEQ      |L12.54|
00000c  280d              CMP      r0,#0xd
00000e  d012              BEQ      |L12.54|
000010  280a              CMP      r0,#0xa
000012  d010              BEQ      |L12.54|
000014  280c              CMP      r0,#0xc
000016  d00e              BEQ      |L12.54|
000018  2809              CMP      r0,#9
00001a  d00c              BEQ      |L12.54|
00001c  280b              CMP      r0,#0xb
00001e  d00a              BEQ      |L12.54|
000020  3921              SUBS     r1,r1,#0x21
000022  291a              CMP      r1,#0x1a
000024  d307              BCC      |L12.54|
000026  3920              SUBS     r1,r1,#0x20
000028  291a              CMP      r1,#0x1a
00002a  d304              BCC      |L12.54|
00002c  3830              SUBS     r0,r0,#0x30
00002e  280a              CMP      r0,#0xa
000030  d301              BCC      |L12.54|
000032  2001              MOVS     r0,#1
;;;503    
;;;504        return (punct);
;;;505    }
000034  4770              BX       lr
                  |L12.54|
000036  2000              MOVS     r0,#0                 ;502
000038  4770              BX       lr
;;;506    
                          ENDP


                          AREA ||i.ASCII_IsSpace||, CODE, READONLY, ALIGN=1

                  ASCII_IsSpace PROC
;;;398    
;;;399    CPU_BOOLEAN  ASCII_IsSpace (CPU_CHAR  c)
000000  2820              CMP      r0,#0x20
;;;400    {
000002  d00b              BEQ      |L13.28|
;;;401        CPU_BOOLEAN  space;
;;;402    
;;;403    
;;;404        space = ASCII_IS_SPACE(c);
000004  280d              CMP      r0,#0xd
000006  d009              BEQ      |L13.28|
000008  280a              CMP      r0,#0xa
00000a  d007              BEQ      |L13.28|
00000c  280c              CMP      r0,#0xc
00000e  d005              BEQ      |L13.28|
000010  2809              CMP      r0,#9
000012  d003              BEQ      |L13.28|
000014  280b              CMP      r0,#0xb
000016  d001              BEQ      |L13.28|
000018  2000              MOVS     r0,#0
;;;405    
;;;406        return (space);
;;;407    }
00001a  4770              BX       lr
                  |L13.28|
00001c  2001              MOVS     r0,#1                 ;404
00001e  4770              BX       lr
;;;408    
                          ENDP


                          AREA ||i.ASCII_IsUpper||, CODE, READONLY, ALIGN=1

                  ASCII_IsUpper PROC
;;;242    
;;;243    CPU_BOOLEAN  ASCII_IsUpper (CPU_CHAR  c)
000000  3841              SUBS     r0,r0,#0x41
;;;244    {
;;;245        CPU_BOOLEAN  upper;
;;;246    
;;;247    
;;;248        upper = ASCII_IS_UPPER(c);
000002  2819              CMP      r0,#0x19
000004  d801              BHI      |L14.10|
000006  2001              MOVS     r0,#1
;;;249    
;;;250        return (upper);
;;;251    }
000008  4770              BX       lr
                  |L14.10|
00000a  2000              MOVS     r0,#0                 ;248
00000c  4770              BX       lr
;;;252    
                          ENDP


                          AREA ||i.ASCII_ToLower||, CODE, READONLY, ALIGN=1

                  ASCII_ToLower PROC
;;;568    
;;;569    CPU_CHAR  ASCII_ToLower (CPU_CHAR  c)
000000  f1a00141          SUB      r1,r0,#0x41
;;;570    {
;;;571        CPU_CHAR  lower;
;;;572    
;;;573    
;;;574        lower = ASCII_TO_LOWER(c);
000004  2919              CMP      r1,#0x19
000006  d800              BHI      |L15.10|
000008  3020              ADDS     r0,r0,#0x20
                  |L15.10|
00000a  b2c0              UXTB     r0,r0
;;;575    
;;;576        return (lower);
;;;577    }
00000c  4770              BX       lr
;;;578    
                          ENDP


                          AREA ||i.ASCII_ToUpper||, CODE, READONLY, ALIGN=1

                  ASCII_ToUpper PROC
;;;606    
;;;607    CPU_CHAR  ASCII_ToUpper (CPU_CHAR  c)
000000  f1a00161          SUB      r1,r0,#0x61
;;;608    {
;;;609        CPU_CHAR  upper;
;;;610    
;;;611    
;;;612        upper = ASCII_TO_UPPER(c);
000004  2919              CMP      r1,#0x19
000006  d800              BHI      |L16.10|
000008  3820              SUBS     r0,r0,#0x20
                  |L16.10|
00000a  b2c0              UXTB     r0,r0
;;;613    
;;;614        return (upper);
;;;615    }
00000c  4770              BX       lr
;;;616    
                          ENDP

