; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\rf_module.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\rf_module.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\rf_module.crf ..\BSP\src\rf_module.c]
                          THUMB

                          AREA ||i.rf_lock||, CODE, READONLY, ALIGN=1

                  rf_lock PROC
;;;72     
;;;73     void rf_lock(void)
000000  b510              PUSH     {r4,lr}
;;;74     {
;;;75         uint8_t i;
;;;76         for(i = 0; i < RF_REPEAT_COUNT; i++) {
000002  2400              MOVS     r4,#0
                  |L1.4|
;;;77             rf_send_start();
000004  f7fffffe          BL       rf_send_start
;;;78             rf_send(IMMO_LOCK);
000008  2044              MOVS     r0,#0x44
00000a  f7fffffe          BL       rf_send
00000e  1c64              ADDS     r4,r4,#1              ;76
000010  b2e4              UXTB     r4,r4                 ;76
000012  2c14              CMP      r4,#0x14              ;76
000014  d3f6              BCC      |L1.4|
;;;79         }
;;;80     }
000016  bd10              POP      {r4,pc}
;;;81     
                          ENDP


                          AREA ||i.rf_module_init||, CODE, READONLY, ALIGN=2

                  rf_module_init PROC
;;;11     
;;;12     void rf_module_init(void)
000000  b538              PUSH     {r3-r5,lr}
;;;13     {
;;;14         GPIO_InitTypeDef GPIO_InitStructure;
;;;15         //poweron immo module
;;;16         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;17     
;;;18         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13 |GPIO_Pin_14;
00000a  f44f40c0          MOV      r0,#0x6000
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;19         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000012  2010              MOVS     r0,#0x10
000014  f88d0003          STRB     r0,[sp,#3]
;;;20         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000018  2003              MOVS     r0,#3
;;;21         GPIO_Init(GPIOC, &GPIO_InitStructure);
00001a  4c08              LDR      r4,|L2.60|
00001c  f88d0002          STRB     r0,[sp,#2]            ;20
000020  4669              MOV      r1,sp
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       GPIO_Init
;;;22     
;;;23         GPIO_SetBits(GPIOC, GPIO_Pin_13);
000028  1461              ASRS     r1,r4,#17
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       GPIO_SetBits
;;;24         GPIO_ResetBits(GPIOC, GPIO_Pin_14);
000030  f44f4180          MOV      r1,#0x4000
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       GPIO_ResetBits
;;;25     }
00003a  bd38              POP      {r3-r5,pc}
;;;26     
                          ENDP

                  |L2.60|
                          DCD      0x40011000

                          AREA ||i.rf_send||, CODE, READONLY, ALIGN=2

                  rf_send PROC
;;;59     
;;;60     void rf_send(int data)
000000  b570              PUSH     {r4-r6,lr}
;;;61     {
;;;62         s8 i;
;;;63         int address = data;
000002  4605              MOV      r5,r0
;;;64         for(i = 7; i >= 0; i--) {
000004  f05f0407          MOVS.W   r4,#7
                  |L3.8|
;;;65             if((address >> i) & 0x01) {
000008  fa45f004          ASR      r0,r5,r4
00000c  07c0              LSLS     r0,r0,#31
00000e  d002              BEQ      |L3.22|
;;;66                 rf_send_high();
000010  f7fffffe          BL       rf_send_high
000014  e001              B        |L3.26|
                  |L3.22|
;;;67             } else {
;;;68                 rf_send_low();
000016  f7fffffe          BL       rf_send_low
                  |L3.26|
00001a  1e64              SUBS     r4,r4,#1              ;64
00001c  b264              SXTB     r4,r4                 ;64
00001e  2c00              CMP      r4,#0                 ;64
000020  daf2              BGE      |L3.8|
;;;69             }
;;;70         }
;;;71     }
000022  bd70              POP      {r4-r6,pc}
;;;72     
                          ENDP


                          AREA ||i.rf_send_high||, CODE, READONLY, ALIGN=2

                  rf_send_high PROC
;;;26     
;;;27     void rf_send_high(void)
000000  b538              PUSH     {r3-r5,lr}
;;;28     {
;;;29         OS_ERR err;
;;;30     
;;;31         SET_HIGH();
000002  4d0b              LDR      r5,|L4.48|
000004  f44f4480          MOV      r4,#0x4000
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_SetBits
;;;32         //delay_us(4000);
;;;33         OSTimeDly (20, OS_OPT_TIME_HMSM_STRICT, &err);
000010  466a              MOV      r2,sp
000012  2100              MOVS     r1,#0
000014  2014              MOVS     r0,#0x14
000016  f7fffffe          BL       OSTimeDly
;;;34         SET_LOW();
00001a  4621              MOV      r1,r4
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       GPIO_ResetBits
;;;35         //delay_us(800);
;;;36         OSTimeDly (4, OS_OPT_TIME_HMSM_STRICT, &err);
000022  466a              MOV      r2,sp
000024  2100              MOVS     r1,#0
000026  2004              MOVS     r0,#4
000028  f7fffffe          BL       OSTimeDly
;;;37     }
00002c  bd38              POP      {r3-r5,pc}
;;;38     void rf_send_low(void)
                          ENDP

00002e  0000              DCW      0x0000
                  |L4.48|
                          DCD      0x40011000

                          AREA ||i.rf_send_low||, CODE, READONLY, ALIGN=2

                  rf_send_low PROC
;;;37     }
;;;38     void rf_send_low(void)
000000  b538              PUSH     {r3-r5,lr}
;;;39     {
;;;40         OS_ERR err;
;;;41         SET_HIGH();
000002  4d0b              LDR      r5,|L5.48|
000004  f44f4480          MOV      r4,#0x4000
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_SetBits
;;;42         //delay_us(800);
;;;43         OSTimeDly (4, OS_OPT_TIME_HMSM_STRICT, &err);
000010  466a              MOV      r2,sp
000012  2100              MOVS     r1,#0
000014  2004              MOVS     r0,#4
000016  f7fffffe          BL       OSTimeDly
;;;44         SET_LOW();
00001a  4621              MOV      r1,r4
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       GPIO_ResetBits
;;;45         //delay_us(4000);
;;;46         OSTimeDly (20, OS_OPT_TIME_HMSM_STRICT, &err);
000022  466a              MOV      r2,sp
000024  2100              MOVS     r1,#0
000026  2014              MOVS     r0,#0x14
000028  f7fffffe          BL       OSTimeDly
;;;47     }
00002c  bd38              POP      {r3-r5,pc}
;;;48     
                          ENDP

00002e  0000              DCW      0x0000
                  |L5.48|
                          DCD      0x40011000

                          AREA ||i.rf_send_start||, CODE, READONLY, ALIGN=2

                  rf_send_start PROC
;;;48     
;;;49     void rf_send_start(void)
000000  b538              PUSH     {r3-r5,lr}
;;;50     {
;;;51         OS_ERR err;
;;;52         SET_HIGH();
000002  4d0b              LDR      r5,|L6.48|
000004  f44f4480          MOV      r4,#0x4000
000008  4621              MOV      r1,r4
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GPIO_SetBits
;;;53         //delay_us(400);
;;;54         OSTimeDly (2, OS_OPT_TIME_HMSM_STRICT, &err);
000010  466a              MOV      r2,sp
000012  2100              MOVS     r1,#0
000014  2002              MOVS     r0,#2
000016  f7fffffe          BL       OSTimeDly
;;;55         SET_LOW();
00001a  4621              MOV      r1,r4
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       GPIO_ResetBits
;;;56         //delay_us(12400);
;;;57         OSTimeDly (62, OS_OPT_TIME_HMSM_STRICT, &err);
000022  466a              MOV      r2,sp
000024  2100              MOVS     r1,#0
000026  203e              MOVS     r0,#0x3e
000028  f7fffffe          BL       OSTimeDly
;;;58     }
00002c  bd38              POP      {r3-r5,pc}
;;;59     
                          ENDP

00002e  0000              DCW      0x0000
                  |L6.48|
                          DCD      0x40011000

                          AREA ||i.rf_unlock||, CODE, READONLY, ALIGN=1

                  rf_unlock PROC
;;;81     
;;;82     void rf_unlock(void)
000000  b510              PUSH     {r4,lr}
;;;83     {
;;;84         uint8_t i;
;;;85         for(i = 0; i < RF_REPEAT_COUNT; i++) {
000002  2400              MOVS     r4,#0
                  |L7.4|
;;;86             rf_send_start();
000004  f7fffffe          BL       rf_send_start
;;;87             rf_send(IMMO_UNLOCK);
000008  2088              MOVS     r0,#0x88
00000a  f7fffffe          BL       rf_send
00000e  1c64              ADDS     r4,r4,#1              ;85
000010  b2e4              UXTB     r4,r4                 ;85
000012  2c14              CMP      r4,#0x14              ;85
000014  d3f6              BCC      |L7.4|
;;;88         }
;;;89     }
000016  bd10              POP      {r4,pc}
                          ENDP

