; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\eobd.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\eobd.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\eobd.crf ..\PAL\vehicles\eobd.c]
                          THUMB

                          AREA ||i.eobd_check_fault_code||, CODE, READONLY, ALIGN=1

                  eobd_check_fault_code PROC
;;;383    
;;;384    uint32_t *eobd_check_fault_code(uint8_t id, uint8_t *len)
000000  2000              MOVS     r0,#0
;;;385    {
;;;386        return NULL;
;;;387    }
000002  4770              BX       lr
;;;388    void eobd_clear_fault_code(void)
                          ENDP


                          AREA ||i.eobd_clear_fault_code||, CODE, READONLY, ALIGN=1

                  eobd_clear_fault_code PROC
;;;387    }
;;;388    void eobd_clear_fault_code(void)
000000  4770              BX       lr
;;;389    {}
                          ENDP


                          AREA ||i.eobd_ctrl_door||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_ctrl_door PROC
;;;282    
;;;283    void eobd_ctrl_door(uint8_t state)
000000  b508              PUSH     {r3,lr}
;;;284    {
;;;285        logi("-> %s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L3.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L3.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L3.48|
000024  a003              ADR      r0,|L3.52|
000026  f7fffffe          BL       __2printf
                  |L3.42|
;;;286    }
00002a  bd08              POP      {r3,pc}
;;;287    
                          ENDP

                  |L3.44|
                          DCD      DEBUG_MODE
                  |L3.48|
                          DCD      ||.constdata||+0x11
                  |L3.52|
000034  5b253035          DCB      "[%05d.%03d/I]: -> %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a202d
000044  3e202573
000048  0d0a00  
00004b  00                DCB      0

                          AREA ||i.eobd_ctrl_findcar||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_ctrl_findcar PROC
;;;302    
;;;303    void eobd_ctrl_findcar(uint8_t state)
000000  b508              PUSH     {r3,lr}
;;;304    {
;;;305        logi("-> %s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L4.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L4.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L4.48|
000024  a003              ADR      r0,|L4.52|
000026  f7fffffe          BL       __2printf
                  |L4.42|
;;;306    }
00002a  bd08              POP      {r3,pc}
;;;307    
                          ENDP

                  |L4.44|
                          DCD      DEBUG_MODE
                  |L4.48|
                          DCD      ||.constdata||+0x52
                  |L4.52|
000034  5b253035          DCB      "[%05d.%03d/I]: -> %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a202d
000044  3e202573
000048  0d0a00  
00004b  00                DCB      0

                          AREA ||i.eobd_ctrl_light||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_ctrl_light PROC
;;;287    
;;;288    void eobd_ctrl_light(uint8_t state)
000000  b508              PUSH     {r3,lr}
;;;289    {
;;;290        logi("-> %s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L5.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L5.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L5.48|
000024  a003              ADR      r0,|L5.52|
000026  f7fffffe          BL       __2printf
                  |L5.42|
;;;291    }
00002a  bd08              POP      {r3,pc}
;;;292    
                          ENDP

                  |L5.44|
                          DCD      DEBUG_MODE
                  |L5.48|
                          DCD      ||.constdata||+0x20
                  |L5.52|
000034  5b253035          DCB      "[%05d.%03d/I]: -> %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a202d
000044  3e202573
000048  0d0a00  
00004b  00                DCB      0

                          AREA ||i.eobd_ctrl_sunroof||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_ctrl_sunroof PROC
;;;292    
;;;293    void eobd_ctrl_sunroof(uint8_t state)
000000  b508              PUSH     {r3,lr}
;;;294    {
;;;295        logi("-> %s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L6.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L6.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L6.48|
000024  a003              ADR      r0,|L6.52|
000026  f7fffffe          BL       __2printf
                  |L6.42|
;;;296    }
00002a  bd08              POP      {r3,pc}
;;;297    
                          ENDP

                  |L6.44|
                          DCD      DEBUG_MODE
                  |L6.48|
                          DCD      ||.constdata||+0x30
                  |L6.52|
000034  5b253035          DCB      "[%05d.%03d/I]: -> %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a202d
000044  3e202573
000048  0d0a00  
00004b  00                DCB      0

                          AREA ||i.eobd_ctrl_trunk||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_ctrl_trunk PROC
;;;297    
;;;298    void eobd_ctrl_trunk(uint8_t state)
000000  b508              PUSH     {r3,lr}
;;;299    {
;;;300        logi("-> %s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L7.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L7.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L7.48|
000024  a003              ADR      r0,|L7.52|
000026  f7fffffe          BL       __2printf
                  |L7.42|
;;;301    }
00002a  bd08              POP      {r3,pc}
;;;302    
                          ENDP

                  |L7.44|
                          DCD      DEBUG_MODE
                  |L7.48|
                          DCD      ||.constdata||+0x42
                  |L7.52|
000034  5b253035          DCB      "[%05d.%03d/I]: -> %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a202d
000044  3e202573
000048  0d0a00  
00004b  00                DCB      0

                          AREA ||i.eobd_ctrl_window||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_ctrl_window PROC
;;;277    
;;;278    void eobd_ctrl_window(uint8_t state)
000000  b508              PUSH     {r3,lr}
;;;279    {
;;;280        logi("-> %s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L8.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L8.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L8.48|
000024  a003              ADR      r0,|L8.52|
000026  f7fffffe          BL       __2printf
                  |L8.42|
;;;281    }
00002a  bd08              POP      {r3,pc}
;;;282    
                          ENDP

                  |L8.44|
                          DCD      DEBUG_MODE
                  |L8.48|
                          DCD      ||.constdata||
                  |L8.52|
000034  5b253035          DCB      "[%05d.%03d/I]: -> %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a202d
000044  3e202573
000048  0d0a00  
00004b  00                DCB      0

                          AREA ||i.eobd_data_stream||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  eobd_data_stream PROC
;;;345    
;;;346    uint8_t* eobd_data_stream(uint8_t pid, uint8_t *len)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;347    {
000004  4604              MOV      r4,r0
;;;348        int8_t ret, i;
;;;349        uint8_t valid_len;
;;;350        uint8_t offset;
;;;351    
;;;352        CanTxMsg txMsg;
;;;353        CanRxMsg *rxMsg;
;;;354    
;;;355        if(eobdSupportItems[pid].support != SUPPORTED) {
000006  4828              LDR      r0,|L9.168|
000008  b085              SUB      sp,sp,#0x14           ;347
00000a  eb000044          ADD      r0,r0,r4,LSL #1
00000e  460d              MOV      r5,r1                 ;347
000010  7840              LDRB     r0,[r0,#1]
000012  2801              CMP      r0,#1
000014  d002              BEQ      |L9.28|
;;;356            *len = UNSUPPORTED_LEN;
000016  20ff              MOVS     r0,#0xff
000018  7008              STRB     r0,[r1,#0]
;;;357            return NULL;
00001a  e042              B        |L9.162|
                  |L9.28|
;;;358        }
;;;359    
;;;360        xdelay(2);
00001c  2002              MOVS     r0,#2
00001e  f7fffffe          BL       xdelay
;;;361        valid_len = eobdStdDs[pid].valid_len;
000022  4821              LDR      r0,|L9.168|
000024  eb0401c4          ADD      r1,r4,r4,LSL #3
000028  3072              ADDS     r0,r0,#0x72
00002a  eb000241          ADD      r2,r0,r1,LSL #1
00002e  4669              MOV      r1,sp                 ;352
000030  f8929011          LDRB     r9,[r2,#0x11]
;;;362        offset = eobdStdDs[pid].offset;
000034  f8928010          LDRB     r8,[r2,#0x10]
;;;363        txMsg.StdId = eobdStdDs[pid].txId;
000038  8850              LDRH     r0,[r2,#2]
;;;364        txMsg.IDE = CAN_ID_STD;
00003a  9000              STR      r0,[sp,#0]
00003c  2000              MOVS     r0,#0
00003e  f88d0008          STRB     r0,[sp,#8]
;;;365        txMsg.DLC = eobdStdDs[pid].len;
000042  7910              LDRB     r0,[r2,#4]
000044  f88d000a          STRB     r0,[sp,#0xa]
;;;366        for(i = 0; i < txMsg.DLC; i++) {
000048  2000              MOVS     r0,#0
00004a  e005              B        |L9.88|
                  |L9.76|
;;;367            txMsg.Data[i] = eobdStdDs[pid].data[i];
00004c  1813              ADDS     r3,r2,r0
00004e  180c              ADDS     r4,r1,r0
000050  795b              LDRB     r3,[r3,#5]
000052  1c40              ADDS     r0,r0,#1              ;366
000054  72e3              STRB     r3,[r4,#0xb]
000056  b240              SXTB     r0,r0                 ;366
                  |L9.88|
000058  f89d300a          LDRB     r3,[sp,#0xa]          ;366
00005c  4283              CMP      r3,r0                 ;366
00005e  dcf5              BGT      |L9.76|
;;;368        }
;;;369        ret = flexcan_ioctl(DIR_BI, &txMsg, eobdStdDs[pid].rxId, 1);
000060  89d2              LDRH     r2,[r2,#0xe]
000062  2301              MOVS     r3,#1
000064  2003              MOVS     r0,#3
000066  f7fffffe          BL       flexcan_ioctl
;;;370        if(ret > 0) {
00006a  2800              CMP      r0,#0
00006c  dd19              BLE      |L9.162|
;;;371            rxMsg = flexcan_dump();
00006e  f7fffffe          BL       flexcan_dump
;;;372            for(i = 0; i < 8; i++) {
;;;373                eobd_rx_buf[i] = rxMsg->Data[i];
000072  4f0d              LDR      r7,|L9.168|
000074  2400              MOVS     r4,#0                 ;372
000076  4606              MOV      r6,r0                 ;371
000078  3f08              SUBS     r7,r7,#8
                  |L9.122|
00007a  1930              ADDS     r0,r6,r4
00007c  7ac1              LDRB     r1,[r0,#0xb]
00007e  5539              STRB     r1,[r7,r4]
;;;374                printf("%02x ", eobd_rx_buf[i]);
000080  a00a              ADR      r0,|L9.172|
000082  f7fffffe          BL       __2printf
000086  1c64              ADDS     r4,r4,#1              ;372
000088  b264              SXTB     r4,r4                 ;372
00008a  2c08              CMP      r4,#8                 ;372
00008c  dbf5              BLT      |L9.122|
;;;375            }
;;;376            printf("\r\n");
00008e  a009              ADR      r0,|L9.180|
000090  f7fffffe          BL       __2printf
;;;377            *len = valid_len;
000094  f8859000          STRB     r9,[r5,#0]
;;;378            return eobd_rx_buf + offset;
000098  eb070008          ADD      r0,r7,r8
                  |L9.156|
;;;379        } else {
;;;380            return NULL;
;;;381        }
;;;382    }
00009c  b005              ADD      sp,sp,#0x14
00009e  e8bd83f0          POP      {r4-r9,pc}
                  |L9.162|
0000a2  2000              MOVS     r0,#0                 ;380
0000a4  e7fa              B        |L9.156|
;;;383    
                          ENDP

0000a6  0000              DCW      0x0000
                  |L9.168|
                          DCD      ||.data||+0x8
                  |L9.172|
0000ac  25303278          DCB      "%02x ",0
0000b0  2000    
0000b2  00                DCB      0
0000b3  00                DCB      0
                  |L9.180|
0000b4  0d0a00            DCB      "\r\n",0
0000b7  00                DCB      0

                          AREA ||i.eobd_engine_on||, CODE, READONLY, ALIGN=2

                  eobd_engine_on PROC
;;;322    
;;;323    bool eobd_engine_on(void)
000000  b510              PUSH     {r4,lr}
;;;324    {
;;;325        CanRxMsg *rxMsg;
;;;326        int8_t ret = -1;
;;;327        bool on = FALSE;
000002  2400              MOVS     r4,#0
;;;328    
;;;329        ret = flexcan_ioctl(DIR_BI, &eobdEngineCmd,
000004  2301              MOVS     r3,#1
000006  f44f62fd          MOV      r2,#0x7e8
00000a  4906              LDR      r1,|L10.36|
00000c  2003              MOVS     r0,#3
00000e  f7fffffe          BL       flexcan_ioctl
;;;330                0x7e8, 1);
;;;331        if(ret > 0) {
000012  2800              CMP      r0,#0
000014  dd03              BLE      |L10.30|
;;;332            rxMsg = flexcan_dump();
000016  f7fffffe          BL       flexcan_dump
;;;333            //check if the receive msg type is needed
;;;334            //TODO: ???
;;;335            if(rxMsg == NULL) {
00001a  b100              CBZ      r0,|L10.30|
;;;336                on = FALSE;
;;;337            } else {
;;;338                on = TRUE;
00001c  2401              MOVS     r4,#1
                  |L10.30|
;;;339            }
;;;340        } else {
;;;341            on = FALSE;
;;;342        }
;;;343        return on;
00001e  4620              MOV      r0,r4
;;;344    }
000020  bd10              POP      {r4,pc}
;;;345    
                          ENDP

000022  0000              DCW      0x0000
                  |L10.36|
                          DCD      ||.data||+0x47c

                          AREA ||i.eobd_exit||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_exit PROC
;;;312    
;;;313    void eobd_exit(uint8_t type)
000000  b508              PUSH     {r3,lr}
;;;314    {
;;;315        logi("-> %s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L11.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L11.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L11.48|
000024  a003              ADR      r0,|L11.52|
000026  f7fffffe          BL       __2printf
                  |L11.42|
;;;316    }
00002a  bd08              POP      {r3,pc}
;;;317    
                          ENDP

                  |L11.44|
                          DCD      DEBUG_MODE
                  |L11.48|
                          DCD      ||.constdata||+0x6e
                  |L11.52|
000034  5b253035          DCB      "[%05d.%03d/I]: -> %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a202d
000044  3e202573
000048  0d0a00  
00004b  00                DCB      0

                          AREA ||i.eobd_init||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_init PROC
;;;307    
;;;308    void eobd_init(uint8_t type)
000000  b508              PUSH     {r3,lr}
;;;309    {
;;;310        logi("-> %s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L12.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L12.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L12.48|
000024  a003              ADR      r0,|L12.52|
000026  f7fffffe          BL       __2printf
                  |L12.42|
;;;311    }
00002a  bd08              POP      {r3,pc}
;;;312    
                          ENDP

                  |L12.44|
                          DCD      DEBUG_MODE
                  |L12.48|
                          DCD      ||.constdata||+0x64
                  |L12.52|
000034  5b253035          DCB      "[%05d.%03d/I]: -> %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a202d
000044  3e202573
000048  0d0a00  
00004b  00                DCB      0

                          AREA ||i.eobd_keepalive||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  eobd_keepalive PROC
;;;317    
;;;318    void eobd_keepalive(uint8_t type)
000000  b51c              PUSH     {r2-r4,lr}
;;;319    {
000002  4604              MOV      r4,r0
;;;320        logi("-> %s, type = %d", __func__, type);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4909              LDR      r1,|L13.48|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L13.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b03              LDR      r3,|L13.52|
000026  a004              ADR      r0,|L13.56|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L13.46|
;;;321    }
00002e  bd1c              POP      {r2-r4,pc}
;;;322    
                          ENDP

                  |L13.48|
                          DCD      DEBUG_MODE
                  |L13.52|
                          DCD      ||.constdata||+0x78
                  |L13.56|
000038  5b253035          DCB      "[%05d.%03d/I]: -> %s, type = %d\r\n",0
00003c  642e2530
000040  33642f49
000044  5d3a202d
000048  3e202573
00004c  2c207479
000050  7065203d
000054  2025640d
000058  0a00    
00005a  00                DCB      0
00005b  00                DCB      0

                          AREA ||i.eobd_setup||, CODE, READONLY, ALIGN=2

                  eobd_setup PROC
;;;255    
;;;256    void eobd_setup(Vehicles *vehicle)
000000  4911              LDR      r1,|L14.72|
;;;257    {
;;;258        eobd_ctrl_ops.control_window = eobd_ctrl_window;
000002  4a10              LDR      r2,|L14.68|
;;;259        eobd_ctrl_ops.control_door = eobd_ctrl_door;
;;;260        eobd_ctrl_ops.control_sunroof = eobd_ctrl_sunroof;
;;;261        eobd_ctrl_ops.control_light = eobd_ctrl_light;
;;;262        eobd_ctrl_ops.control_trunk = eobd_ctrl_trunk;
;;;263        eobd_ctrl_ops.control_findcar = eobd_ctrl_findcar;
;;;264        eobd_ctrl_ops.clear_fault_code = eobd_clear_fault_code;
;;;265    
;;;266        eobd_data_ops.transfer_data_stream = eobd_data_stream;
000004  4b17              LDR      r3,|L14.100|
000006  600a              STR      r2,[r1,#0]            ;259  ; eobd_ctrl_ops
000008  4a10              LDR      r2,|L14.76|
00000a  604a              STR      r2,[r1,#4]            ;260  ; eobd_ctrl_ops
00000c  4a10              LDR      r2,|L14.80|
00000e  60ca              STR      r2,[r1,#0xc]          ;261  ; eobd_ctrl_ops
000010  4a10              LDR      r2,|L14.84|
000012  608a              STR      r2,[r1,#8]            ;262  ; eobd_ctrl_ops
000014  4a10              LDR      r2,|L14.88|
000016  610a              STR      r2,[r1,#0x10]         ;263  ; eobd_ctrl_ops
000018  4a10              LDR      r2,|L14.92|
00001a  614a              STR      r2,[r1,#0x14]         ;264  ; eobd_ctrl_ops
00001c  4a10              LDR      r2,|L14.96|
00001e  618a              STR      r2,[r1,#0x18]  ; eobd_ctrl_ops
000020  f101021c          ADD      r2,r1,#0x1c
;;;267        eobd_data_ops.is_engine_on = eobd_engine_on;
000024  6053              STR      r3,[r2,#4]  ; eobd_data_ops
000026  4b10              LDR      r3,|L14.104|
;;;268        eobd_data_ops.check_fault_code = eobd_check_fault_code;
000028  6013              STR      r3,[r2,#0]  ; eobd_data_ops
00002a  4b10              LDR      r3,|L14.108|
;;;269        eobd_data_ops.init = eobd_init;
00002c  6093              STR      r3,[r2,#8]  ; eobd_data_ops
00002e  4b10              LDR      r3,|L14.112|
;;;270        eobd_data_ops.exit = eobd_exit;
000030  60d3              STR      r3,[r2,#0xc]  ; eobd_data_ops
000032  4b10              LDR      r3,|L14.116|
;;;271        eobd_data_ops.keepalive = eobd_keepalive;
000034  6153              STR      r3,[r2,#0x14]  ; eobd_data_ops
000036  4b10              LDR      r3,|L14.120|
000038  6113              STR      r3,[r2,#0x10]  ; eobd_data_ops
00003a  e9c02101          STRD     r2,r1,[r0,#4]
;;;272    
;;;273        vehicle->ctrlOps = &eobd_ctrl_ops;
;;;274        vehicle->dataOps = &eobd_data_ops;
;;;275        vehicle->init = TRUE;
00003e  2101              MOVS     r1,#1
000040  7001              STRB     r1,[r0,#0]
;;;276    }
000042  4770              BX       lr
;;;277    
                          ENDP

                  |L14.68|
                          DCD      eobd_ctrl_window
                  |L14.72|
                          DCD      ||.bss||
                  |L14.76|
                          DCD      eobd_ctrl_door
                  |L14.80|
                          DCD      eobd_ctrl_sunroof
                  |L14.84|
                          DCD      eobd_ctrl_light
                  |L14.88|
                          DCD      eobd_ctrl_trunk
                  |L14.92|
                          DCD      eobd_ctrl_findcar
                  |L14.96|
                          DCD      eobd_clear_fault_code
                  |L14.100|
                          DCD      eobd_data_stream
                  |L14.104|
                          DCD      eobd_engine_on
                  |L14.108|
                          DCD      eobd_check_fault_code
                  |L14.112|
                          DCD      eobd_init
                  |L14.116|
                          DCD      eobd_exit
                  |L14.120|
                          DCD      eobd_keepalive

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  eobd_ctrl_ops
                          %        28
                  eobd_data_ops
                          %        24

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __func__
000000  656f6264          DCB      0x65,0x6f,0x62,0x64
000004  5f637472          DCB      0x5f,0x63,0x74,0x72
000008  6c5f7769          DCB      0x6c,0x5f,0x77,0x69
00000c  6e646f77          DCB      0x6e,0x64,0x6f,0x77
000010  00                DCB      0x00
                  |symbol_number.47|
000011  656f62            DCB      0x65,0x6f,0x62
000014  645f6374          DCB      0x64,0x5f,0x63,0x74
000018  726c5f64          DCB      0x72,0x6c,0x5f,0x64
00001c  6f6f7200          DCB      0x6f,0x6f,0x72,0x00
                  |symbol_number.48|
000020  656f6264          DCB      0x65,0x6f,0x62,0x64
000024  5f637472          DCB      0x5f,0x63,0x74,0x72
000028  6c5f6c69          DCB      0x6c,0x5f,0x6c,0x69
00002c  67687400          DCB      0x67,0x68,0x74,0x00
                  |symbol_number.49|
000030  656f6264          DCB      0x65,0x6f,0x62,0x64
000034  5f637472          DCB      0x5f,0x63,0x74,0x72
000038  6c5f7375          DCB      0x6c,0x5f,0x73,0x75
00003c  6e726f6f          DCB      0x6e,0x72,0x6f,0x6f
000040  6600              DCB      0x66,0x00
                  |symbol_number.50|
000042  656f              DCB      0x65,0x6f
000044  62645f63          DCB      0x62,0x64,0x5f,0x63
000048  74726c5f          DCB      0x74,0x72,0x6c,0x5f
00004c  7472756e          DCB      0x74,0x72,0x75,0x6e
000050  6b00              DCB      0x6b,0x00
                  |symbol_number.51|
000052  656f              DCB      0x65,0x6f
000054  62645f63          DCB      0x62,0x64,0x5f,0x63
000058  74726c5f          DCB      0x74,0x72,0x6c,0x5f
00005c  66696e64          DCB      0x66,0x69,0x6e,0x64
000060  63617200          DCB      0x63,0x61,0x72,0x00
                  |symbol_number.52|
000064  656f6264          DCB      0x65,0x6f,0x62,0x64
000068  5f696e69          DCB      0x5f,0x69,0x6e,0x69
00006c  7400              DCB      0x74,0x00
                  |symbol_number.53|
00006e  656f              DCB      0x65,0x6f
000070  62645f65          DCB      0x62,0x64,0x5f,0x65
000074  78697400          DCB      0x78,0x69,0x74,0x00
                  |symbol_number.54|
000078  656f6264          DCB      0x65,0x6f,0x62,0x64
00007c  5f6b6565          DCB      0x5f,0x6b,0x65,0x65
000080  70616c69          DCB      0x70,0x61,0x6c,0x69
000084  766500            DCB      0x76,0x65,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  eobd_rx_buf
                          %        8
                  eobdSupportItems
000008  00010101          DCB      0x00,0x01,0x01,0x01
00000c  02010300          DCB      0x02,0x01,0x03,0x00
000010  04000500          DCB      0x04,0x00,0x05,0x00
000014  06000701          DCB      0x06,0x00,0x07,0x01
000018  08010901          DCB      0x08,0x01,0x09,0x01
00001c  0a000b00          DCB      0x0a,0x00,0x0b,0x00
000020  0c000d00          DCB      0x0c,0x00,0x0d,0x00
000024  0e000f00          DCB      0x0e,0x00,0x0f,0x00
000028  10001100          DCB      0x10,0x00,0x11,0x00
00002c  12001300          DCB      0x12,0x00,0x13,0x00
000030  14001500          DCB      0x14,0x00,0x15,0x00
000034  16001700          DCB      0x16,0x00,0x17,0x00
000038  18001900          DCB      0x18,0x00,0x19,0x00
00003c  1a001b00          DCB      0x1a,0x00,0x1b,0x00
000040  1c001d00          DCB      0x1c,0x00,0x1d,0x00
000044  1e001f00          DCB      0x1e,0x00,0x1f,0x00
000048  20002100          DCB      0x20,0x00,0x21,0x00
00004c  22002300          DCB      0x22,0x00,0x23,0x00
000050  24002500          DCB      0x24,0x00,0x25,0x00
000054  26002700          DCB      0x26,0x00,0x27,0x00
000058  28002900          DCB      0x28,0x00,0x29,0x00
00005c  2a002b00          DCB      0x2a,0x00,0x2b,0x00
000060  2c002d00          DCB      0x2c,0x00,0x2d,0x00
000064  2e002f00          DCB      0x2e,0x00,0x2f,0x00
000068  30003100          DCB      0x30,0x00,0x31,0x00
00006c  32003300          DCB      0x32,0x00,0x33,0x00
000070  34000000          DCB      0x34,0x00,0x00,0x00
                          DCD      0x00000000
000078  0000              DCB      0x00,0x00
                  eobdStdDs
00007a  0000              DCB      0x00,0x00
00007c  07df              DCW      0x07df
00007e  0802              DCB      0x08,0x02
000080  010c0000          DCB      0x01,0x0c,0x00,0x00
000084  00000000          DCB      0x00,0x00,0x00,0x00
000088  07e8              DCW      0x07e8
00008a  0302              DCB      0x03,0x02
00008c  0100              DCB      0x01,0x00
00008e  07df              DCW      0x07df
000090  0802010d          DCB      0x08,0x02,0x01,0x0d
000094  00000000          DCB      0x00,0x00,0x00,0x00
000098  0000              DCB      0x00,0x00
00009a  07e8              DCW      0x07e8
00009c  03010200          DCB      0x03,0x01,0x02,0x00
0000a0  07df              DCW      0x07df
0000a2  0802              DCB      0x08,0x02
0000a4  01050000          DCB      0x01,0x05,0x00,0x00
0000a8  00000000          DCB      0x00,0x00,0x00,0x00
0000ac  07e8              DCW      0x07e8
0000ae  0301              DCB      0x03,0x01
0000b0  0300              DCB      0x03,0x00
0000b2  07df              DCW      0x07df
0000b4  08020105          DCB      0x08,0x02,0x01,0x05
0000b8  00000000          DCB      0x00,0x00,0x00,0x00
0000bc  0000              DCB      0x00,0x00
0000be  07e8              DCW      0x07e8
0000c0  03010400          DCB      0x03,0x01,0x04,0x00
0000c4  07df              DCW      0x07df
0000c6  0802              DCB      0x08,0x02
0000c8  01050000          DCB      0x01,0x05,0x00,0x00
0000cc  00000000          DCB      0x00,0x00,0x00,0x00
0000d0  07e8              DCW      0x07e8
0000d2  0301              DCB      0x03,0x01
0000d4  0500              DCB      0x05,0x00
0000d6  07df              DCW      0x07df
0000d8  0802010c          DCB      0x08,0x02,0x01,0x0c
0000dc  00000000          DCB      0x00,0x00,0x00,0x00
0000e0  0000              DCB      0x00,0x00
0000e2  07e8              DCW      0x07e8
0000e4  03020600          DCB      0x03,0x02,0x06,0x00
0000e8  07df              DCW      0x07df
0000ea  0802              DCB      0x08,0x02
0000ec  010d0000          DCB      0x01,0x0d,0x00,0x00
0000f0  00000000          DCB      0x00,0x00,0x00,0x00
0000f4  07e8              DCW      0x07e8
0000f6  0301              DCB      0x03,0x01
0000f8  0700              DCB      0x07,0x00
0000fa  07df              DCW      0x07df
0000fc  08020104          DCB      0x08,0x02,0x01,0x04
000100  00000000          DCB      0x00,0x00,0x00,0x00
000104  0000              DCB      0x00,0x00
000106  07e8              DCW      0x07e8
000108  03010800          DCB      0x03,0x01,0x08,0x00
00010c  07df              DCW      0x07df
00010e  0802              DCB      0x08,0x02
000110  01070000          DCB      0x01,0x07,0x00,0x00
000114  00000000          DCB      0x00,0x00,0x00,0x00
000118  07e8              DCW      0x07e8
00011a  0301              DCB      0x03,0x01
00011c  0900              DCB      0x09,0x00
00011e  07df              DCW      0x07df
000120  08020106          DCB      0x08,0x02,0x01,0x06
000124  00000000          DCB      0x00,0x00,0x00,0x00
000128  0000              DCB      0x00,0x00
00012a  07e8              DCW      0x07e8
00012c  03010a00          DCB      0x03,0x01,0x0a,0x00
000130  07df              DCW      0x07df
000132  0802              DCB      0x08,0x02
000134  01050000          DCB      0x01,0x05,0x00,0x00
000138  00000000          DCB      0x00,0x00,0x00,0x00
00013c  07e8              DCW      0x07e8
00013e  0301              DCB      0x03,0x01
000140  0b00              DCB      0x0b,0x00
000142  07df              DCW      0x07df
000144  08020105          DCB      0x08,0x02,0x01,0x05
000148  00000000          DCB      0x00,0x00,0x00,0x00
00014c  0000              DCB      0x00,0x00
00014e  07e8              DCW      0x07e8
000150  03010c00          DCB      0x03,0x01,0x0c,0x00
000154  07df              DCW      0x07df
000156  0802              DCB      0x08,0x02
000158  01050000          DCB      0x01,0x05,0x00,0x00
00015c  00000000          DCB      0x00,0x00,0x00,0x00
000160  07e8              DCW      0x07e8
000162  0301              DCB      0x03,0x01
000164  0d00              DCB      0x0d,0x00
000166  07df              DCW      0x07df
000168  08020105          DCB      0x08,0x02,0x01,0x05
00016c  00000000          DCB      0x00,0x00,0x00,0x00
000170  0000              DCB      0x00,0x00
000172  07e8              DCW      0x07e8
000174  03010e00          DCB      0x03,0x01,0x0e,0x00
000178  07df              DCW      0x07df
00017a  0802              DCB      0x08,0x02
00017c  01050000          DCB      0x01,0x05,0x00,0x00
000180  00000000          DCB      0x00,0x00,0x00,0x00
000184  07e8              DCW      0x07e8
000186  0301              DCB      0x03,0x01
000188  0f00              DCB      0x0f,0x00
00018a  07df              DCW      0x07df
00018c  08020105          DCB      0x08,0x02,0x01,0x05
000190  00000000          DCB      0x00,0x00,0x00,0x00
000194  0000              DCB      0x00,0x00
000196  07e8              DCW      0x07e8
000198  03011000          DCB      0x03,0x01,0x10,0x00
00019c  07df              DCW      0x07df
00019e  0802              DCB      0x08,0x02
0001a0  01050000          DCB      0x01,0x05,0x00,0x00
0001a4  00000000          DCB      0x00,0x00,0x00,0x00
0001a8  07e8              DCW      0x07e8
0001aa  0301              DCB      0x03,0x01
0001ac  1100              DCB      0x11,0x00
0001ae  07df              DCW      0x07df
0001b0  08020105          DCB      0x08,0x02,0x01,0x05
0001b4  00000000          DCB      0x00,0x00,0x00,0x00
0001b8  0000              DCB      0x00,0x00
0001ba  07e8              DCW      0x07e8
0001bc  03011200          DCB      0x03,0x01,0x12,0x00
0001c0  07df              DCW      0x07df
0001c2  0802              DCB      0x08,0x02
0001c4  01050000          DCB      0x01,0x05,0x00,0x00
0001c8  00000000          DCB      0x00,0x00,0x00,0x00
0001cc  07e8              DCW      0x07e8
0001ce  0301              DCB      0x03,0x01
0001d0  1300              DCB      0x13,0x00
0001d2  07df              DCW      0x07df
0001d4  08020105          DCB      0x08,0x02,0x01,0x05
0001d8  00000000          DCB      0x00,0x00,0x00,0x00
0001dc  0000              DCB      0x00,0x00
0001de  07e8              DCW      0x07e8
0001e0  03011400          DCB      0x03,0x01,0x14,0x00
0001e4  07df              DCW      0x07df
0001e6  0802              DCB      0x08,0x02
0001e8  01050000          DCB      0x01,0x05,0x00,0x00
0001ec  00000000          DCB      0x00,0x00,0x00,0x00
0001f0  07e8              DCW      0x07e8
0001f2  0301              DCB      0x03,0x01
0001f4  1500              DCB      0x15,0x00
0001f6  07df              DCW      0x07df
0001f8  08020105          DCB      0x08,0x02,0x01,0x05
0001fc  00000000          DCB      0x00,0x00,0x00,0x00
000200  0000              DCB      0x00,0x00
000202  07e8              DCW      0x07e8
000204  03011600          DCB      0x03,0x01,0x16,0x00
000208  07df              DCW      0x07df
00020a  0802              DCB      0x08,0x02
00020c  01050000          DCB      0x01,0x05,0x00,0x00
000210  00000000          DCB      0x00,0x00,0x00,0x00
000214  07e8              DCW      0x07e8
000216  0301              DCB      0x03,0x01
000218  1700              DCB      0x17,0x00
00021a  07df              DCW      0x07df
00021c  08020105          DCB      0x08,0x02,0x01,0x05
000220  00000000          DCB      0x00,0x00,0x00,0x00
000224  0000              DCB      0x00,0x00
000226  07e8              DCW      0x07e8
000228  03011800          DCB      0x03,0x01,0x18,0x00
00022c  07df              DCW      0x07df
00022e  0802              DCB      0x08,0x02
000230  01050000          DCB      0x01,0x05,0x00,0x00
000234  00000000          DCB      0x00,0x00,0x00,0x00
000238  07e8              DCW      0x07e8
00023a  0301              DCB      0x03,0x01
00023c  1900              DCB      0x19,0x00
00023e  07df              DCW      0x07df
000240  08020105          DCB      0x08,0x02,0x01,0x05
000244  00000000          DCB      0x00,0x00,0x00,0x00
000248  0000              DCB      0x00,0x00
00024a  07e8              DCW      0x07e8
00024c  03011a00          DCB      0x03,0x01,0x1a,0x00
000250  07df              DCW      0x07df
000252  0802              DCB      0x08,0x02
000254  01050000          DCB      0x01,0x05,0x00,0x00
000258  00000000          DCB      0x00,0x00,0x00,0x00
00025c  07e8              DCW      0x07e8
00025e  0301              DCB      0x03,0x01
000260  1b00              DCB      0x1b,0x00
000262  07df              DCW      0x07df
000264  08020105          DCB      0x08,0x02,0x01,0x05
000268  00000000          DCB      0x00,0x00,0x00,0x00
00026c  0000              DCB      0x00,0x00
00026e  07e8              DCW      0x07e8
000270  03011c00          DCB      0x03,0x01,0x1c,0x00
000274  07df              DCW      0x07df
000276  0802              DCB      0x08,0x02
000278  01050000          DCB      0x01,0x05,0x00,0x00
00027c  00000000          DCB      0x00,0x00,0x00,0x00
000280  07e8              DCW      0x07e8
000282  0301              DCB      0x03,0x01
000284  1d00              DCB      0x1d,0x00
000286  07df              DCW      0x07df
000288  08020105          DCB      0x08,0x02,0x01,0x05
00028c  00000000          DCB      0x00,0x00,0x00,0x00
000290  0000              DCB      0x00,0x00
000292  07e8              DCW      0x07e8
000294  03010000          DCB      0x03,0x01,0x00,0x00
                          %        484
                  eobdEngineCmd
                          DCD      0x000007df
                          DCD      0x18db33f1
000484  00000802          DCB      0x00,0x00,0x08,0x02
000488  01000000          DCB      0x01,0x00,0x00,0x00
00048c  00000000          DCB      0x00,0x00,0x00,0x00
