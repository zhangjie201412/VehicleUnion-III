; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\lib_math.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\lib_math.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\lib_math.crf ..\UCOSIII\uC-LIB\lib_math.c]
                          THUMB

                          AREA ||i.Math_Init||, CODE, READONLY, ALIGN=1

                  Math_Init PROC
;;;143    
;;;144    void  Math_Init (void)
000000  2001              MOVS     r0,#1
;;;145    {
;;;146        Math_RandSetSeed((RAND_NBR)RAND_SEED_INIT_VAL);             /* See Note #2.                                         */
000002  f7ffbffe          B.W      Math_RandSetSeed
;;;147    }
;;;148    
                          ENDP


                          AREA ||i.Math_Rand||, CODE, READONLY, ALIGN=2

                  Math_Rand PROC
;;;211    
;;;212    RAND_NBR  Math_Rand (void)
000000  b510              PUSH     {r4,lr}
;;;213    {
;;;214        RAND_NBR  seed;
;;;215        RAND_NBR  rand_nbr;
;;;216        CPU_SR_ALLOC();
;;;217    
;;;218    
;;;219        CPU_CRITICAL_ENTER();
000002  f7fffffe          BL       CPU_SR_Save
;;;220        seed             = Math_RandSeedCur;
000006  4a06              LDR      r2,|L2.32|
000008  4603              MOV      r3,r0                 ;219
;;;221        rand_nbr         = Math_RandSeed(seed);
00000a  6810              LDR      r0,[r2,#0]  ; Math_RandSeedCur
00000c  f7fffffe          BL       Math_RandSeed
000010  4604              MOV      r4,r0
;;;222        Math_RandSeedCur = rand_nbr;
;;;223        CPU_CRITICAL_EXIT();
000012  6010              STR      r0,[r2,#0]  ; Math_RandSeedCur
000014  4618              MOV      r0,r3
000016  f7fffffe          BL       CPU_SR_Restore
;;;224    
;;;225        return (rand_nbr);
00001a  4620              MOV      r0,r4
;;;226    }
00001c  bd10              POP      {r4,pc}
;;;227    
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      ||.data||

                          AREA ||i.Math_RandSeed||, CODE, READONLY, ALIGN=2

                  Math_RandSeed PROC
;;;268    
;;;269    RAND_NBR  Math_RandSeed (RAND_NBR  seed)
000000  4903              LDR      r1,|L3.16|
;;;270    {
;;;271        RAND_NBR  rand_nbr;
;;;272    
;;;273    
;;;274        rand_nbr = (((RAND_NBR)RAND_LCG_PARAM_A * seed) + (RAND_NBR)RAND_LCG_PARAM_B)  %  ((RAND_NBR)RAND_LCG_PARAM_M + 1u);
000002  4348              MULS     r0,r1,r0
000004  f2430139          MOV      r1,#0x3039
000008  4408              ADD      r0,r0,r1
00000a  f0204000          BIC      r0,r0,#0x80000000
;;;275    
;;;276        return (rand_nbr);
;;;277    }
00000e  4770              BX       lr
;;;278    
                          ENDP

                  |L3.16|
                          DCD      0x41c64e6d

                          AREA ||i.Math_RandSetSeed||, CODE, READONLY, ALIGN=2

                  Math_RandSetSeed PROC
;;;171    
;;;172    void  Math_RandSetSeed (RAND_NBR  seed)
000000  b510              PUSH     {r4,lr}
;;;173    {
000002  4604              MOV      r4,r0
;;;174        CPU_SR_ALLOC();
;;;175    
;;;176    
;;;177        CPU_CRITICAL_ENTER();
000004  f7fffffe          BL       CPU_SR_Save
;;;178        Math_RandSeedCur = seed;
000008  4902              LDR      r1,|L4.20|
;;;179        CPU_CRITICAL_EXIT();
00000a  600c              STR      r4,[r1,#0]  ; Math_RandSeedCur
00000c  e8bd4010          POP      {r4,lr}
000010  f7ffbffe          B.W      CPU_SR_Restore
;;;180    }
;;;181    
                          ENDP

                  |L4.20|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  Math_RandSeedCur
                          DCD      0x00000000
