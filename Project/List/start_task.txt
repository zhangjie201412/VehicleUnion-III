; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\start_task.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\start_task.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\start_task.crf ..\UCOSIII-Task\start_task.c]
                          THUMB

                          AREA ||i.start_task||, CODE, READONLY, ALIGN=2

                  start_task PROC
;;;19     //开始任务函数
;;;20     void start_task(void *p_arg)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;21     {
000004  b08a              SUB      sp,sp,#0x28
;;;22         OS_ERR err;
;;;23         CPU_SR_ALLOC();
;;;24         p_arg = p_arg;
;;;25     
;;;26         CPU_Init();
000006  f7fffffe          BL       CPU_Init
;;;27     #if OS_CFG_STAT_TASK_EN > 0u
;;;28         OSStatTaskCPUUsageInit(&err);  	//统计任务
00000a  a809              ADD      r0,sp,#0x24
00000c  f7fffffe          BL       OSStatTaskCPUUsageInit
;;;29     #endif
;;;30     
;;;31     #ifdef CPU_CFG_INT_DIS_MEAS_EN		//如果使能了测量中断关闭时间
;;;32         CPU_IntDisMeasMaxCurReset();
;;;33     #endif
;;;34     
;;;35     #if	OS_CFG_SCHED_ROUND_ROBIN_EN  //当使用时间片轮转的时候
;;;36         //使能时间片轮转调度功能,时间片长度为1个系统时钟节拍，既1*5=5ms
;;;37         OSSchedRoundRobinCfg(DEF_ENABLED,1,&err);
000010  2101              MOVS     r1,#1
000012  aa09              ADD      r2,sp,#0x24
000014  4608              MOV      r0,r1
000016  f7fffffe          BL       OSSchedRoundRobinCfg
;;;38     #endif
;;;39     
;;;40         OS_CRITICAL_ENTER();	//进入临界区
00001a  f7fffffe          BL       CPU_SR_Save
00001e  4d2e              LDR      r5,|L1.216|
000020  7829              LDRB     r1,[r5,#0]  ; OSSchedLockNestingCtr
000022  1c49              ADDS     r1,r1,#1
000024  7029              STRB     r1,[r5,#0]
000026  f7fffffe          BL       CPU_SR_Restore
;;;41     #if 1
;;;42         OSTaskCreate((OS_TCB 	* )&Led0TaskTCB,		
00002a  2400              MOVS     r4,#0
00002c  2703              MOVS     r7,#3
00002e  e9cd4706          STRD     r4,r7,[sp,#0x18]
000032  ae09              ADD      r6,sp,#0x24
000034  f44f7000          MOV      r0,#0x200
000038  2133              MOVS     r1,#0x33
00003a  9608              STR      r6,[sp,#0x20]
00003c  e9cd1002          STRD     r1,r0,[sp,#8]
000040  4a26              LDR      r2,|L1.220|
000042  9405              STR      r4,[sp,#0x14]
000044  2005              MOVS     r0,#5
000046  e9cd0200          STRD     r0,r2,[sp,#0]
00004a  9404              STR      r4,[sp,#0x10]
00004c  4623              MOV      r3,r4
00004e  4a24              LDR      r2,|L1.224|
000050  a124              ADR      r1,|L1.228|
000052  4827              LDR      r0,|L1.240|
000054  f7fffffe          BL       OSTaskCreate
;;;43                 (CPU_CHAR	* )"led0 task", 		
;;;44                 (OS_TASK_PTR )led0_task, 			
;;;45                 (void		* )0,					
;;;46                 (OS_PRIO	  )LED0_TASK_PRIO,     
;;;47                 (CPU_STK   * )&LED0_TASK_STK[0],	
;;;48                 (CPU_STK_SIZE)LED0_STK_SIZE/10,	
;;;49                 (CPU_STK_SIZE)LED0_STK_SIZE,		
;;;50                 (OS_MSG_QTY  )0,					
;;;51                 (OS_TICK	  )0,					
;;;52                 (void   	* )0,					
;;;53                 (OS_OPT      )OS_OPT_TASK_STK_CHK|OS_OPT_TASK_STK_CLR,
;;;54                 (OS_ERR 	* )&err);				
;;;55     #endif
;;;56         OSTaskCreate((OS_TCB 	* )&ImmoTaskTCB,		
000058  e9cd4706          STRD     r4,r7,[sp,#0x18]
00005c  9405              STR      r4,[sp,#0x14]
00005e  f04f080c          MOV      r8,#0xc
000062  2119              MOVS     r1,#0x19
000064  4a23              LDR      r2,|L1.244|
000066  9608              STR      r6,[sp,#0x20]
000068  f8cd8000          STR      r8,[sp,#0]
00006c  e9cd2101          STRD     r2,r1,[sp,#4]
000070  f44f7080          MOV      r0,#0x100
000074  e9cd0403          STRD     r0,r4,[sp,#0xc]
000078  2300              MOVS     r3,#0
00007a  4a1f              LDR      r2,|L1.248|
00007c  a11f              ADR      r1,|L1.252|
00007e  4822              LDR      r0,|L1.264|
000080  f7fffffe          BL       OSTaskCreate
;;;57                 (CPU_CHAR	* )"immo task", 		
;;;58                 (OS_TASK_PTR )immo_task, 			
;;;59                 (void		* )0,					
;;;60                 (OS_PRIO	  )IMMO_TASK_PRIO,     
;;;61                 (CPU_STK   * )&IMMO_TASK_STK[0],	
;;;62                 (CPU_STK_SIZE)IMMO_STK_SIZE/10,	
;;;63                 (CPU_STK_SIZE)IMMO_STK_SIZE,		
;;;64                 (OS_MSG_QTY  )0,					
;;;65                 (OS_TICK	  )0,					
;;;66                 (void   	* )0,					
;;;67                 (OS_OPT      )OS_OPT_TASK_STK_CHK|OS_OPT_TASK_STK_CLR,
;;;68                 (OS_ERR 	* )&err);				
;;;69         //watchdog thread
;;;70         OSTaskCreate((OS_TCB 	* )&WdgTaskTCB,		
000084  e9cd4706          STRD     r4,r7,[sp,#0x18]
000088  4a20              LDR      r2,|L1.268|
00008a  9608              STR      r6,[sp,#0x20]
00008c  9405              STR      r4,[sp,#0x14]
00008e  2027              MOVS     r0,#0x27
000090  e88d0105          STM      sp,{r0,r2,r8}
000094  2180              MOVS     r1,#0x80
000096  e9cd1403          STRD     r1,r4,[sp,#0xc]
00009a  2300              MOVS     r3,#0
00009c  4a1c              LDR      r2,|L1.272|
00009e  a11d              ADR      r1,|L1.276|
0000a0  481f              LDR      r0,|L1.288|
0000a2  f7fffffe          BL       OSTaskCreate
;;;71                 (CPU_CHAR	* )"wdg task", 		
;;;72                 (OS_TASK_PTR )wdg_task,	
;;;73                 (void		* )0,					
;;;74                 (OS_PRIO	  )WDG_TASK_PRIO,     
;;;75                 (CPU_STK   * )&WDG_TASK_STK[0],	
;;;76                 (CPU_STK_SIZE)WDG_STK_SIZE/10,	
;;;77                 (CPU_STK_SIZE)WDG_STK_SIZE,		
;;;78                 (OS_MSG_QTY  )0,					
;;;79                 (OS_TICK	  )0,					
;;;80                 (void   	* )0,					
;;;81                 (OS_OPT      )OS_OPT_TASK_STK_CHK|OS_OPT_TASK_STK_CLR,
;;;82                 (OS_ERR 	* )&err);				
;;;83         OS_TaskSuspend((OS_TCB*)&StartTaskTCB,&err);		//挂起开始任务			
0000a6  a909              ADD      r1,sp,#0x24
0000a8  481e              LDR      r0,|L1.292|
0000aa  f7fffffe          BL       OS_TaskSuspend
;;;84     
;;;85         OS_CRITICAL_EXIT();	//进入临界区
0000ae  f7fffffe          BL       CPU_SR_Save
0000b2  7829              LDRB     r1,[r5,#0]  ; OSSchedLockNestingCtr
0000b4  1e49              SUBS     r1,r1,#1
0000b6  f01101ff          ANDS     r1,r1,#0xff
0000ba  7029              STRB     r1,[r5,#0]
0000bc  d109              BNE      |L1.210|
0000be  491a              LDR      r1,|L1.296|
0000c0  8809              LDRH     r1,[r1,#0]  ; OSIntQNbrEntries
0000c2  b131              CBZ      r1,|L1.210|
0000c4  f7fffffe          BL       CPU_SR_Restore
0000c8  f7fffffe          BL       OS_Sched0
                  |L1.204|
;;;86     }
0000cc  b00a              ADD      sp,sp,#0x28
0000ce  e8bd81f0          POP      {r4-r8,pc}
                  |L1.210|
0000d2  f7fffffe          BL       CPU_SR_Restore
0000d6  e7f9              B        |L1.204|
                          ENDP

                  |L1.216|
                          DCD      OSSchedLockNestingCtr
                  |L1.220|
                          DCD      LED0_TASK_STK
                  |L1.224|
                          DCD      led0_task
                  |L1.228|
0000e4  6c656430          DCB      "led0 task",0
0000e8  20746173
0000ec  6b00    
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L1.240|
                          DCD      Led0TaskTCB
                  |L1.244|
                          DCD      IMMO_TASK_STK
                  |L1.248|
                          DCD      immo_task
                  |L1.252|
0000fc  696d6d6f          DCB      "immo task",0
000100  20746173
000104  6b00    
000106  00                DCB      0
000107  00                DCB      0
                  |L1.264|
                          DCD      ImmoTaskTCB
                  |L1.268|
                          DCD      WDG_TASK_STK
                  |L1.272|
                          DCD      wdg_task
                  |L1.276|
000114  77646720          DCB      "wdg task",0
000118  7461736b
00011c  00      
00011d  00                DCB      0
00011e  00                DCB      0
00011f  00                DCB      0
                  |L1.288|
                          DCD      WdgTaskTCB
                  |L1.292|
                          DCD      ||.bss||
                  |L1.296|
                          DCD      OSIntQNbrEntries

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  StartTaskTCB
                          %        196

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.bss||
                  START_TASK_STK
                          %        2048
