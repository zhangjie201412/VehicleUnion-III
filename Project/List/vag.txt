; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\OBJ\vag.o --asm_dir=.\List\ --list_dir=.\List\ --depend=..\OBJ\vag.d --cpu=Cortex-M3 --apcs=interwork -O3 -I..\BSP -I..\CORE -I..\STM32F10x_FWLib\inc -I..\USER -I..\UCOSIII\uC-CPU -I..\UCOSIII\uC-CPU\ARM-Cortex-M3\RealView -I..\UCOSIII\uC-LIB -I..\UCOSIII\uC-LIB\Ports\ARM-Cortex-M3\RealView -I..\UCOSIII\uCOS-III -I..\UCOSIII\uCOS-III\Ports -I..\UCOSIII\uCOS-III\Ports\ARM-Cortex-M3\Generic\RealView -I..\UCOSIII\uCOS-III\Source -I..\UCOSIII\UCOS_BSP -I..\UCOSIII\uCOS_CONFIG -I..\UCOSIII-Task -I..\SYSTEM -I..\BSP\inc -I..\PAL -I..\PAL\vehicles -ID:\Keil_v4\ARM\RV31\INC -ID:\Keil_v4\ARM\CMSIS\Include -ID:\Keil_v4\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\vag.crf ..\PAL\vehicles\vag.c]
                          THUMB

                          AREA ||i.vag_check_fault_code||, CODE, READONLY, ALIGN=1

                  vag_check_fault_code PROC
;;;716    
;;;717    uint32_t *vag_check_fault_code(uint8_t id, uint8_t *len)
000000  2000              MOVS     r0,#0
;;;718    {
;;;719        return NULL;
;;;720    }
000002  4770              BX       lr
;;;721    
                          ENDP


                          AREA ||i.vag_clear_fault_code||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  vag_clear_fault_code PROC
;;;721    
;;;722    void vag_clear_fault_code(void)
000000  b508              PUSH     {r3,lr}
;;;723    {
;;;724        logi("%s", __func__);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       OSTimeGet
000008  4908              LDR      r1,|L2.44|
00000a  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000c  0789              LSLS     r1,r1,#30
00000e  d50c              BPL      |L2.42|
000010  f2413288          MOV      r2,#0x1388
000014  fbb0f1f2          UDIV     r1,r0,r2
000018  fb020011          MLS      r0,r2,r1,r0
00001c  2205              MOVS     r2,#5
00001e  fbb0f2f2          UDIV     r2,r0,r2
000022  4b03              LDR      r3,|L2.48|
000024  a003              ADR      r0,|L2.52|
000026  f7fffffe          BL       __2printf
                  |L2.42|
;;;725    }
00002a  bd08              POP      {r3,pc}
                          ENDP

                  |L2.44|
                          DCD      DEBUG_MODE
                  |L2.48|
                          DCD      ||.constdata||+0x5e
                  |L2.52|
000034  5b253035          DCB      "[%05d.%03d/I]: %s\r\n",0
000038  642e2530
00003c  33642f49
000040  5d3a2025
000044  730d0a00

                          AREA ||i.vag_ctrl_door||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  vag_ctrl_door PROC
;;;594    
;;;595    void vag_ctrl_door(uint8_t state)
000000  b57c              PUSH     {r2-r6,lr}
;;;596    {
000002  4604              MOV      r4,r0
;;;597        uint8_t i;
;;;598    
;;;599        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4915              LDR      r1,|L3.96|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L3.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b0f              LDR      r3,|L3.100|
000026  a010              ADR      r0,|L3.104|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L3.46|
;;;600        if(state == 1) {
00002e  2c01              CMP      r4,#1
000030  d010              BEQ      |L3.84|
;;;601            flexcan_send_frame(&vag_door_on);
;;;602        } else {
;;;603            for(i = 0; i < 2; i++) {
;;;604                flexcan_send_frame(&vag_door_off[i]);
000032  4d15              LDR      r5,|L3.136|
000034  2400              MOVS     r4,#0                 ;603
000036  bf00              NOP      
                  |L3.56|
000038  eb040084          ADD      r0,r4,r4,LSL #2
00003c  eb050080          ADD      r0,r5,r0,LSL #2
000040  f7fffffe          BL       flexcan_send_frame
;;;605                xdelay_ms(100);
000044  2064              MOVS     r0,#0x64
000046  f7fffffe          BL       xdelay_ms
00004a  1c64              ADDS     r4,r4,#1              ;603
00004c  b2e4              UXTB     r4,r4                 ;603
00004e  2c02              CMP      r4,#2                 ;603
000050  d3f2              BCC      |L3.56|
;;;606            }
;;;607        }
;;;608    }
000052  bd7c              POP      {r2-r6,pc}
                  |L3.84|
000054  e8bd407c          POP      {r2-r6,lr}            ;601
000058  480b              LDR      r0,|L3.136|
00005a  3028              ADDS     r0,r0,#0x28           ;601
00005c  f7ffbffe          B.W      flexcan_send_frame
;;;609    
                          ENDP

                  |L3.96|
                          DCD      DEBUG_MODE
                  |L3.100|
                          DCD      ||.constdata||+0x10
                  |L3.104|
000068  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
00006c  642e2530
000070  33642f49
000074  5d3a2025
000078  733a2073
00007c  74617465
000080  203d2025
000084  640d0a00
                  |L3.136|
                          DCD      ||.data||+0x7c

                          AREA ||i.vag_ctrl_findcar||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  vag_ctrl_findcar PROC
;;;640    
;;;641    void vag_ctrl_findcar(uint8_t state)
000000  b57c              PUSH     {r2-r6,lr}
;;;642    {
000002  4604              MOV      r4,r0
;;;643        uint8_t i;
;;;644    
;;;645        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  491a              LDR      r1,|L4.116|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L4.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b14              LDR      r3,|L4.120|
000026  a015              ADR      r0,|L4.124|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L4.46|
;;;646        if(state == 1) {
00002e  2c01              CMP      r4,#1
000030  d11f              BNE      |L4.114|
;;;647            for(i = 0; i < 2; i++) {
;;;648                flexcan_send_frame(&vag_alarm_on[i]);
000032  4d1a              LDR      r5,|L4.156|
000034  2400              MOVS     r4,#0                 ;647
000036  bf00              NOP      
                  |L4.56|
000038  eb040084          ADD      r0,r4,r4,LSL #2
00003c  eb050080          ADD      r0,r5,r0,LSL #2
000040  f7fffffe          BL       flexcan_send_frame
;;;649                xdelay_ms(100);
000044  2064              MOVS     r0,#0x64
000046  f7fffffe          BL       xdelay_ms
00004a  1c64              ADDS     r4,r4,#1              ;647
00004c  b2e4              UXTB     r4,r4                 ;647
00004e  2c02              CMP      r4,#2                 ;647
000050  d3f2              BCC      |L4.56|
;;;650            } 
;;;651            for(i = 0; i < 2; i++) {
;;;652                flexcan_send_frame(&vag_flashlight_on[i]);
000052  4d12              LDR      r5,|L4.156|
000054  2400              MOVS     r4,#0                 ;651
000056  3528              ADDS     r5,r5,#0x28
                  |L4.88|
000058  eb040084          ADD      r0,r4,r4,LSL #2
00005c  eb050080          ADD      r0,r5,r0,LSL #2
000060  f7fffffe          BL       flexcan_send_frame
;;;653                xdelay_ms(100);
000064  2064              MOVS     r0,#0x64
000066  f7fffffe          BL       xdelay_ms
00006a  1c64              ADDS     r4,r4,#1              ;651
00006c  b2e4              UXTB     r4,r4                 ;651
00006e  2c02              CMP      r4,#2                 ;651
000070  d3f2              BCC      |L4.88|
                  |L4.114|
;;;654            } 
;;;655        }
;;;656    }
000072  bd7c              POP      {r2-r6,pc}
;;;657    
                          ENDP

                  |L4.116|
                          DCD      DEBUG_MODE
                  |L4.120|
                          DCD      ||.constdata||+0x4d
                  |L4.124|
00007c  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
000080  642e2530
000084  33642f49
000088  5d3a2025
00008c  733a2073
000090  74617465
000094  203d2025
000098  640d0a00
                  |L4.156|
                          DCD      ||.data||+0x180

                          AREA ||i.vag_ctrl_light||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  vag_ctrl_light PROC
;;;609    
;;;610    void vag_ctrl_light(uint8_t state)
000000  b51c              PUSH     {r2-r4,lr}
;;;611    {
000002  4604              MOV      r4,r0
;;;612        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4909              LDR      r1,|L5.48|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L5.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b03              LDR      r3,|L5.52|
000026  a004              ADR      r0,|L5.56|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L5.46|
;;;613    }
00002e  bd1c              POP      {r2-r4,pc}
;;;614    
                          ENDP

                  |L5.48|
                          DCD      DEBUG_MODE
                  |L5.52|
                          DCD      ||.constdata||+0x1e
                  |L5.56|
000038  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
00003c  642e2530
000040  33642f49
000044  5d3a2025
000048  733a2073
00004c  74617465
000050  203d2025
000054  640d0a00

                          AREA ||i.vag_ctrl_sunroof||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  vag_ctrl_sunroof PROC
;;;614    
;;;615    void vag_ctrl_sunroof(uint8_t state)
000000  b57c              PUSH     {r2-r6,lr}
;;;616    {
000002  4604              MOV      r4,r0
;;;617        uint8_t i;
;;;618    
;;;619        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4912              LDR      r1,|L6.84|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L6.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b0c              LDR      r3,|L6.88|
000026  a00d              ADR      r0,|L6.92|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L6.46|
;;;620        if(state == 1) {
00002e  2c01              CMP      r4,#1
000030  d10f              BNE      |L6.82|
;;;621            for(i = 0; i < 2; i++) {
;;;622                flexcan_send_frame(&vag_sunroof_on[i]);
000032  4d12              LDR      r5,|L6.124|
000034  2400              MOVS     r4,#0                 ;621
000036  bf00              NOP      
                  |L6.56|
000038  eb040084          ADD      r0,r4,r4,LSL #2
00003c  eb050080          ADD      r0,r5,r0,LSL #2
000040  f7fffffe          BL       flexcan_send_frame
;;;623                xdelay_ms(100);
000044  2064              MOVS     r0,#0x64
000046  f7fffffe          BL       xdelay_ms
00004a  1c64              ADDS     r4,r4,#1              ;621
00004c  b2e4              UXTB     r4,r4                 ;621
00004e  2c02              CMP      r4,#2                 ;621
000050  d3f2              BCC      |L6.56|
                  |L6.82|
;;;624            } 
;;;625        }
;;;626    }
000052  bd7c              POP      {r2-r6,pc}
;;;627    
                          ENDP

                  |L6.84|
                          DCD      DEBUG_MODE
                  |L6.88|
                          DCD      ||.constdata||+0x2d
                  |L6.92|
00005c  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
000060  642e2530
000064  33642f49
000068  5d3a2025
00006c  733a2073
000070  74617465
000074  203d2025
000078  640d0a00
                  |L6.124|
                          DCD      ||.data||+0x1d0

                          AREA ||i.vag_ctrl_trunk||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  vag_ctrl_trunk PROC
;;;627    
;;;628    void vag_ctrl_trunk(uint8_t state)
000000  b57c              PUSH     {r2-r6,lr}
;;;629    {
000002  4604              MOV      r4,r0
;;;630        uint8_t i;
;;;631    
;;;632        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  4912              LDR      r1,|L7.84|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L7.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b0c              LDR      r3,|L7.88|
000026  a00d              ADR      r0,|L7.92|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L7.46|
;;;633        if(state == 1) {
00002e  2c01              CMP      r4,#1
000030  d10f              BNE      |L7.82|
;;;634            for(i = 0; i < 2; i++) {
;;;635                flexcan_send_frame(&vag_trunk_on[i]);
000032  4d12              LDR      r5,|L7.124|
000034  2400              MOVS     r4,#0                 ;634
000036  bf00              NOP      
                  |L7.56|
000038  eb040084          ADD      r0,r4,r4,LSL #2
00003c  eb050080          ADD      r0,r5,r0,LSL #2
000040  f7fffffe          BL       flexcan_send_frame
;;;636                xdelay_ms(100);
000044  2064              MOVS     r0,#0x64
000046  f7fffffe          BL       xdelay_ms
00004a  1c64              ADDS     r4,r4,#1              ;634
00004c  b2e4              UXTB     r4,r4                 ;634
00004e  2c02              CMP      r4,#2                 ;634
000050  d3f2              BCC      |L7.56|
                  |L7.82|
;;;637            } 
;;;638        }
;;;639    }
000052  bd7c              POP      {r2-r6,pc}
;;;640    
                          ENDP

                  |L7.84|
                          DCD      DEBUG_MODE
                  |L7.88|
                          DCD      ||.constdata||+0x3e
                  |L7.92|
00005c  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
000060  642e2530
000064  33642f49
000068  5d3a2025
00006c  733a2073
000070  74617465
000074  203d2025
000078  640d0a00
                  |L7.124|
                          DCD      ||.data||+0x158

                          AREA ||i.vag_ctrl_window||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  vag_ctrl_window PROC
;;;568    
;;;569    void vag_ctrl_window(uint8_t state)
000000  b57c              PUSH     {r2-r6,lr}
;;;570    {
000002  4604              MOV      r4,r0
;;;571        uint8_t i;
;;;572    
;;;573        logi("%s: state = %d", __func__, state);
000004  a801              ADD      r0,sp,#4
000006  f7fffffe          BL       OSTimeGet
00000a  492a              LDR      r1,|L8.180|
00000c  7809              LDRB     r1,[r1,#0]  ; DEBUG_MODE
00000e  0789              LSLS     r1,r1,#30
000010  d50d              BPL      |L8.46|
000012  f2413288          MOV      r2,#0x1388
000016  fbb0f1f2          UDIV     r1,r0,r2
00001a  fb020011          MLS      r0,r2,r1,r0
00001e  2205              MOVS     r2,#5
000020  fbb0f2f2          UDIV     r2,r0,r2
000024  4b24              LDR      r3,|L8.184|
000026  a025              ADR      r0,|L8.188|
000028  9400              STR      r4,[sp,#0]
00002a  f7fffffe          BL       __2printf
                  |L8.46|
;;;574        if(state == 1){
00002e  2c01              CMP      r4,#1
;;;575            for(i = 0; i < 2; i++) {
;;;576                flexcan_send_frame(&vag_window_on_fore[i]);
;;;577                xdelay_ms(100);
;;;578            }
;;;579            for(i = 0; i < 2; i++) {
;;;580                flexcan_send_frame(&vag_window_on_back[i]);
;;;581                xdelay_ms(100);
;;;582            }
;;;583        } else {
;;;584            for(i = 0; i < 2; i++) {
000030  f04f0400          MOV      r4,#0
000034  d01e              BEQ      |L8.116|
;;;585                flexcan_send_frame(&vag_window_off_fore[i]);
000036  4d29              LDR      r5,|L8.220|
                  |L8.56|
000038  eb040084          ADD      r0,r4,r4,LSL #2
00003c  eb050080          ADD      r0,r5,r0,LSL #2
000040  f7fffffe          BL       flexcan_send_frame
;;;586                xdelay_ms(100);
000044  2064              MOVS     r0,#0x64
000046  f7fffffe          BL       xdelay_ms
00004a  1c64              ADDS     r4,r4,#1              ;584
00004c  b2e4              UXTB     r4,r4                 ;584
00004e  2c02              CMP      r4,#2                 ;584
000050  d3f2              BCC      |L8.56|
;;;587            }
;;;588            for(i = 0; i < 2; i++) {
;;;589                flexcan_send_frame(&vag_window_off_back[i]);
000052  4d22              LDR      r5,|L8.220|
000054  2400              MOVS     r4,#0                 ;588
000056  3528              ADDS     r5,r5,#0x28
                  |L8.88|
000058  eb040084          ADD      r0,r4,r4,LSL #2
00005c  eb050080          ADD      r0,r5,r0,LSL #2
000060  f7fffffe          BL       flexcan_send_frame
;;;590                xdelay_ms(100);
000064  2064              MOVS     r0,#0x64
000066  f7fffffe          BL       xdelay_ms
00006a  1c64              ADDS     r4,r4,#1              ;588
00006c  b2e4              UXTB     r4,r4                 ;588
00006e  2c02              CMP      r4,#2                 ;588
000070  d3f2              BCC      |L8.88|
;;;591            }
;;;592        }
;;;593    }
000072  bd7c              POP      {r2-r6,pc}
                  |L8.116|
000074  4d19              LDR      r5,|L8.220|
000076  3d50              SUBS     r5,r5,#0x50           ;576
                  |L8.120|
000078  eb040084          ADD      r0,r4,r4,LSL #2       ;576
00007c  eb050080          ADD      r0,r5,r0,LSL #2       ;576
000080  f7fffffe          BL       flexcan_send_frame
000084  2064              MOVS     r0,#0x64              ;577
000086  f7fffffe          BL       xdelay_ms
00008a  1c64              ADDS     r4,r4,#1              ;575
00008c  b2e4              UXTB     r4,r4                 ;575
00008e  2c02              CMP      r4,#2                 ;575
000090  d3f2              BCC      |L8.120|
000092  4d12              LDR      r5,|L8.220|
000094  2400              MOVS     r4,#0                 ;579
000096  3d28              SUBS     r5,r5,#0x28           ;580
                  |L8.152|
000098  eb040084          ADD      r0,r4,r4,LSL #2       ;580
00009c  eb050080          ADD      r0,r5,r0,LSL #2       ;580
0000a0  f7fffffe          BL       flexcan_send_frame
0000a4  2064              MOVS     r0,#0x64              ;581
0000a6  f7fffffe          BL       xdelay_ms
0000aa  1c64              ADDS     r4,r4,#1              ;579
0000ac  b2e4              UXTB     r4,r4                 ;579
0000ae  2c02              CMP      r4,#2                 ;579
0000b0  d3f2              BCC      |L8.152|
0000b2  bd7c              POP      {r2-r6,pc}
;;;594    
                          ENDP

                  |L8.180|
                          DCD      DEBUG_MODE
                  |L8.184|
                          DCD      ||.constdata||
                  |L8.188|
0000bc  5b253035          DCB      "[%05d.%03d/I]: %s: state = %d\r\n",0
0000c0  642e2530
0000c4  33642f49
0000c8  5d3a2025
0000cc  733a2073
0000d0  74617465
0000d4  203d2025
0000d8  640d0a00
                  |L8.220|
                          DCD      ||.data||+0x108

                          AREA ||i.vag_data_stream||, CODE, READONLY, ALIGN=2

                  vag_data_stream PROC
;;;680    
;;;681    uint8_t* vag_data_stream(uint8_t pid, uint8_t *len)
000000  b5f0              PUSH     {r4-r7,lr}
;;;682    {
000002  4605              MOV      r5,r0
;;;683        int8_t ret, i;
;;;684        uint8_t valid_len;
;;;685        uint8_t offset;
;;;686    
;;;687        CanTxMsg txMsg;
;;;688        CanRxMsg *rxMsg;
;;;689    
;;;690        if(vagSupportItems[pid].support != SUPPORTED) {
000004  4821              LDR      r0,|L9.140|
000006  b085              SUB      sp,sp,#0x14           ;682
000008  eb000045          ADD      r0,r0,r5,LSL #1
00000c  460c              MOV      r4,r1                 ;682
00000e  7840              LDRB     r0,[r0,#1]
000010  2801              CMP      r0,#1
000012  d002              BEQ      |L9.26|
;;;691            *len = UNSUPPORTED_LEN;
000014  20ff              MOVS     r0,#0xff
000016  7008              STRB     r0,[r1,#0]
;;;692            return NULL;
000018  e036              B        |L9.136|
                  |L9.26|
;;;693        }
;;;694    
;;;695        xdelay(2);
00001a  2002              MOVS     r0,#2
00001c  f7fffffe          BL       xdelay
;;;696        valid_len = vagStdDs[pid].valid_len;
000020  481b              LDR      r0,|L9.144|
000022  eb0501c5          ADD      r1,r5,r5,LSL #3
000026  eb000141          ADD      r1,r0,r1,LSL #1
00002a  466a              MOV      r2,sp                 ;687
00002c  7c4d              LDRB     r5,[r1,#0x11]
;;;697        offset = vagStdDs[pid].offset;
00002e  7c0e              LDRB     r6,[r1,#0x10]
;;;698        txMsg.StdId = vagStdDs[pid].txId;
000030  8848              LDRH     r0,[r1,#2]
;;;699        txMsg.IDE = CAN_ID_STD;
000032  9000              STR      r0,[sp,#0]
000034  2000              MOVS     r0,#0
000036  f88d0008          STRB     r0,[sp,#8]
;;;700        txMsg.DLC = vagStdDs[pid].len;
00003a  7908              LDRB     r0,[r1,#4]
00003c  f88d000a          STRB     r0,[sp,#0xa]
;;;701        for(i = 0; i < txMsg.DLC; i++) {
000040  2000              MOVS     r0,#0
000042  e005              B        |L9.80|
                  |L9.68|
;;;702            txMsg.Data[i] = vagStdDs[pid].data[i];
000044  180b              ADDS     r3,r1,r0
000046  1817              ADDS     r7,r2,r0
000048  795b              LDRB     r3,[r3,#5]
00004a  1c40              ADDS     r0,r0,#1              ;701
00004c  72fb              STRB     r3,[r7,#0xb]
00004e  b240              SXTB     r0,r0                 ;701
                  |L9.80|
000050  f89d300a          LDRB     r3,[sp,#0xa]          ;701
000054  4283              CMP      r3,r0                 ;701
000056  dcf5              BGT      |L9.68|
;;;703        }
;;;704        ret = flexcan_ioctl(DIR_BI, &txMsg, vagStdDs[pid].rxId, 1);
000058  89ca              LDRH     r2,[r1,#0xe]
00005a  2301              MOVS     r3,#1
00005c  4669              MOV      r1,sp
00005e  2003              MOVS     r0,#3
000060  f7fffffe          BL       flexcan_ioctl
;;;705        if(ret > 0) {
000064  2800              CMP      r0,#0
000066  dd0f              BLE      |L9.136|
;;;706            rxMsg = flexcan_dump();
000068  f7fffffe          BL       flexcan_dump
;;;707            for(i = 0; i < 8; i++) {
;;;708                vag_rx_buf[i] = rxMsg->Data[i];
00006c  4a07              LDR      r2,|L9.140|
00006e  2100              MOVS     r1,#0                 ;707
000070  3a08              SUBS     r2,r2,#8
                  |L9.114|
000072  1843              ADDS     r3,r0,r1
000074  7adb              LDRB     r3,[r3,#0xb]
000076  5453              STRB     r3,[r2,r1]
000078  1c49              ADDS     r1,r1,#1              ;707
00007a  b249              SXTB     r1,r1                 ;707
00007c  2908              CMP      r1,#8                 ;707
00007e  dbf8              BLT      |L9.114|
;;;709            }
;;;710            *len = valid_len;
000080  7025              STRB     r5,[r4,#0]
;;;711            return vag_rx_buf + offset;
000082  1990              ADDS     r0,r2,r6
                  |L9.132|
;;;712        } else {
;;;713            return NULL;
;;;714        }
;;;715    }
000084  b005              ADD      sp,sp,#0x14
000086  bdf0              POP      {r4-r7,pc}
                  |L9.136|
000088  2000              MOVS     r0,#0                 ;713
00008a  e7fb              B        |L9.132|
;;;716    
                          ENDP

                  |L9.140|
                          DCD      ||.data||+0x8
                  |L9.144|
                          DCD      ||.data||+0x1f8

                          AREA ||i.vag_engine_on||, CODE, READONLY, ALIGN=2

                  vag_engine_on PROC
;;;657    
;;;658    bool vag_engine_on(void)
000000  b510              PUSH     {r4,lr}
;;;659    {
;;;660        CanRxMsg *rxMsg;
;;;661        int8_t ret = -1;
;;;662        bool on = FALSE;
000002  2400              MOVS     r4,#0
;;;663    
;;;664        ret = flexcan_ioctl(DIR_BI, &vagEngineCmd,
000004  2301              MOVS     r3,#1
000006  f44f62fd          MOV      r2,#0x7e8
00000a  4906              LDR      r1,|L10.36|
00000c  2003              MOVS     r0,#3
00000e  f7fffffe          BL       flexcan_ioctl
;;;665                0x7e8, 1);
;;;666        if(ret > 0) {
000012  2800              CMP      r0,#0
000014  dd03              BLE      |L10.30|
;;;667            rxMsg = flexcan_dump();
000016  f7fffffe          BL       flexcan_dump
;;;668            //check if the receive msg type is needed
;;;669            //TODO: ???
;;;670            if(rxMsg == NULL) {
00001a  b100              CBZ      r0,|L10.30|
;;;671                on = FALSE;
;;;672            } else {
;;;673                on = TRUE;
00001c  2401              MOVS     r4,#1
                  |L10.30|
;;;674            }
;;;675        } else {
;;;676            on = FALSE;
;;;677        }
;;;678        return on;
00001e  4620              MOV      r0,r4
;;;679    }
000020  bd10              POP      {r4,pc}
;;;680    
                          ENDP

000022  0000              DCW      0x0000
                  |L10.36|
                          DCD      ||.data||+0x5fc

                          AREA ||i.vag_exit||, CODE, READONLY, ALIGN=1

                  vag_exit PROC
;;;563    {}
;;;564    void vag_exit(uint8_t type)
000000  4770              BX       lr
;;;565    {}
;;;566    void vag_keepalive(uint8_t type)
                          ENDP


                          AREA ||i.vag_init||, CODE, READONLY, ALIGN=1

                  vag_init PROC
;;;561    
;;;562    void vag_init(uint8_t type)
000000  4770              BX       lr
;;;563    {}
;;;564    void vag_exit(uint8_t type)
                          ENDP


                          AREA ||i.vag_keepalive||, CODE, READONLY, ALIGN=1

                  vag_keepalive PROC
;;;565    {}
;;;566    void vag_keepalive(uint8_t type)
000000  4770              BX       lr
;;;567    {}
;;;568    
                          ENDP


                          AREA ||i.vag_setup||, CODE, READONLY, ALIGN=2

                  vag_setup PROC
;;;539    
;;;540    void vag_setup(Vehicles *vehicle)
000000  4911              LDR      r1,|L14.72|
;;;541    {
;;;542        vag_ctrl_ops.control_window = vag_ctrl_window;
000002  4a10              LDR      r2,|L14.68|
;;;543        vag_ctrl_ops.control_door = vag_ctrl_door;
;;;544        vag_ctrl_ops.control_sunroof = vag_ctrl_sunroof;
;;;545        vag_ctrl_ops.control_light = vag_ctrl_light;
;;;546        vag_ctrl_ops.control_trunk = vag_ctrl_trunk;
;;;547        vag_ctrl_ops.control_findcar = vag_ctrl_findcar;
;;;548        vag_ctrl_ops.clear_fault_code = vag_clear_fault_code;
;;;549    
;;;550        vag_data_ops.transfer_data_stream = vag_data_stream;
000004  4b17              LDR      r3,|L14.100|
000006  600a              STR      r2,[r1,#0]            ;543  ; vag_ctrl_ops
000008  4a10              LDR      r2,|L14.76|
00000a  604a              STR      r2,[r1,#4]            ;544  ; vag_ctrl_ops
00000c  4a10              LDR      r2,|L14.80|
00000e  60ca              STR      r2,[r1,#0xc]          ;545  ; vag_ctrl_ops
000010  4a10              LDR      r2,|L14.84|
000012  608a              STR      r2,[r1,#8]            ;546  ; vag_ctrl_ops
000014  4a10              LDR      r2,|L14.88|
000016  610a              STR      r2,[r1,#0x10]         ;547  ; vag_ctrl_ops
000018  4a10              LDR      r2,|L14.92|
00001a  614a              STR      r2,[r1,#0x14]         ;548  ; vag_ctrl_ops
00001c  4a10              LDR      r2,|L14.96|
00001e  618a              STR      r2,[r1,#0x18]  ; vag_ctrl_ops
000020  f101021c          ADD      r2,r1,#0x1c
;;;551        vag_data_ops.is_engine_on = vag_engine_on;
000024  6053              STR      r3,[r2,#4]  ; vag_data_ops
000026  4b10              LDR      r3,|L14.104|
;;;552        vag_data_ops.check_fault_code = vag_check_fault_code;
000028  6013              STR      r3,[r2,#0]  ; vag_data_ops
00002a  4b10              LDR      r3,|L14.108|
;;;553        vag_data_ops.init = vag_init;
00002c  6093              STR      r3,[r2,#8]  ; vag_data_ops
00002e  4b10              LDR      r3,|L14.112|
;;;554        vag_data_ops.exit = vag_exit;
000030  60d3              STR      r3,[r2,#0xc]  ; vag_data_ops
000032  4b10              LDR      r3,|L14.116|
;;;555        vag_data_ops.keepalive = vag_keepalive;
000034  6153              STR      r3,[r2,#0x14]  ; vag_data_ops
000036  4b10              LDR      r3,|L14.120|
000038  6113              STR      r3,[r2,#0x10]  ; vag_data_ops
00003a  e9c02101          STRD     r2,r1,[r0,#4]
;;;556    
;;;557        vehicle->ctrlOps = &vag_ctrl_ops;
;;;558        vehicle->dataOps = &vag_data_ops;
;;;559        vehicle->init = TRUE;
00003e  2101              MOVS     r1,#1
000040  7001              STRB     r1,[r0,#0]
;;;560    }
000042  4770              BX       lr
;;;561    
                          ENDP

                  |L14.68|
                          DCD      vag_ctrl_window
                  |L14.72|
                          DCD      ||.bss||
                  |L14.76|
                          DCD      vag_ctrl_door
                  |L14.80|
                          DCD      vag_ctrl_sunroof
                  |L14.84|
                          DCD      vag_ctrl_light
                  |L14.88|
                          DCD      vag_ctrl_trunk
                  |L14.92|
                          DCD      vag_ctrl_findcar
                  |L14.96|
                          DCD      vag_clear_fault_code
                  |L14.100|
                          DCD      vag_data_stream
                  |L14.104|
                          DCD      vag_engine_on
                  |L14.108|
                          DCD      vag_check_fault_code
                  |L14.112|
                          DCD      vag_init
                  |L14.116|
                          DCD      vag_exit
                  |L14.120|
                          DCD      vag_keepalive

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  vag_ctrl_ops
                          %        28
                  vag_data_ops
                          %        24

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __func__
000000  7661675f          DCB      0x76,0x61,0x67,0x5f
000004  6374726c          DCB      0x63,0x74,0x72,0x6c
000008  5f77696e          DCB      0x5f,0x77,0x69,0x6e
00000c  646f7700          DCB      0x64,0x6f,0x77,0x00
                  |symbol_number.47|
000010  7661675f          DCB      0x76,0x61,0x67,0x5f
000014  6374726c          DCB      0x63,0x74,0x72,0x6c
000018  5f646f6f          DCB      0x5f,0x64,0x6f,0x6f
00001c  7200              DCB      0x72,0x00
                  |symbol_number.48|
00001e  7661              DCB      0x76,0x61
000020  675f6374          DCB      0x67,0x5f,0x63,0x74
000024  726c5f6c          DCB      0x72,0x6c,0x5f,0x6c
000028  69676874          DCB      0x69,0x67,0x68,0x74
00002c  00                DCB      0x00
                  |symbol_number.49|
00002d  766167            DCB      0x76,0x61,0x67
000030  5f637472          DCB      0x5f,0x63,0x74,0x72
000034  6c5f7375          DCB      0x6c,0x5f,0x73,0x75
000038  6e726f6f          DCB      0x6e,0x72,0x6f,0x6f
00003c  6600              DCB      0x66,0x00
                  |symbol_number.50|
00003e  7661              DCB      0x76,0x61
000040  675f6374          DCB      0x67,0x5f,0x63,0x74
000044  726c5f74          DCB      0x72,0x6c,0x5f,0x74
000048  72756e6b          DCB      0x72,0x75,0x6e,0x6b
00004c  00                DCB      0x00
                  |symbol_number.51|
00004d  766167            DCB      0x76,0x61,0x67
000050  5f637472          DCB      0x5f,0x63,0x74,0x72
000054  6c5f6669          DCB      0x6c,0x5f,0x66,0x69
000058  6e646361          DCB      0x6e,0x64,0x63,0x61
00005c  7200              DCB      0x72,0x00
                  |symbol_number.52|
00005e  7661              DCB      0x76,0x61
000060  675f636c          DCB      0x67,0x5f,0x63,0x6c
000064  6561725f          DCB      0x65,0x61,0x72,0x5f
000068  6661756c          DCB      0x66,0x61,0x75,0x6c
00006c  745f636f          DCB      0x74,0x5f,0x63,0x6f
000070  646500            DCB      0x64,0x65,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  vag_rx_buf
                          %        8
                  vagSupportItems
000008  00010101          DCB      0x00,0x01,0x01,0x01
00000c  02010301          DCB      0x02,0x01,0x03,0x01
000010  04010501          DCB      0x04,0x01,0x05,0x01
000014  06010701          DCB      0x06,0x01,0x07,0x01
000018  08010901          DCB      0x08,0x01,0x09,0x01
00001c  0a010b01          DCB      0x0a,0x01,0x0b,0x01
000020  0c010d01          DCB      0x0c,0x01,0x0d,0x01
000024  0e000f00          DCB      0x0e,0x00,0x0f,0x00
000028  10001100          DCB      0x10,0x00,0x11,0x00
00002c  12011301          DCB      0x12,0x01,0x13,0x01
000030  14011500          DCB      0x14,0x01,0x15,0x00
000034  16001700          DCB      0x16,0x00,0x17,0x00
000038  18011901          DCB      0x18,0x01,0x19,0x01
00003c  1a011b00          DCB      0x1a,0x01,0x1b,0x00
000040  1c001d01          DCB      0x1c,0x00,0x1d,0x01
000044  1e011f00          DCB      0x1e,0x01,0x1f,0x00
000048  20002101          DCB      0x20,0x00,0x21,0x01
00004c  22002301          DCB      0x22,0x00,0x23,0x01
000050  24012500          DCB      0x24,0x01,0x25,0x00
000054  26012701          DCB      0x26,0x01,0x27,0x01
000058  28012901          DCB      0x28,0x01,0x29,0x01
00005c  2a012b01          DCB      0x2a,0x01,0x2b,0x01
000060  2c012d00          DCB      0x2c,0x01,0x2d,0x00
000064  2e002f01          DCB      0x2e,0x00,0x2f,0x01
000068  30013101          DCB      0x30,0x01,0x31,0x01
00006c  32003300          DCB      0x32,0x00,0x33,0x00
000070  34010000          DCB      0x34,0x01,0x00,0x00
                          DCD      0x00000000
000078  00000000          DCB      0x00,0x00,0x00,0x00
                  vag_door_off
                          DCD      0x0000074a
                          DCD      0x18db33f1
000084  00000810          DCB      0x00,0x00,0x08,0x10
000088  082f0403          DCB      0x08,0x2f,0x04,0x03
00008c  03ff0100          DCB      0x03,0xff,0x01,0x00
                          DCD      0x0000074a
                          DCD      0x18db33f1
000098  00000821          DCB      0x00,0x00,0x08,0x21
00009c  00005555          DCB      0x00,0x00,0x55,0x55
0000a0  55555500          DCB      0x55,0x55,0x55,0x00
                  vag_door_on
                          DCD      0x0000074a
                          DCD      0x18db33f1
0000ac  00000804          DCB      0x00,0x00,0x08,0x04
0000b0  2f040300          DCB      0x2f,0x04,0x03,0x00
0000b4  55555500          DCB      0x55,0x55,0x55,0x00
                  vag_window_on_fore
                          DCD      0x0000074a
                          DCD      0x18db33f1
0000c0  00000810          DCB      0x00,0x00,0x08,0x10
0000c4  082f0402          DCB      0x08,0x2f,0x04,0x02
0000c8  030a0000          DCB      0x03,0x0a,0x00,0x00
                          DCD      0x0000074a
                          DCD      0x18db33f1
0000d4  00000821          DCB      0x00,0x00,0x08,0x21
0000d8  00005555          DCB      0x00,0x00,0x55,0x55
0000dc  55555500          DCB      0x55,0x55,0x55,0x00
                  vag_window_on_back
                          DCD      0x0000074a
                          DCD      0x18db33f1
0000e8  00000810          DCB      0x00,0x00,0x08,0x10
0000ec  082f0406          DCB      0x08,0x2f,0x04,0x06
0000f0  030a0000          DCB      0x03,0x0a,0x00,0x00
                          DCD      0x0000074a
                          DCD      0x18db33f1
0000fc  00000821          DCB      0x00,0x00,0x08,0x21
000100  00005555          DCB      0x00,0x00,0x55,0x55
000104  55555500          DCB      0x55,0x55,0x55,0x00
                  vag_window_off_fore
                          DCD      0x0000074a
                          DCD      0x18db33f1
000110  00000810          DCB      0x00,0x00,0x08,0x10
000114  082f0401          DCB      0x08,0x2f,0x04,0x01
000118  030a0000          DCB      0x03,0x0a,0x00,0x00
                          DCD      0x0000074a
                          DCD      0x18db33f1
000124  00000821          DCB      0x00,0x00,0x08,0x21
000128  00005555          DCB      0x00,0x00,0x55,0x55
00012c  55555500          DCB      0x55,0x55,0x55,0x00
                  vag_window_off_back
                          DCD      0x0000074a
                          DCD      0x18db33f1
000138  00000810          DCB      0x00,0x00,0x08,0x10
00013c  082f0405          DCB      0x08,0x2f,0x04,0x05
000140  030a0000          DCB      0x03,0x0a,0x00,0x00
                          DCD      0x0000074a
                          DCD      0x18db33f1
00014c  00000821          DCB      0x00,0x00,0x08,0x21
000150  00005555          DCB      0x00,0x00,0x55,0x55
000154  55555500          DCB      0x55,0x55,0x55,0x00
                  vag_trunk_on
                          DCD      0x00000338
                          DCD      0x18db33f1
000160  00000827          DCB      0x00,0x00,0x08,0x27
000164  000631b8          DCB      0x00,0x06,0x31,0xb8
000168  01070100          DCB      0x01,0x07,0x01,0x00
                          DCD      0x00000338
                          DCD      0x18db33f1
000174  00000218          DCB      0x00,0x00,0x02,0x18
000178  49000000          DCB      0x49,0x00,0x00,0x00
00017c  00000000          DCB      0x00,0x00,0x00,0x00
                  vag_alarm_on
                          DCD      0x00000338
                          DCD      0x18db33f1
000188  00000827          DCB      0x00,0x00,0x08,0x27
00018c  000631b8          DCB      0x00,0x06,0x31,0xb8
000190  01070300          DCB      0x01,0x07,0x03,0x00
                          DCD      0x00000338
                          DCD      0x18db33f1
00019c  00000218          DCB      0x00,0x00,0x02,0x18
0001a0  8a000000          DCB      0x8a,0x00,0x00,0x00
0001a4  00000000          DCB      0x00,0x00,0x00,0x00
                  vag_flashlight_on
                          DCD      0x00000338
                          DCD      0x18db33f1
0001b0  00000820          DCB      0x00,0x00,0x08,0x20
0001b4  000631b8          DCB      0x00,0x06,0x31,0xb8
0001b8  01070300          DCB      0x01,0x07,0x03,0x00
                          DCD      0x00000338
                          DCD      0x18db33f1
0001c4  00000211          DCB      0x00,0x00,0x02,0x11
0001c8  8e000000          DCB      0x8e,0x00,0x00,0x00
0001cc  00000000          DCB      0x00,0x00,0x00,0x00
                  vag_sunroof_on
                          DCD      0x00000338
                          DCD      0x18db33f1
0001d8  00000827          DCB      0x00,0x00,0x08,0x27
0001dc  000631b8          DCB      0x00,0x06,0x31,0xb8
0001e0  01070300          DCB      0x01,0x07,0x03,0x00
                          DCD      0x00000338
                          DCD      0x18db33f1
0001ec  00000218          DCB      0x00,0x00,0x02,0x18
0001f0  b4000000          DCB      0xb4,0x00,0x00,0x00
0001f4  00000000          DCB      0x00,0x00,0x00,0x00
                  vagStdDs
0001f8  0000              DCB      0x00,0x00
0001fa  07e0              DCW      0x07e0
0001fc  080322f4          DCB      0x08,0x03,0x22,0xf4
000200  0c555555          DCB      0x0c,0x55,0x55,0x55
000204  5500              DCB      0x55,0x00
000206  07e8              DCW      0x07e8
000208  03020100          DCB      0x03,0x02,0x01,0x00
00020c  07e0              DCW      0x07e0
00020e  0803              DCB      0x08,0x03
000210  22f40d55          DCB      0x22,0xf4,0x0d,0x55
000214  55555500          DCB      0x55,0x55,0x55,0x00
000218  07e8              DCW      0x07e8
00021a  0301              DCB      0x03,0x01
00021c  0200              DCB      0x02,0x00
00021e  07e0              DCW      0x07e0
000220  080322f4          DCB      0x08,0x03,0x22,0xf4
000224  05555555          DCB      0x05,0x55,0x55,0x55
000228  5500              DCB      0x55,0x00
00022a  07e8              DCW      0x07e8
00022c  03010300          DCB      0x03,0x01,0x03,0x00
000230  07e0              DCW      0x07e0
000232  0803              DCB      0x08,0x03
000234  22f40f55          DCB      0x22,0xf4,0x0f,0x55
000238  55555500          DCB      0x55,0x55,0x55,0x00
00023c  07e8              DCW      0x07e8
00023e  0301              DCB      0x03,0x01
000240  0400              DCB      0x04,0x00
000242  07e0              DCW      0x07e0
000244  08032210          DCB      0x08,0x03,0x22,0x10
000248  26555555          DCB      0x26,0x55,0x55,0x55
00024c  5500              DCB      0x55,0x00
00024e  07e8              DCW      0x07e8
000250  03020500          DCB      0x03,0x02,0x05,0x00
000254  07e0              DCW      0x07e0
000256  0803              DCB      0x08,0x03
000258  22f44355          DCB      0x22,0xf4,0x43,0x55
00025c  55555500          DCB      0x55,0x55,0x55,0x00
000260  07e8              DCW      0x07e8
000262  0302              DCB      0x03,0x02
000264  0600              DCB      0x06,0x00
000266  07e0              DCW      0x07e0
000268  08032238          DCB      0x08,0x03,0x22,0x38
00026c  87555555          DCB      0x87,0x55,0x55,0x55
000270  5500              DCB      0x55,0x00
000272  07e8              DCW      0x07e8
000274  03040700          DCB      0x03,0x04,0x07,0x00
000278  07e0              DCW      0x07e0
00027a  0803              DCB      0x08,0x03
00027c  22101c55          DCB      0x22,0x10,0x1c,0x55
000280  55555500          DCB      0x55,0x55,0x55,0x00
000284  07e8              DCW      0x07e8
000286  0302              DCB      0x03,0x02
000288  0800              DCB      0x08,0x00
00028a  07e0              DCW      0x07e0
00028c  080322f4          DCB      0x08,0x03,0x22,0xf4
000290  07555555          DCB      0x07,0x55,0x55,0x55
000294  5500              DCB      0x55,0x00
000296  07e8              DCW      0x07e8
000298  03010900          DCB      0x03,0x01,0x09,0x00
00029c  07e0              DCW      0x07e0
00029e  0803              DCB      0x08,0x03
0002a0  22f40655          DCB      0x22,0xf4,0x06,0x55
0002a4  55555500          DCB      0x55,0x55,0x55,0x00
0002a8  07e8              DCW      0x07e8
0002aa  0301              DCB      0x03,0x01
0002ac  0a00              DCB      0x0a,0x00
0002ae  07e0              DCW      0x07e0
0002b0  08032211          DCB      0x08,0x03,0x22,0x11
0002b4  4f555555          DCB      0x4f,0x55,0x55,0x55
0002b8  5500              DCB      0x55,0x00
0002ba  07e8              DCW      0x07e8
0002bc  03020b00          DCB      0x03,0x02,0x0b,0x00
0002c0  07e0              DCW      0x07e0
0002c2  0803              DCB      0x08,0x03
0002c4  22115255          DCB      0x22,0x11,0x52,0x55
0002c8  55555500          DCB      0x55,0x55,0x55,0x00
0002cc  07e8              DCW      0x07e8
0002ce  0302              DCB      0x03,0x02
0002d0  0c00              DCB      0x0c,0x00
0002d2  07e0              DCW      0x07e0
0002d4  08032211          DCB      0x08,0x03,0x22,0x11
0002d8  50555555          DCB      0x50,0x55,0x55,0x55
0002dc  5500              DCB      0x55,0x00
0002de  07e8              DCW      0x07e8
0002e0  03020d00          DCB      0x03,0x02,0x0d,0x00
0002e4  07e0              DCW      0x07e0
0002e6  0803              DCB      0x08,0x03
0002e8  22115155          DCB      0x22,0x11,0x51,0x55
0002ec  55555500          DCB      0x55,0x55,0x55,0x00
0002f0  07e8              DCW      0x07e8
0002f2  0302              DCB      0x03,0x02
0002f4  0e00              DCB      0x0e,0x00
0002f6  07df              DCW      0x07df
0002f8  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000300  0000              DCB      0x00,0x00
000302  0000              DCW      0x0000
000304  00000f00          DCB      0x00,0x00,0x0f,0x00
000308  07df              DCW      0x07df
00030a  0800              DCB      0x08,0x00
                          DCD      0x00000000
000310  00000000          DCB      0x00,0x00,0x00,0x00
000314  0000              DCW      0x0000
000316  0000              DCB      0x00,0x00
000318  1000              DCB      0x10,0x00
00031a  07df              DCW      0x07df
00031c  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000324  0000              DCB      0x00,0x00
000326  0000              DCW      0x0000
000328  00001100          DCB      0x00,0x00,0x11,0x00
00032c  07df              DCW      0x07df
00032e  0800              DCB      0x08,0x00
                          DCD      0x00000000
000334  00000000          DCB      0x00,0x00,0x00,0x00
000338  0000              DCW      0x0000
00033a  0000              DCB      0x00,0x00
00033c  1200              DCB      0x12,0x00
00033e  07e0              DCW      0x07e0
000340  080322f4          DCB      0x08,0x03,0x22,0xf4
000344  14555555          DCB      0x14,0x55,0x55,0x55
000348  5500              DCB      0x55,0x00
00034a  07e8              DCW      0x07e8
00034c  03011300          DCB      0x03,0x01,0x13,0x00
000350  07e0              DCW      0x07e0
000352  0803              DCB      0x08,0x03
000354  22f41555          DCB      0x22,0xf4,0x15,0x55
000358  55555500          DCB      0x55,0x55,0x55,0x00
00035c  07e8              DCW      0x07e8
00035e  0301              DCB      0x03,0x01
000360  1400              DCB      0x14,0x00
000362  07e0              DCW      0x07e0
000364  080322f4          DCB      0x08,0x03,0x22,0xf4
000368  0b555555          DCB      0x0b,0x55,0x55,0x55
00036c  5500              DCB      0x55,0x00
00036e  07e8              DCW      0x07e8
000370  03011500          DCB      0x03,0x01,0x15,0x00
000374  07df              DCW      0x07df
000376  0800              DCB      0x08,0x00
                          DCD      0x00000000
00037c  00000000          DCB      0x00,0x00,0x00,0x00
000380  0000              DCW      0x0000
000382  0000              DCB      0x00,0x00
000384  1600              DCB      0x16,0x00
000386  07df              DCW      0x07df
000388  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000390  0000              DCB      0x00,0x00
000392  0000              DCW      0x0000
000394  00001700          DCB      0x00,0x00,0x17,0x00
000398  07df              DCW      0x07df
00039a  0800              DCB      0x08,0x00
                          DCD      0x00000000
0003a0  00000000          DCB      0x00,0x00,0x00,0x00
0003a4  0000              DCW      0x0000
0003a6  0000              DCB      0x00,0x00
0003a8  1800              DCB      0x18,0x00
0003aa  07e0              DCW      0x07e0
0003ac  08032211          DCB      0x08,0x03,0x22,0x11
0003b0  19555555          DCB      0x19,0x55,0x55,0x55
0003b4  5500              DCB      0x55,0x00
0003b6  07e8              DCW      0x07e8
0003b8  03021900          DCB      0x03,0x02,0x19,0x00
0003bc  07e0              DCW      0x07e0
0003be  0803              DCB      0x08,0x03
0003c0  22f41e55          DCB      0x22,0xf4,0x1e,0x55
0003c4  55555500          DCB      0x55,0x55,0x55,0x00
0003c8  07e8              DCW      0x07e8
0003ca  0301              DCB      0x03,0x01
0003cc  1a00              DCB      0x1a,0x00
0003ce  07e0              DCW      0x07e0
0003d0  08032211          DCB      0x08,0x03,0x22,0x11
0003d4  ac555555          DCB      0xac,0x55,0x55,0x55
0003d8  5500              DCB      0x55,0x00
0003da  07e8              DCW      0x07e8
0003dc  03021b00          DCB      0x03,0x02,0x1b,0x00
0003e0  07df              DCW      0x07df
0003e2  0800              DCB      0x08,0x00
                          DCD      0x00000000
0003e8  00000000          DCB      0x00,0x00,0x00,0x00
0003ec  0000              DCW      0x0000
0003ee  0000              DCB      0x00,0x00
0003f0  1c00              DCB      0x1c,0x00
0003f2  07df              DCW      0x07df
0003f4  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
0003fc  0000              DCB      0x00,0x00
0003fe  0000              DCW      0x0000
000400  00001d00          DCB      0x00,0x00,0x1d,0x00
000404  07e0              DCW      0x07e0
000406  0803              DCB      0x08,0x03
000408  2214b455          DCB      0x22,0x14,0xb4,0x55
00040c  55555500          DCB      0x55,0x55,0x55,0x00
000410  07e8              DCW      0x07e8
000412  0302              DCB      0x03,0x02
000414  1e00              DCB      0x1e,0x00
000416  07e0              DCW      0x07e0
000418  08032214          DCB      0x08,0x03,0x22,0x14
00041c  b4555555          DCB      0xb4,0x55,0x55,0x55
000420  5500              DCB      0x55,0x00
000422  07e8              DCW      0x07e8
000424  03021f00          DCB      0x03,0x02,0x1f,0x00
000428  07c0              DCW      0x07c0
00042a  0800              DCB      0x08,0x00
                          DCD      0x00000000
000430  00000000          DCB      0x00,0x00,0x00,0x00
000434  0000              DCW      0x0000
000436  0000              DCB      0x00,0x00
000438  2000              DCB      0x20,0x00
00043a  07e0              DCW      0x07e0
00043c  08032211          DCB      0x08,0x03,0x22,0x11
000440  3f555555          DCB      0x3f,0x55,0x55,0x55
000444  5500              DCB      0x55,0x00
000446  07e8              DCW      0x07e8
000448  03022100          DCB      0x03,0x02,0x21,0x00
00044c  07e1              DCW      0x07e1
00044e  0803              DCB      0x08,0x03
000450  22210455          DCB      0x22,0x21,0x04,0x55
000454  55555500          DCB      0x55,0x55,0x55,0x00
000458  07e9              DCW      0x07e9
00045a  0301              DCB      0x03,0x01
00045c  2200              DCB      0x22,0x00
00045e  07b0              DCW      0x07b0
000460  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000468  0000              DCB      0x00,0x00
00046a  0000              DCW      0x0000
00046c  00002300          DCB      0x00,0x00,0x23,0x00
000470  0710              DCW      0x0710
000472  0803              DCB      0x08,0x03
000474  222a0f55          DCB      0x22,0x2a,0x0f,0x55
000478  55555500          DCB      0x55,0x55,0x55,0x00
00047c  077a              DCW      0x077a
00047e  0301              DCB      0x03,0x01
000480  2400              DCB      0x24,0x00
000482  0710              DCW      0x0710
000484  0803222a          DCB      0x08,0x03,0x22,0x2a
000488  09555555          DCB      0x09,0x55,0x55,0x55
00048c  5500              DCB      0x55,0x00
00048e  077a              DCW      0x077a
000490  03042500          DCB      0x03,0x04,0x25,0x00
000494  07b0              DCW      0x07b0
000496  0800              DCB      0x08,0x00
                          DCD      0x00000000
00049c  00000000          DCB      0x00,0x00,0x00,0x00
0004a0  0000              DCW      0x0000
0004a2  0000              DCB      0x00,0x00
0004a4  2600              DCB      0x26,0x00
0004a6  0710              DCW      0x0710
0004a8  0803222a          DCB      0x08,0x03,0x22,0x2a
0004ac  07555555          DCB      0x07,0x55,0x55,0x55
0004b0  5500              DCB      0x55,0x00
0004b2  077a              DCW      0x077a
0004b4  03022700          DCB      0x03,0x02,0x27,0x00
0004b8  074a              DCW      0x074a
0004ba  0803              DCB      0x08,0x03
0004bc  22194455          DCB      0x22,0x19,0x44,0x55
0004c0  55555500          DCB      0x55,0x55,0x55,0x00
0004c4  07b4              DCW      0x07b4
0004c6  0301              DCB      0x03,0x01
0004c8  2800              DCB      0x28,0x00
0004ca  074b              DCW      0x074b
0004cc  08032219          DCB      0x08,0x03,0x22,0x19
0004d0  48555555          DCB      0x48,0x55,0x55,0x55
0004d4  5500              DCB      0x55,0x00
0004d6  07b5              DCW      0x07b5
0004d8  03012900          DCB      0x03,0x01,0x29,0x00
0004dc  070e              DCW      0x070e
0004de  0803              DCB      0x08,0x03
0004e0  22195055          DCB      0x22,0x19,0x50,0x55
0004e4  55555500          DCB      0x55,0x55,0x55,0x00
0004e8  0778              DCW      0x0778
0004ea  0301              DCB      0x03,0x01
0004ec  2a00              DCB      0x2a,0x00
0004ee  070e              DCW      0x070e
0004f0  08032219          DCB      0x08,0x03,0x22,0x19
0004f4  4c555555          DCB      0x4c,0x55,0x55,0x55
0004f8  5500              DCB      0x55,0x00
0004fa  0778              DCW      0x0778
0004fc  03012b00          DCB      0x03,0x01,0x2b,0x00
000500  070e              DCW      0x070e
000502  0803              DCB      0x08,0x03
000504  22198155          DCB      0x22,0x19,0x81,0x55
000508  55555500          DCB      0x55,0x55,0x55,0x00
00050c  0778              DCW      0x0778
00050e  0401              DCB      0x04,0x01
000510  2c00              DCB      0x2c,0x00
000512  074a              DCW      0x074a
000514  08032219          DCB      0x08,0x03,0x22,0x19
000518  43555555          DCB      0x43,0x55,0x55,0x55
00051c  5500              DCB      0x55,0x00
00051e  07b4              DCW      0x07b4
000520  03012d00          DCB      0x03,0x01,0x2d,0x00
000524  0750              DCW      0x0750
000526  0800              DCB      0x08,0x00
                          DCD      0x00000000
00052c  00000000          DCB      0x00,0x00,0x00,0x00
000530  0000              DCW      0x0000
000532  0000              DCB      0x00,0x00
000534  2e00              DCB      0x2e,0x00
000536  0750              DCW      0x0750
000538  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000540  0000              DCB      0x00,0x00
000542  0000              DCW      0x0000
000544  00002f00          DCB      0x00,0x00,0x2f,0x00
000548  070e              DCW      0x070e
00054a  0803              DCB      0x08,0x03
00054c  22191355          DCB      0x22,0x19,0x13,0x55
000550  55555500          DCB      0x55,0x55,0x55,0x00
000554  0778              DCW      0x0778
000556  0301              DCB      0x03,0x01
000558  3000              DCB      0x30,0x00
00055a  074a              DCW      0x074a
00055c  08032219          DCB      0x08,0x03,0x22,0x19
000560  43555555          DCB      0x43,0x55,0x55,0x55
000564  5500              DCB      0x55,0x00
000566  07b4              DCW      0x07b4
000568  05013100          DCB      0x05,0x01,0x31,0x00
00056c  074a              DCW      0x074a
00056e  0803              DCB      0x08,0x03
000570  22194355          DCB      0x22,0x19,0x43,0x55
000574  55555500          DCB      0x55,0x55,0x55,0x00
000578  07b4              DCW      0x07b4
00057a  0501              DCB      0x05,0x01
00057c  3200              DCB      0x32,0x00
00057e  07c0              DCW      0x07c0
000580  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x00000000
000588  0000              DCB      0x00,0x00
00058a  0000              DCW      0x0000
00058c  00003300          DCB      0x00,0x00,0x33,0x00
000590  07c0              DCW      0x07c0
000592  0800              DCB      0x08,0x00
                          DCD      0x00000000
000598  00000000          DCB      0x00,0x00,0x00,0x00
00059c  0000              DCW      0x0000
00059e  0000              DCB      0x00,0x00
0005a0  3400              DCB      0x34,0x00
0005a2  07e0              DCW      0x07e0
0005a4  08032211          DCB      0x08,0x03,0x22,0x11
0005a8  60555555          DCB      0x60,0x55,0x55,0x55
0005ac  5500              DCB      0x55,0x00
0005ae  07e8              DCW      0x07e8
0005b0  03040000          DCB      0x03,0x04,0x00,0x00
                          %        68
0005f8  00000000          DCB      0x00,0x00,0x00,0x00
                  vagEngineCmd
                          DCD      0x000007df
                          DCD      0x18db33f1
000604  00000802          DCB      0x00,0x00,0x08,0x02
000608  01000000          DCB      0x01,0x00,0x00,0x00
00060c  00000000          DCB      0x00,0x00,0x00,0x00

                          AREA ||area_number.20||, DATA, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.data||
                  vag_lamp_on
                          DCD      0x0000074a
                          DCD      0x18db33f1
000008  00000810          DCB      0x00,0x00,0x08,0x10
00000c  082f0403          DCB      0x08,0x2f,0x04,0x03
000010  030a0000          DCB      0x03,0x0a,0x00,0x00
                          DCD      0x0000074a
                          DCD      0x18db33f1
00001c  00000821          DCB      0x00,0x00,0x08,0x21
000020  00005555          DCB      0x00,0x00,0x55,0x55
000024  55555500          DCB      0x55,0x55,0x55,0x00

                          AREA ||area_number.21||, DATA, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.data||
                  vag_lamp_off
                          DCD      0x0000074a
                          DCD      0x18db33f1
000008  00000804          DCB      0x00,0x00,0x08,0x04
00000c  2f040000          DCB      0x2f,0x04,0x00,0x00
000010  55555500          DCB      0x55,0x55,0x55,0x00
